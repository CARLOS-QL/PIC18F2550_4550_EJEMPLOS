

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Sat Mar 19 19:34:22 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    16                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    17                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    18                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    19                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    20                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    22  0000                     
    23                           ; Version 2.40
    24                           ; Generated 17/11/2021 GMT
    25                           ; 
    26                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution. Publication is not required when
    40                           ;        this file is used in an embedded application.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC18F4550 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58  0000                     
    59                           	psect	idataCOMRAM
    60  00020E                     __pidataCOMRAM:
    61                           	callstack 0
    62                           
    63                           ;initializer for _display
    64  00020E  3F                 	db	63
    65  00020F  06                 	db	6
    66  000210  5B                 	db	91
    67  000211  4F                 	db	79
    68  000212  66                 	db	102
    69  000213  6D                 	db	109
    70  000214  7D                 	db	125
    71  000215  07                 	db	7
    72  000216  7F                 	db	127
    73  000217  6F                 	db	111
    74                           
    75                           ;initializer for _numDisplay
    76  000218  01                 	db	1
    77  000219  02                 	db	2
    78  00021A  04                 	db	4
    79  00021B  08                 	db	8
    80                           
    81                           ;initializer for _contador
    82  00021C  12AD               	dw	4781
    83  0000                     _TMR1ON	set	32360
    84  0000                     _T1SYNC	set	32362
    85  0000                     _T1CKPS0	set	32364
    86  0000                     _T1CKPS1	set	32365
    87  0000                     _T1OSCEN	set	32363
    88  0000                     _PEIE	set	32662
    89  0000                     _PORTB	set	3969
    90  0000                     _LATB	set	3978
    91  0000                     _LATD	set	3980
    92  0000                     _TMR1IF	set	31984
    93  0000                     _TMR1	set	4046
    94  0000                     _TMR1CS	set	32361
    95  0000                     _GIE	set	32663
    96  0000                     _TRISB	set	3987
    97  0000                     _TRISD	set	3989
    98  0000                     _TMR1IE	set	31976
    99                           
   100                           ; #config settings
   101                           
   102                           	psect	cinit
   103  00018E                     __pcinit:
   104                           	callstack 0
   105  00018E                     start_initialization:
   106                           	callstack 0
   107  00018E                     __initialization:
   108                           	callstack 0
   109                           
   110                           ; Initialize objects allocated to COMRAM (16 bytes)
   111                           ; load TBLPTR registers with __pidataCOMRAM
   112  00018E  0E0E               	movlw	low __pidataCOMRAM
   113  000190  6EF6               	movwf	tblptrl,c
   114  000192  0E02               	movlw	high __pidataCOMRAM
   115  000194  6EF7               	movwf	tblptrh,c
   116  000196  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   117  000198  6EF8               	movwf	tblptru,c
   118  00019A  EE00  F001         	lfsr	0,__pdataCOMRAM
   119  00019E  EE10 F010          	lfsr	1,16
   120  0001A2                     copy_data0:
   121  0001A2  0009               	tblrd		*+
   122  0001A4  CFF5 FFEE          	movff	tablat,postinc0
   123  0001A8  50E5               	movf	postdec1,w,c
   124  0001AA  50E1               	movf	fsr1l,w,c
   125  0001AC  E1FA               	bnz	copy_data0
   126                           
   127                           ; Clear objects allocated to COMRAM (5 bytes)
   128  0001AE  6A1F               	clrf	(__pbssCOMRAM+4)& (0+255),c
   129  0001B0  6A1E               	clrf	(__pbssCOMRAM+3)& (0+255),c
   130  0001B2  6A1D               	clrf	(__pbssCOMRAM+2)& (0+255),c
   131  0001B4  6A1C               	clrf	(__pbssCOMRAM+1)& (0+255),c
   132  0001B6  6A1B               	clrf	__pbssCOMRAM& (0+255),c
   133  0001B8                     end_of_initialization:
   134                           	callstack 0
   135  0001B8                     __end_of__initialization:
   136                           	callstack 0
   137  0001B8  9020               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   138  0001BA  9220               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   139  0001BC  0100               	movlb	0
   140  0001BE  EF7F  F000         	goto	_main	;jump to C main() function
   141                           
   142                           	psect	bssCOMRAM
   143  00001B                     __pbssCOMRAM:
   144                           	callstack 0
   145  00001B                     _digito:
   146                           	callstack 0
   147  00001B                     	ds	4
   148  00001F                     _conteo:
   149                           	callstack 0
   150  00001F                     	ds	1
   151                           
   152                           	psect	dataCOMRAM
   153  000001                     __pdataCOMRAM:
   154                           	callstack 0
   155  000001                     _display:
   156                           	callstack 0
   157  000001                     	ds	10
   158  00000B                     _numDisplay:
   159                           	callstack 0
   160  00000B                     	ds	4
   161  00000F                     _contador:
   162                           	callstack 0
   163  00000F                     	ds	2
   164                           
   165                           	psect	cstackCOMRAM
   166  000011                     __pcstackCOMRAM:
   167                           	callstack 0
   168  000011                     ??_mostrarDato:
   169  000011                     ?___lwdiv:
   170                           	callstack 0
   171  000011                     ?___lwmod:
   172                           	callstack 0
   173  000011                     ___lwdiv@dividend:
   174                           	callstack 0
   175  000011                     ___lwmod@dividend:
   176                           	callstack 0
   177                           
   178                           ; 2 bytes @ 0x0
   179  000011                     	ds	2
   180  000013                     ___lwdiv@divisor:
   181                           	callstack 0
   182  000013                     ___lwmod@divisor:
   183                           	callstack 0
   184                           
   185                           ; 2 bytes @ 0x2
   186  000013                     	ds	2
   187  000015                     ___lwmod@counter:
   188                           	callstack 0
   189  000015                     ___lwdiv@quotient:
   190                           	callstack 0
   191                           
   192                           ; 2 bytes @ 0x4
   193  000015                     	ds	2
   194  000017                     ___lwdiv@counter:
   195                           	callstack 0
   196                           
   197                           ; 1 bytes @ 0x6
   198  000017                     	ds	1
   199  000018                     descomponerNumero@numero:
   200                           	callstack 0
   201                           
   202                           ; 2 bytes @ 0x7
   203  000018                     	ds	2
   204  00001A                     ??_main:
   205                           
   206                           ; 1 bytes @ 0x9
   207  00001A                     	ds	1
   208                           
   209 ;;
   210 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   211 ;;
   212 ;; *************** function _main *****************
   213 ;; Defined at:
   214 ;;		line 125 in file "main.c"
   215 ;; Parameters:    Size  Location     Type
   216 ;;		None
   217 ;; Auto vars:     Size  Location     Type
   218 ;;		None
   219 ;; Return value:  Size  Location     Type
   220 ;;                  1    wreg      void 
   221 ;; Registers used:
   222 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   223 ;; Tracked objects:
   224 ;;		On entry : 0/0
   225 ;;		On exit  : 0/0
   226 ;;		Unchanged: 0/0
   227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   228 ;;      Params:         0       0       0       0       0       0       0       0       0
   229 ;;      Locals:         0       0       0       0       0       0       0       0       0
   230 ;;      Temps:          1       0       0       0       0       0       0       0       0
   231 ;;      Totals:         1       0       0       0       0       0       0       0       0
   232 ;;Total ram usage:        1 bytes
   233 ;; Hardware stack levels required when called: 3
   234 ;; This function calls:
   235 ;;		_descomponerNumero
   236 ;;		_mostrarDato
   237 ;; This function is called by:
   238 ;;		Startup code after reset
   239 ;; This function uses a non-reentrant model
   240 ;;
   241                           
   242                           	psect	text0
   243  0000FE                     __ptext0:
   244                           	callstack 0
   245  0000FE                     _main:
   246                           	callstack 28
   247                           
   248                           ;main.c: 128: TRISD = 0;
   249                           
   250                           ;incstack = 0
   251  0000FE  0E00               	movlw	0
   252  000100  6E95               	movwf	149,c	;volatile
   253                           
   254                           ;main.c: 129: LATD = 0;
   255  000102  0E00               	movlw	0
   256  000104  6E8C               	movwf	140,c	;volatile
   257                           
   258                           ;main.c: 130: TRISB = 0;
   259  000106  0E00               	movlw	0
   260  000108  6E93               	movwf	147,c	;volatile
   261                           
   262                           ;main.c: 131: PORTB = 0;
   263  00010A  0E00               	movlw	0
   264  00010C  6E81               	movwf	129,c	;volatile
   265                           
   266                           ;main.c: 133: GIE = 1;
   267  00010E  8EF2               	bsf	4082,7,c	;volatile
   268                           
   269                           ;main.c: 134: PEIE = 1;
   270  000110  8CF2               	bsf	4082,6,c	;volatile
   271                           
   272                           ;main.c: 135: TMR1IF = 0;
   273  000112  909E               	bcf	3998,0,c	;volatile
   274                           
   275                           ;main.c: 136: TMR1IE = 1;
   276  000114  809D               	bsf	3997,0,c	;volatile
   277                           
   278                           ;main.c: 140: TMR1CS = 1;
   279  000116  82CD               	bsf	4045,1,c	;volatile
   280                           
   281                           ;main.c: 141: T1OSCEN = 1;
   282  000118  86CD               	bsf	4045,3,c	;volatile
   283                           
   284                           ;main.c: 143: T1CKPS1 = 0;
   285  00011A  9ACD               	bcf	4045,5,c	;volatile
   286                           
   287                           ;main.c: 144: T1CKPS0 = 0;
   288  00011C  98CD               	bcf	4045,4,c	;volatile
   289                           
   290                           ;main.c: 146: T1SYNC = 1;
   291  00011E  84CD               	bsf	4045,2,c	;volatile
   292                           
   293                           ;main.c: 148: TMR1 = 0X8000;
   294  000120  0E80               	movlw	128
   295  000122  6ECF               	movwf	207,c	;volatile
   296  000124  0E00               	movlw	0
   297  000126  6ECE               	movwf	206,c	;volatile
   298                           
   299                           ;main.c: 150: TMR1ON = 1;
   300  000128  80CD               	bsf	4045,0,c	;volatile
   301  00012A                     l959:
   302                           
   303                           ;main.c: 162: descomponerNumero(contador);
   304  00012A  C00F  F018         	movff	_contador,descomponerNumero@numero	;volatile
   305  00012E  C010  F019         	movff	_contador+1,descomponerNumero@numero+1	;volatile
   306  000132  EC09  F000         	call	_descomponerNumero	;wreg free
   307                           
   308                           ;main.c: 163: mostrarDato();
   309  000136  ECE1  F000         	call	_mostrarDato	;wreg free
   310                           
   311                           ;main.c: 164: _delay((unsigned long)((1)*(20000000/4000.0)));
   312  00013A  0E07               	movlw	7
   313  00013C  6E1A               	movwf	??_main^0,c
   314  00013E  0E7D               	movlw	125
   315  000140                     u157:
   316  000140  2EE8               	decfsz	wreg,f,c
   317  000142  D7FE               	bra	u157
   318  000144  2E1A               	decfsz	??_main^0,f,c
   319  000146  D7FC               	bra	u157
   320  000148  F000               	nop	
   321  00014A  D7EF               	goto	l959
   322  00014C                     __end_of_main:
   323                           	callstack 0
   324                           
   325 ;; *************** function _mostrarDato *****************
   326 ;; Defined at:
   327 ;;		line 118 in file "main.c"
   328 ;; Parameters:    Size  Location     Type
   329 ;;		None
   330 ;; Auto vars:     Size  Location     Type
   331 ;;		None
   332 ;; Return value:  Size  Location     Type
   333 ;;                  1    wreg      void 
   334 ;; Registers used:
   335 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   336 ;; Tracked objects:
   337 ;;		On entry : 0/0
   338 ;;		On exit  : 0/0
   339 ;;		Unchanged: 0/0
   340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   341 ;;      Params:         0       0       0       0       0       0       0       0       0
   342 ;;      Locals:         0       0       0       0       0       0       0       0       0
   343 ;;      Temps:          1       0       0       0       0       0       0       0       0
   344 ;;      Totals:         1       0       0       0       0       0       0       0       0
   345 ;;Total ram usage:        1 bytes
   346 ;; Hardware stack levels used: 1
   347 ;; Hardware stack levels required when called: 1
   348 ;; This function calls:
   349 ;;		Nothing
   350 ;; This function is called by:
   351 ;;		_main
   352 ;; This function uses a non-reentrant model
   353 ;;
   354                           
   355                           	psect	text1
   356  0001C2                     __ptext1:
   357                           	callstack 0
   358  0001C2                     _mostrarDato:
   359                           	callstack 29
   360                           
   361                           ;main.c: 119: LATD = display[digito[conteo]];
   362                           
   363                           ;incstack = 0
   364  0001C2  501F               	movf	_conteo^0,w,c
   365  0001C4  0F1B               	addlw	low _digito
   366  0001C6  6ED9               	movwf	fsr2l,c
   367  0001C8  6ADA               	clrf	fsr2h,c
   368  0001CA  50DF               	movf	indf2,w,c
   369  0001CC  6E11               	movwf	??_mostrarDato^0,c
   370  0001CE  5011               	movf	??_mostrarDato^0,w,c
   371  0001D0  0F01               	addlw	low _display
   372  0001D2  6ED9               	movwf	fsr2l,c
   373  0001D4  6ADA               	clrf	fsr2h,c
   374  0001D6  50DF               	movf	indf2,w,c
   375  0001D8  6E8C               	movwf	140,c	;volatile
   376                           
   377                           ;main.c: 120: LATB = numDisplay[conteo];
   378  0001DA  501F               	movf	_conteo^0,w,c
   379  0001DC  0F0B               	addlw	low _numDisplay
   380  0001DE  6ED9               	movwf	fsr2l,c
   381  0001E0  6ADA               	clrf	fsr2h,c
   382  0001E2  50DF               	movf	indf2,w,c
   383  0001E4  6E8A               	movwf	138,c	;volatile
   384                           
   385                           ;main.c: 122: conteo++;
   386  0001E6  2A1F               	incf	_conteo^0,f,c
   387                           
   388                           ;main.c: 123: if(conteo==4) conteo =0;
   389  0001E8  0E04               	movlw	4
   390  0001EA  181F               	xorwf	_conteo^0,w,c
   391  0001EC  A4D8               	btfss	status,2,c
   392  0001EE  0012               	return	
   393  0001F0  0E00               	movlw	0
   394  0001F2  6E1F               	movwf	_conteo^0,c
   395  0001F4  0012               	return		;funcret
   396  0001F6                     __end_of_mostrarDato:
   397                           	callstack 0
   398                           
   399 ;; *************** function _descomponerNumero *****************
   400 ;; Defined at:
   401 ;;		line 106 in file "main.c"
   402 ;; Parameters:    Size  Location     Type
   403 ;;  numero          2    7[COMRAM] unsigned int 
   404 ;; Auto vars:     Size  Location     Type
   405 ;;		None
   406 ;; Return value:  Size  Location     Type
   407 ;;                  1    wreg      void 
   408 ;; Registers used:
   409 ;;		wreg, status,2, status,0, cstack
   410 ;; Tracked objects:
   411 ;;		On entry : 0/0
   412 ;;		On exit  : 0/0
   413 ;;		Unchanged: 0/0
   414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   415 ;;      Params:         2       0       0       0       0       0       0       0       0
   416 ;;      Locals:         0       0       0       0       0       0       0       0       0
   417 ;;      Temps:          0       0       0       0       0       0       0       0       0
   418 ;;      Totals:         2       0       0       0       0       0       0       0       0
   419 ;;Total ram usage:        2 bytes
   420 ;; Hardware stack levels used: 1
   421 ;; Hardware stack levels required when called: 2
   422 ;; This function calls:
   423 ;;		___lwdiv
   424 ;;		___lwmod
   425 ;; This function is called by:
   426 ;;		_main
   427 ;; This function uses a non-reentrant model
   428 ;;
   429                           
   430                           	psect	text2
   431  000012                     __ptext2:
   432                           	callstack 0
   433  000012                     _descomponerNumero:
   434                           	callstack 28
   435                           
   436                           ;main.c: 108: digito[0] = numero/1000;
   437                           
   438                           ;incstack = 0
   439  000012  C018  F011         	movff	descomponerNumero@numero,___lwdiv@dividend
   440  000016  C019  F012         	movff	descomponerNumero@numero+1,___lwdiv@dividend+1
   441  00001A  0E03               	movlw	3
   442  00001C  6E14               	movwf	(___lwdiv@divisor+1)^0,c
   443  00001E  0EE8               	movlw	232
   444  000020  6E13               	movwf	___lwdiv@divisor^0,c
   445  000022  EC56  F000         	call	___lwdiv	;wreg free
   446  000026  5011               	movf	?___lwdiv^0,w,c
   447  000028  6E1B               	movwf	_digito^0,c
   448                           
   449                           ;main.c: 109: numero = numero % 1000;
   450  00002A  C018  F011         	movff	descomponerNumero@numero,___lwmod@dividend
   451  00002E  C019  F012         	movff	descomponerNumero@numero+1,___lwmod@dividend+1
   452  000032  0E03               	movlw	3
   453  000034  6E14               	movwf	(___lwmod@divisor+1)^0,c
   454  000036  0EE8               	movlw	232
   455  000038  6E13               	movwf	___lwmod@divisor^0,c
   456  00003A  ECA6  F000         	call	___lwmod	;wreg free
   457  00003E  C011  F018         	movff	?___lwmod,descomponerNumero@numero
   458  000042  C012  F019         	movff	?___lwmod+1,descomponerNumero@numero+1
   459                           
   460                           ;main.c: 110: digito[1] = numero/100;
   461  000046  C018  F011         	movff	descomponerNumero@numero,___lwdiv@dividend
   462  00004A  C019  F012         	movff	descomponerNumero@numero+1,___lwdiv@dividend+1
   463  00004E  0E00               	movlw	0
   464  000050  6E14               	movwf	(___lwdiv@divisor+1)^0,c
   465  000052  0E64               	movlw	100
   466  000054  6E13               	movwf	___lwdiv@divisor^0,c
   467  000056  EC56  F000         	call	___lwdiv	;wreg free
   468  00005A  5011               	movf	?___lwdiv^0,w,c
   469  00005C  6E1C               	movwf	(_digito+1)^0,c
   470                           
   471                           ;main.c: 111: numero = numero % 100;
   472  00005E  C018  F011         	movff	descomponerNumero@numero,___lwmod@dividend
   473  000062  C019  F012         	movff	descomponerNumero@numero+1,___lwmod@dividend+1
   474  000066  0E00               	movlw	0
   475  000068  6E14               	movwf	(___lwmod@divisor+1)^0,c
   476  00006A  0E64               	movlw	100
   477  00006C  6E13               	movwf	___lwmod@divisor^0,c
   478  00006E  ECA6  F000         	call	___lwmod	;wreg free
   479  000072  C011  F018         	movff	?___lwmod,descomponerNumero@numero
   480  000076  C012  F019         	movff	?___lwmod+1,descomponerNumero@numero+1
   481                           
   482                           ;main.c: 112: digito[2] = numero/10;
   483  00007A  C018  F011         	movff	descomponerNumero@numero,___lwdiv@dividend
   484  00007E  C019  F012         	movff	descomponerNumero@numero+1,___lwdiv@dividend+1
   485  000082  0E00               	movlw	0
   486  000084  6E14               	movwf	(___lwdiv@divisor+1)^0,c
   487  000086  0E0A               	movlw	10
   488  000088  6E13               	movwf	___lwdiv@divisor^0,c
   489  00008A  EC56  F000         	call	___lwdiv	;wreg free
   490  00008E  5011               	movf	?___lwdiv^0,w,c
   491  000090  6E1D               	movwf	(_digito+2)^0,c
   492                           
   493                           ;main.c: 113: digito[3] = numero % 10;
   494  000092  C018  F011         	movff	descomponerNumero@numero,___lwmod@dividend
   495  000096  C019  F012         	movff	descomponerNumero@numero+1,___lwmod@dividend+1
   496  00009A  0E00               	movlw	0
   497  00009C  6E14               	movwf	(___lwmod@divisor+1)^0,c
   498  00009E  0E0A               	movlw	10
   499  0000A0  6E13               	movwf	___lwmod@divisor^0,c
   500  0000A2  ECA6  F000         	call	___lwmod	;wreg free
   501  0000A6  5011               	movf	?___lwmod^0,w,c
   502  0000A8  6E1E               	movwf	(_digito+3)^0,c
   503  0000AA  0012               	return		;funcret
   504  0000AC                     __end_of_descomponerNumero:
   505                           	callstack 0
   506                           
   507 ;; *************** function ___lwmod *****************
   508 ;; Defined at:
   509 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\lwmod.c"
   510 ;; Parameters:    Size  Location     Type
   511 ;;  dividend        2    0[COMRAM] unsigned int 
   512 ;;  divisor         2    2[COMRAM] unsigned int 
   513 ;; Auto vars:     Size  Location     Type
   514 ;;  counter         1    4[COMRAM] unsigned char 
   515 ;; Return value:  Size  Location     Type
   516 ;;                  2    0[COMRAM] unsigned int 
   517 ;; Registers used:
   518 ;;		wreg, status,2, status,0
   519 ;; Tracked objects:
   520 ;;		On entry : 0/0
   521 ;;		On exit  : 0/0
   522 ;;		Unchanged: 0/0
   523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   524 ;;      Params:         4       0       0       0       0       0       0       0       0
   525 ;;      Locals:         1       0       0       0       0       0       0       0       0
   526 ;;      Temps:          0       0       0       0       0       0       0       0       0
   527 ;;      Totals:         5       0       0       0       0       0       0       0       0
   528 ;;Total ram usage:        5 bytes
   529 ;; Hardware stack levels used: 1
   530 ;; Hardware stack levels required when called: 1
   531 ;; This function calls:
   532 ;;		Nothing
   533 ;; This function is called by:
   534 ;;		_descomponerNumero
   535 ;; This function uses a non-reentrant model
   536 ;;
   537                           
   538                           	psect	text3
   539  00014C                     __ptext3:
   540                           	callstack 0
   541  00014C                     ___lwmod:
   542                           	callstack 28
   543                           
   544                           ;incstack = 0
   545  00014C  5013               	movf	___lwmod@divisor^0,w,c
   546  00014E  1014               	iorwf	(___lwmod@divisor+1)^0,w,c
   547  000150  B4D8               	btfsc	status,2,c
   548  000152  D018               	goto	l557
   549  000154  0E01               	movlw	1
   550  000156  6E15               	movwf	___lwmod@counter^0,c
   551  000158  D004               	goto	l925
   552  00015A                     l923:
   553  00015A  90D8               	bcf	status,0,c
   554  00015C  3613               	rlcf	___lwmod@divisor^0,f,c
   555  00015E  3614               	rlcf	(___lwmod@divisor+1)^0,f,c
   556  000160  2A15               	incf	___lwmod@counter^0,f,c
   557  000162                     l925:
   558  000162  AE14               	btfss	(___lwmod@divisor+1)^0,7,c
   559  000164  D7FA               	goto	l923
   560  000166                     u130:
   561  000166  5013               	movf	___lwmod@divisor^0,w,c
   562  000168  5C11               	subwf	___lwmod@dividend^0,w,c
   563  00016A  5014               	movf	(___lwmod@divisor+1)^0,w,c
   564  00016C  5812               	subwfb	(___lwmod@dividend+1)^0,w,c
   565  00016E  A0D8               	btfss	status,0,c
   566  000170  D004               	goto	l931
   567  000172  5013               	movf	___lwmod@divisor^0,w,c
   568  000174  5E11               	subwf	___lwmod@dividend^0,f,c
   569  000176  5014               	movf	(___lwmod@divisor+1)^0,w,c
   570  000178  5A12               	subwfb	(___lwmod@dividend+1)^0,f,c
   571  00017A                     l931:
   572  00017A  90D8               	bcf	status,0,c
   573  00017C  3214               	rrcf	(___lwmod@divisor+1)^0,f,c
   574  00017E  3213               	rrcf	___lwmod@divisor^0,f,c
   575  000180  2E15               	decfsz	___lwmod@counter^0,f,c
   576  000182  D7F1               	goto	u130
   577  000184                     l557:
   578  000184  C011  F011         	movff	___lwmod@dividend,?___lwmod
   579  000188  C012  F012         	movff	___lwmod@dividend+1,?___lwmod+1
   580  00018C  0012               	return		;funcret
   581  00018E                     __end_of___lwmod:
   582                           	callstack 0
   583                           
   584 ;; *************** function ___lwdiv *****************
   585 ;; Defined at:
   586 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\lwdiv.c"
   587 ;; Parameters:    Size  Location     Type
   588 ;;  dividend        2    0[COMRAM] unsigned int 
   589 ;;  divisor         2    2[COMRAM] unsigned int 
   590 ;; Auto vars:     Size  Location     Type
   591 ;;  quotient        2    4[COMRAM] unsigned int 
   592 ;;  counter         1    6[COMRAM] unsigned char 
   593 ;; Return value:  Size  Location     Type
   594 ;;                  2    0[COMRAM] unsigned int 
   595 ;; Registers used:
   596 ;;		wreg, status,2, status,0
   597 ;; Tracked objects:
   598 ;;		On entry : 0/0
   599 ;;		On exit  : 0/0
   600 ;;		Unchanged: 0/0
   601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   602 ;;      Params:         4       0       0       0       0       0       0       0       0
   603 ;;      Locals:         3       0       0       0       0       0       0       0       0
   604 ;;      Temps:          0       0       0       0       0       0       0       0       0
   605 ;;      Totals:         7       0       0       0       0       0       0       0       0
   606 ;;Total ram usage:        7 bytes
   607 ;; Hardware stack levels used: 1
   608 ;; Hardware stack levels required when called: 1
   609 ;; This function calls:
   610 ;;		Nothing
   611 ;; This function is called by:
   612 ;;		_descomponerNumero
   613 ;; This function uses a non-reentrant model
   614 ;;
   615                           
   616                           	psect	text4
   617  0000AC                     __ptext4:
   618                           	callstack 0
   619  0000AC                     ___lwdiv:
   620                           	callstack 28
   621                           
   622                           ;incstack = 0
   623  0000AC  0E00               	movlw	0
   624  0000AE  6E16               	movwf	(___lwdiv@quotient+1)^0,c
   625  0000B0  0E00               	movlw	0
   626  0000B2  6E15               	movwf	___lwdiv@quotient^0,c
   627  0000B4  5013               	movf	___lwdiv@divisor^0,w,c
   628  0000B6  1014               	iorwf	(___lwdiv@divisor+1)^0,w,c
   629  0000B8  B4D8               	btfsc	status,2,c
   630  0000BA  D01C               	goto	l547
   631  0000BC  0E01               	movlw	1
   632  0000BE  6E17               	movwf	___lwdiv@counter^0,c
   633  0000C0  D004               	goto	l905
   634  0000C2                     l903:
   635  0000C2  90D8               	bcf	status,0,c
   636  0000C4  3613               	rlcf	___lwdiv@divisor^0,f,c
   637  0000C6  3614               	rlcf	(___lwdiv@divisor+1)^0,f,c
   638  0000C8  2A17               	incf	___lwdiv@counter^0,f,c
   639  0000CA                     l905:
   640  0000CA  AE14               	btfss	(___lwdiv@divisor+1)^0,7,c
   641  0000CC  D7FA               	goto	l903
   642  0000CE                     u100:
   643  0000CE  90D8               	bcf	status,0,c
   644  0000D0  3615               	rlcf	___lwdiv@quotient^0,f,c
   645  0000D2  3616               	rlcf	(___lwdiv@quotient+1)^0,f,c
   646  0000D4  5013               	movf	___lwdiv@divisor^0,w,c
   647  0000D6  5C11               	subwf	___lwdiv@dividend^0,w,c
   648  0000D8  5014               	movf	(___lwdiv@divisor+1)^0,w,c
   649  0000DA  5812               	subwfb	(___lwdiv@dividend+1)^0,w,c
   650  0000DC  A0D8               	btfss	status,0,c
   651  0000DE  D005               	goto	l915
   652  0000E0  5013               	movf	___lwdiv@divisor^0,w,c
   653  0000E2  5E11               	subwf	___lwdiv@dividend^0,f,c
   654  0000E4  5014               	movf	(___lwdiv@divisor+1)^0,w,c
   655  0000E6  5A12               	subwfb	(___lwdiv@dividend+1)^0,f,c
   656  0000E8  8015               	bsf	___lwdiv@quotient^0,0,c
   657  0000EA                     l915:
   658  0000EA  90D8               	bcf	status,0,c
   659  0000EC  3214               	rrcf	(___lwdiv@divisor+1)^0,f,c
   660  0000EE  3213               	rrcf	___lwdiv@divisor^0,f,c
   661  0000F0  2E17               	decfsz	___lwdiv@counter^0,f,c
   662  0000F2  D7ED               	goto	u100
   663  0000F4                     l547:
   664  0000F4  C015  F011         	movff	___lwdiv@quotient,?___lwdiv
   665  0000F8  C016  F012         	movff	___lwdiv@quotient+1,?___lwdiv+1
   666  0000FC  0012               	return		;funcret
   667  0000FE                     __end_of___lwdiv:
   668                           	callstack 0
   669                           
   670 ;; *************** function _TMR1_isr *****************
   671 ;; Defined at:
   672 ;;		line 83 in file "main.c"
   673 ;; Parameters:    Size  Location     Type
   674 ;;		None
   675 ;; Auto vars:     Size  Location     Type
   676 ;;		None
   677 ;; Return value:  Size  Location     Type
   678 ;;                  1    wreg      void 
   679 ;; Registers used:
   680 ;;		wreg, status,2, status,0
   681 ;; Tracked objects:
   682 ;;		On entry : 0/0
   683 ;;		On exit  : 0/0
   684 ;;		Unchanged: 0/0
   685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   686 ;;      Params:         0       0       0       0       0       0       0       0       0
   687 ;;      Locals:         0       0       0       0       0       0       0       0       0
   688 ;;      Temps:          0       0       0       0       0       0       0       0       0
   689 ;;      Totals:         0       0       0       0       0       0       0       0       0
   690 ;;Total ram usage:        0 bytes
   691 ;; Hardware stack levels used: 1
   692 ;; This function calls:
   693 ;;		Nothing
   694 ;; This function is called by:
   695 ;;		Interrupt level 2
   696 ;; This function uses a non-reentrant model
   697 ;;
   698                           
   699                           	psect	intcode
   700  000008                     __pintcode:
   701                           	callstack 0
   702  000008                     _TMR1_isr:
   703                           	callstack 28
   704                           
   705                           ;incstack = 0
   706  000008  8220               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
   707  00000A  EDFB  F000         	call	int_func,f	;refresh shadow registers
   708                           
   709                           	psect	intcode_body
   710  0001F6                     __pintcode_body:
   711                           	callstack 28
   712  0001F6                     int_func:
   713                           	callstack 28
   714  0001F6  0006               	pop		; remove dummy address from shadow register refresh
   715                           
   716                           ;main.c: 85: if(TMR1IF == 1){
   717  0001F8  A09E               	btfss	3998,0,c	;volatile
   718  0001FA  D007               	goto	i2l50
   719                           
   720                           ;main.c: 86: TMR1 = 0X8000;
   721  0001FC  0E80               	movlw	128
   722  0001FE  6ECF               	movwf	207,c	;volatile
   723  000200  0E00               	movlw	0
   724  000202  6ECE               	movwf	206,c	;volatile
   725                           
   726                           ;main.c: 87: contador++;
   727  000204  4A0F               	infsnz	_contador^0,f,c	;volatile
   728  000206  2A10               	incf	(_contador+1)^0,f,c	;volatile
   729                           
   730                           ;main.c: 88: TMR1IF = 0;
   731  000208  909E               	bcf	3998,0,c	;volatile
   732  00020A                     i2l50:
   733  00020A  9220               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
   734  00020C  0011               	retfie		f
   735  00020E                     __end_of_TMR1_isr:
   736                           	callstack 0
   737  0000                     
   738                           	psect	rparam
   739  0000                     
   740                           	psect	temp
   741  000020                     btemp:
   742                           	callstack 0
   743  000020                     	ds	1
   744  0000                     int$flags	set	btemp
   745  0000                     wtemp8	set	btemp+1
   746  0000                     ttemp5	set	btemp+1
   747  0000                     ttemp6	set	btemp+4
   748  0000                     ttemp7	set	btemp+8
   749                           
   750                           	psect	idloc
   751                           
   752                           ;Config register IDLOC0 @ 0x200000
   753                           ;	unspecified, using default values
   754  200000                     	org	2097152
   755  200000  FF                 	db	255
   756                           
   757                           ;Config register IDLOC1 @ 0x200001
   758                           ;	unspecified, using default values
   759  200001                     	org	2097153
   760  200001  FF                 	db	255
   761                           
   762                           ;Config register IDLOC2 @ 0x200002
   763                           ;	unspecified, using default values
   764  200002                     	org	2097154
   765  200002  FF                 	db	255
   766                           
   767                           ;Config register IDLOC3 @ 0x200003
   768                           ;	unspecified, using default values
   769  200003                     	org	2097155
   770  200003  FF                 	db	255
   771                           
   772                           ;Config register IDLOC4 @ 0x200004
   773                           ;	unspecified, using default values
   774  200004                     	org	2097156
   775  200004  FF                 	db	255
   776                           
   777                           ;Config register IDLOC5 @ 0x200005
   778                           ;	unspecified, using default values
   779  200005                     	org	2097157
   780  200005  FF                 	db	255
   781                           
   782                           ;Config register IDLOC6 @ 0x200006
   783                           ;	unspecified, using default values
   784  200006                     	org	2097158
   785  200006  FF                 	db	255
   786                           
   787                           ;Config register IDLOC7 @ 0x200007
   788                           ;	unspecified, using default values
   789  200007                     	org	2097159
   790  200007  FF                 	db	255
   791                           
   792                           	psect	config
   793                           
   794                           ;Config register CONFIG1L @ 0x300000
   795                           ;	PLL Prescaler Selection bits
   796                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
   797                           ;	System Clock Postscaler Selection bits
   798                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   799                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   800                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
   801  300000                     	org	3145728
   802  300000  00                 	db	0
   803                           
   804                           ;Config register CONFIG1H @ 0x300001
   805                           ;	Oscillator Selection bits
   806                           ;	FOSC = HS, HS oscillator (HS)
   807                           ;	Fail-Safe Clock Monitor Enable bit
   808                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   809                           ;	Internal/External Oscillator Switchover bit
   810                           ;	IESO = OFF, Oscillator Switchover mode disabled
   811  300001                     	org	3145729
   812  300001  0C                 	db	12
   813                           
   814                           ;Config register CONFIG2L @ 0x300002
   815                           ;	Power-up Timer Enable bit
   816                           ;	PWRT = ON, PWRT enabled
   817                           ;	Brown-out Reset Enable bits
   818                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
   819                           ;	Brown-out Reset Voltage bits
   820                           ;	BORV = 3, Minimum setting 2.05V
   821                           ;	USB Voltage Regulator Enable bit
   822                           ;	VREGEN = OFF, USB voltage regulator disabled
   823  300002                     	org	3145730
   824  300002  18                 	db	24
   825                           
   826                           ;Config register CONFIG2H @ 0x300003
   827                           ;	Watchdog Timer Enable bit
   828                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   829                           ;	Watchdog Timer Postscale Select bits
   830                           ;	WDTPS = 32768, 1:32768
   831  300003                     	org	3145731
   832  300003  1E                 	db	30
   833                           
   834                           ; Padding undefined space
   835  300004                     	org	3145732
   836  300004  FF                 	db	255
   837                           
   838                           ;Config register CONFIG3H @ 0x300005
   839                           ;	CCP2 MUX bit
   840                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
   841                           ;	PORTB A/D Enable bit
   842                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
   843                           ;	Low-Power Timer 1 Oscillator Enable bit
   844                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   845                           ;	MCLR Pin Enable bit
   846                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   847  300005                     	org	3145733
   848  300005  83                 	db	131
   849                           
   850                           ;Config register CONFIG4L @ 0x300006
   851                           ;	Stack Full/Underflow Reset Enable bit
   852                           ;	STVREN = ON, Stack full/underflow will cause Reset
   853                           ;	Single-Supply ICSP Enable bit
   854                           ;	LVP = OFF, Single-Supply ICSP disabled
   855                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   856                           ;	ICPRT = OFF, ICPORT disabled
   857                           ;	Extended Instruction Set Enable bit
   858                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   859                           ;	Background Debugger Enable bit
   860                           ;	DEBUG = 0x1, unprogrammed default
   861  300006                     	org	3145734
   862  300006  81                 	db	129
   863                           
   864                           ; Padding undefined space
   865  300007                     	org	3145735
   866  300007  FF                 	db	255
   867                           
   868                           ;Config register CONFIG5L @ 0x300008
   869                           ;	Code Protection bit
   870                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   871                           ;	Code Protection bit
   872                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   873                           ;	Code Protection bit
   874                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   875                           ;	Code Protection bit
   876                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   877  300008                     	org	3145736
   878  300008  0F                 	db	15
   879                           
   880                           ;Config register CONFIG5H @ 0x300009
   881                           ;	Boot Block Code Protection bit
   882                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
   883                           ;	Data EEPROM Code Protection bit
   884                           ;	CPD = OFF, Data EEPROM is not code-protected
   885  300009                     	org	3145737
   886  300009  C0                 	db	192
   887                           
   888                           ;Config register CONFIG6L @ 0x30000A
   889                           ;	Write Protection bit
   890                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
   891                           ;	Write Protection bit
   892                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
   893                           ;	Write Protection bit
   894                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
   895                           ;	Write Protection bit
   896                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
   897  30000A                     	org	3145738
   898  30000A  0F                 	db	15
   899                           
   900                           ;Config register CONFIG6H @ 0x30000B
   901                           ;	Configuration Register Write Protection bit
   902                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   903                           ;	Boot Block Write Protection bit
   904                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
   905                           ;	Data EEPROM Write Protection bit
   906                           ;	WRTD = OFF, Data EEPROM is not write-protected
   907  30000B                     	org	3145739
   908  30000B  E0                 	db	224
   909                           
   910                           ;Config register CONFIG7L @ 0x30000C
   911                           ;	Table Read Protection bit
   912                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
   913                           ;	Table Read Protection bit
   914                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
   915                           ;	Table Read Protection bit
   916                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
   917                           ;	Table Read Protection bit
   918                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
   919  30000C                     	org	3145740
   920  30000C  0F                 	db	15
   921                           
   922                           ;Config register CONFIG7H @ 0x30000D
   923                           ;	Boot Block Table Read Protection bit
   924                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
   925  30000D                     	org	3145741
   926  30000D  40                 	db	64
   927                           tosu	equ	0xFFF
   928                           tosh	equ	0xFFE
   929                           tosl	equ	0xFFD
   930                           stkptr	equ	0xFFC
   931                           pclatu	equ	0xFFB
   932                           pclath	equ	0xFFA
   933                           pcl	equ	0xFF9
   934                           tblptru	equ	0xFF8
   935                           tblptrh	equ	0xFF7
   936                           tblptrl	equ	0xFF6
   937                           tablat	equ	0xFF5
   938                           prodh	equ	0xFF4
   939                           prodl	equ	0xFF3
   940                           indf0	equ	0xFEF
   941                           postinc0	equ	0xFEE
   942                           postdec0	equ	0xFED
   943                           preinc0	equ	0xFEC
   944                           plusw0	equ	0xFEB
   945                           fsr0h	equ	0xFEA
   946                           fsr0l	equ	0xFE9
   947                           wreg	equ	0xFE8
   948                           indf1	equ	0xFE7
   949                           postinc1	equ	0xFE6
   950                           postdec1	equ	0xFE5
   951                           preinc1	equ	0xFE4
   952                           plusw1	equ	0xFE3
   953                           fsr1h	equ	0xFE2
   954                           fsr1l	equ	0xFE1
   955                           bsr	equ	0xFE0
   956                           indf2	equ	0xFDF
   957                           postinc2	equ	0xFDE
   958                           postdec2	equ	0xFDD
   959                           preinc2	equ	0xFDC
   960                           plusw2	equ	0xFDB
   961                           fsr2h	equ	0xFDA
   962                           fsr2l	equ	0xFD9
   963                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        16
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     10      31
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_descomponerNumero
    _descomponerNumero->___lwdiv

Critical Paths under _TMR1_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _TMR1_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _TMR1_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _TMR1_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _TMR1_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _TMR1_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _TMR1_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _TMR1_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _TMR1_isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    1443
                                              9 COMRAM     1     1      0
                  _descomponerNumero
                        _mostrarDato
 ---------------------------------------------------------------------------------
 (1) _mostrarDato                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _descomponerNumero                                    2     0      2    1443
                                              7 COMRAM     2     0      2
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     615
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     618
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _TMR1_isr                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _descomponerNumero
     ___lwdiv
     ___lwmod
   _mostrarDato

 _TMR1_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      30        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      A      1F       1       33.0%
BITBIGSFRhl         2E      0       0      22        0.0%
BITBIGSFRhhl        22      0       0      21        0.0%
BITBIGSFRllll       21      0       0      28        0.0%
BITBIGSFRhhh         D      0       0      20        0.0%
BITBIGSFRlllh        8      0       0      27        0.0%
BITBIGSFRlhh         7      0       0      23        0.0%
BITBIGSFRlhll        6      0       0      25        0.0%
BITBIGSFRlhlh        1      0       0      24        0.0%
BITBIGSFRllh         1      0       0      26        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      1F      29        0.0%
DATA                 0      0      1F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Sat Mar 19 19:34:22 2022

                      l547 00F4                        l557 0184                        l903 00C2  
                      l905 00CA                        l915 00EA                        l931 017A  
                      l923 015A                        l925 0162                        l959 012A  
                      _GIE 007F97                        u100 00CE                        u130 0166  
                      u157 0140                        wreg 000FE8                       _LATB 000F8A  
                     _LATD 000F8C                       _PEIE 007F96                       i2l50 020A  
                     _TMR1 000FCE                       _main 00FE                       fsr2h 000FDA  
                     indf2 000FDF                       fsr1l 000FE1                       fsr2l 000FD9  
                     btemp 0020                       start 000E               ___param_bank 000000  
                    ?_main 0011            __end_of___lwdiv 00FE            __end_of___lwmod 018E  
                    _PORTB 000F81                      _TRISB 000F93                      _TRISD 000F95  
         __end_of_TMR1_isr 020E                      tablat 000FF5                      ttemp5 0021  
                    ttemp6 0024                      ttemp7 0028                      status 000FD8  
                    wtemp8 0021            __initialization 018E               __end_of_main 014C  
                   ??_main 001A              __activetblptr 000000                     _T1SYNC 007E6A  
                   _TMR1IE 007CE8                     _TMR1IF 007CF0                     _TMR1CS 007E69  
                   _TMR1ON 007E68                     _digito 001B                  ??___lwdiv 0015  
                ??___lwmod 0015                     _conteo 001F                     isa$std 000001  
             ?_mostrarDato 0011               __pdataCOMRAM 0001                     tblptrh 000FF7  
                   tblptrl 000FF6                     tblptru 000FF8                 __accesstop 0060  
  __end_of__initialization 01B8              ___rparam_used 000001             __pcstackCOMRAM 0011  
                ?_TMR1_isr 0011    descomponerNumero@numero 0018                 ??_TMR1_isr 0011  
                  _T1CKPS0 007E6C                    _T1CKPS1 007E6D                    _T1OSCEN 007E6B  
        _descomponerNumero 0012         ?_descomponerNumero 0018                    __Hparam 0000  
                  __Lparam 0000        ??_descomponerNumero 001A                    ___lwdiv 00AC  
                  ___lwmod 014C                    __pcinit 018E                    __ramtop 0800  
                  __ptext0 00FE                    __ptext1 01C2                    __ptext2 0012  
                  __ptext3 014C                    __ptext4 00AC                    _display 0001  
__end_of_descomponerNumero 00AC             __pintcode_body 01F6       end_of_initialization 01B8  
               _numDisplay 000B                    int_func 01F6                    postdec1 000FE5  
                  postinc0 000FEE              __pidataCOMRAM 020E        start_initialization 018E  
              __pbssCOMRAM 001B           ___lwdiv@dividend 0011                  __pintcode 0008  
                 ?___lwdiv 0011                   ?___lwmod 0011           ___lwdiv@quotient 0015  
                 _TMR1_isr 0008              ??_mostrarDato 0011                  copy_data0 01A2  
                 __Hrparam 0000                   __Lrparam 0000            ___lwdiv@divisor 0013  
          ___lwdiv@counter 0017        __end_of_mostrarDato 01F6                   _contador 000F  
                 isa$xinst 000000                   int$flags 0020                   intlevel2 0000  
         ___lwmod@dividend 0011                _mostrarDato 01C2            ___lwmod@divisor 0013  
          ___lwmod@counter 0015  
