

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Sat Mar 19 19:56:27 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F2550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    10                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    11                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    12                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    14                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    16  0000                     
    17                           ; Version 2.40
    18                           ; Generated 17/11/2021 GMT
    19                           ; 
    20                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution. Publication is not required when
    34                           ;        this file is used in an embedded application.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC18F2550 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     _LATBbits	set	3978
    53  0000                     _INTCONbits	set	4082
    54  0000                     _TRISAbits	set	3986
    55  0000                     _TRISBbits	set	3987
    56  0000                     _T0CONbits	set	4053
    57  0000                     _TMR0L	set	4054
    58  0000                     _ADCON1	set	4033
    59                           
    60                           ; #config settings
    61                           
    62                           	psect	cinit
    63  000074                     __pcinit:
    64                           	callstack 0
    65  000074                     start_initialization:
    66                           	callstack 0
    67  000074                     __initialization:
    68                           	callstack 0
    69  000074                     end_of_initialization:
    70                           	callstack 0
    71  000074                     __end_of__initialization:
    72                           	callstack 0
    73  000074  9002               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    74  000076  9202               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    75  000078  0100               	movlb	0
    76  00007A  EF25  F000         	goto	_main	;jump to C main() function
    77                           
    78                           	psect	cstackCOMRAM
    79  000001                     __pcstackCOMRAM:
    80                           	callstack 0
    81  000001                     ??_ISR_TIMER0:
    82  000001                     
    83                           ; 1 bytes @ 0x0
    84  000001                     	ds	1
    85  000002                     
    86                           ; 1 bytes @ 0x1
    87 ;;
    88 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    89 ;;
    90 ;; *************** function _main *****************
    91 ;; Defined at:
    92 ;;		line 102 in file "main.c"
    93 ;; Parameters:    Size  Location     Type
    94 ;;		None
    95 ;; Auto vars:     Size  Location     Type
    96 ;;		None
    97 ;; Return value:  Size  Location     Type
    98 ;;                  1    wreg      void 
    99 ;; Registers used:
   100 ;;		wreg, status,2, cstack
   101 ;; Tracked objects:
   102 ;;		On entry : 0/0
   103 ;;		On exit  : 0/0
   104 ;;		Unchanged: 0/0
   105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   106 ;;      Params:         0       0       0       0       0       0       0       0       0
   107 ;;      Locals:         0       0       0       0       0       0       0       0       0
   108 ;;      Temps:          0       0       0       0       0       0       0       0       0
   109 ;;      Totals:         0       0       0       0       0       0       0       0       0
   110 ;;Total ram usage:        0 bytes
   111 ;; Hardware stack levels required when called: 2
   112 ;; This function calls:
   113 ;;		_TMR0_contador
   114 ;; This function is called by:
   115 ;;		Startup code after reset
   116 ;; This function uses a non-reentrant model
   117 ;;
   118                           
   119                           	psect	text0
   120  00004A                     __ptext0:
   121                           	callstack 0
   122  00004A                     _main:
   123                           	callstack 29
   124  00004A                     
   125                           ;main.c: 104:     TRISBbits.TRISB0 = 1;
   126  00004A  8093               	bsf	147,0,c	;volatile
   127  00004C                     
   128                           ;main.c: 106:      ADCON1 = 0x0F;
   129  00004C  0E0F               	movlw	15
   130  00004E  6EC1               	movwf	193,c	;volatile
   131  000050                     
   132                           ;main.c: 107:    TRISAbits.TRISA4 = 1;
   133  000050  8892               	bsf	146,4,c	;volatile
   134  000052                     
   135                           ;main.c: 108:     TRISBbits.TRISB1 = 0;
   136  000052  9293               	bcf	147,1,c	;volatile
   137  000054                     
   138                           ;main.c: 111:     INTCONbits.GIE = 1;
   139  000054  8EF2               	bsf	242,7,c	;volatile
   140  000056                     
   141                           ;main.c: 112:     INTCONbits.T0IF = 0;
   142  000056  94F2               	bcf	242,2,c	;volatile
   143  000058                     
   144                           ;main.c: 113:     INTCONbits.TMR0IE =1;
   145  000058  8AF2               	bsf	242,5,c	;volatile
   146  00005A                     
   147                           ;main.c: 115:    TMR0_contador();
   148  00005A  EC33  F000         	call	_TMR0_contador	;wreg free
   149  00005E                     l31:
   150  00005E  EF2F  F000         	goto	l31
   151  000062  EF07  F000         	goto	start
   152  000066                     __end_of_main:
   153                           	callstack 0
   154                           
   155 ;; *************** function _TMR0_contador *****************
   156 ;; Defined at:
   157 ;;		line 79 in file "main.c"
   158 ;; Parameters:    Size  Location     Type
   159 ;;		None
   160 ;; Auto vars:     Size  Location     Type
   161 ;;		None
   162 ;; Return value:  Size  Location     Type
   163 ;;                  1    wreg      void 
   164 ;; Registers used:
   165 ;;		None
   166 ;; Tracked objects:
   167 ;;		On entry : 0/0
   168 ;;		On exit  : 0/0
   169 ;;		Unchanged: 0/0
   170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   171 ;;      Params:         0       0       0       0       0       0       0       0       0
   172 ;;      Locals:         0       0       0       0       0       0       0       0       0
   173 ;;      Temps:          0       0       0       0       0       0       0       0       0
   174 ;;      Totals:         0       0       0       0       0       0       0       0       0
   175 ;;Total ram usage:        0 bytes
   176 ;; Hardware stack levels used: 1
   177 ;; Hardware stack levels required when called: 1
   178 ;; This function calls:
   179 ;;		Nothing
   180 ;; This function is called by:
   181 ;;		_main
   182 ;; This function uses a non-reentrant model
   183 ;;
   184                           
   185                           	psect	text1
   186  000066                     __ptext1:
   187                           	callstack 0
   188  000066                     _TMR0_contador:
   189                           	callstack 29
   190  000066                     
   191                           ;main.c: 81:     T0CONbits.T08BIT = 1;
   192  000066  8CD5               	bsf	213,6,c	;volatile
   193                           
   194                           ;main.c: 82:     T0CONbits.T0CS = 1;
   195  000068  8AD5               	bsf	213,5,c	;volatile
   196                           
   197                           ;main.c: 83:     T0CONbits.PSA = 1;
   198  00006A  86D5               	bsf	213,3,c	;volatile
   199                           
   200                           ;main.c: 84:     T0CONbits.T0SE = 1;
   201  00006C  88D5               	bsf	213,4,c	;volatile
   202                           
   203                           ;main.c: 85:     TMR0L = 255;
   204  00006E  68D6               	setf	214,c	;volatile
   205                           
   206                           ;main.c: 86:     T0CONbits.TMR0ON = 1;
   207  000070  8ED5               	bsf	213,7,c	;volatile
   208  000072  0012               	return		;funcret
   209  000074                     __end_of_TMR0_contador:
   210                           	callstack 0
   211                           
   212 ;; *************** function _ISR_TIMER0 *****************
   213 ;; Defined at:
   214 ;;		line 68 in file "main.c"
   215 ;; Parameters:    Size  Location     Type
   216 ;;		None
   217 ;; Auto vars:     Size  Location     Type
   218 ;;		None
   219 ;; Return value:  Size  Location     Type
   220 ;;                  1    wreg      void 
   221 ;; Registers used:
   222 ;;		wreg, status,2, status,0
   223 ;; Tracked objects:
   224 ;;		On entry : 0/0
   225 ;;		On exit  : 0/0
   226 ;;		Unchanged: 0/0
   227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   228 ;;      Params:         0       0       0       0       0       0       0       0       0
   229 ;;      Locals:         0       0       0       0       0       0       0       0       0
   230 ;;      Temps:          1       0       0       0       0       0       0       0       0
   231 ;;      Totals:         1       0       0       0       0       0       0       0       0
   232 ;;Total ram usage:        1 bytes
   233 ;; Hardware stack levels used: 1
   234 ;; This function calls:
   235 ;;		Nothing
   236 ;; This function is called by:
   237 ;;		Interrupt level 2
   238 ;; This function uses a non-reentrant model
   239 ;;
   240                           
   241                           	psect	intcode
   242  000008                     __pintcode:
   243                           	callstack 0
   244  000008                     _ISR_TIMER0:
   245                           	callstack 29
   246                           
   247                           ;incstack = 0
   248  000008  8202               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   249  00000A  ED09  F000         	call	int_func,f	;refresh shadow registers
   250                           
   251                           	psect	intcode_body
   252  000012                     __pintcode_body:
   253                           	callstack 29
   254  000012                     int_func:
   255                           	callstack 29
   256  000012  0006               	pop		; remove dummy address from shadow register refresh
   257  000014                     
   258                           ;main.c: 70:     if(INTCONbits.TMR0IF == 1){
   259  000014  A4F2               	btfss	242,2,c	;volatile
   260  000016  EF0F  F000         	goto	i2u1_41
   261  00001A  EF11  F000         	goto	i2u1_40
   262  00001E                     i2u1_41:
   263  00001E  EF23  F000         	goto	i2l20
   264  000022                     i2u1_40:
   265  000022                     
   266                           ;main.c: 72:         LATBbits.LATB1 = ! LATBbits.LATB1;
   267  000022  A28A               	btfss	138,1,c	;volatile
   268  000024  EF16  F000         	goto	i2u2_41
   269  000028  EF1A  F000         	goto	i2u2_40
   270  00002C                     i2u2_41:
   271  00002C  6A01               	clrf	??_ISR_TIMER0^0,c
   272  00002E  2A01               	incf	??_ISR_TIMER0^0,f,c
   273  000030  EF1B  F000         	goto	i2u3_48
   274  000034                     i2u2_40:
   275  000034  6A01               	clrf	??_ISR_TIMER0^0,c
   276  000036                     i2u3_48:
   277  000036  4601               	rlncf	??_ISR_TIMER0^0,f,c
   278  000038  508A               	movf	138,w,c	;volatile
   279  00003A  1801               	xorwf	??_ISR_TIMER0^0,w,c
   280  00003C  0BFD               	andlw	-3
   281  00003E  1801               	xorwf	??_ISR_TIMER0^0,w,c
   282  000040  6E8A               	movwf	138,c	;volatile
   283  000042                     
   284                           ;main.c: 73:          TMR0L = 255;
   285  000042  68D6               	setf	214,c	;volatile
   286  000044                     
   287                           ;main.c: 74:         INTCONbits.TMR0IF = 0;
   288  000044  94F2               	bcf	242,2,c	;volatile
   289  000046                     i2l20:
   290  000046  9202               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   291  000048  0011               	retfie		f
   292  00004A                     __end_of_ISR_TIMER0:
   293                           	callstack 0
   294  0000                     
   295                           	psect	rparam
   296  0000                     
   297                           	psect	temp
   298  000002                     btemp:
   299                           	callstack 0
   300  000002                     	ds	1
   301  0000                     int$flags	set	btemp
   302  0000                     wtemp8	set	btemp+1
   303  0000                     ttemp5	set	btemp+1
   304  0000                     ttemp6	set	btemp+4
   305  0000                     ttemp7	set	btemp+8
   306                           
   307                           	psect	idloc
   308                           
   309                           ;Config register IDLOC0 @ 0x200000
   310                           ;	unspecified, using default values
   311  200000                     	org	2097152
   312  200000  FF                 	db	255
   313                           
   314                           ;Config register IDLOC1 @ 0x200001
   315                           ;	unspecified, using default values
   316  200001                     	org	2097153
   317  200001  FF                 	db	255
   318                           
   319                           ;Config register IDLOC2 @ 0x200002
   320                           ;	unspecified, using default values
   321  200002                     	org	2097154
   322  200002  FF                 	db	255
   323                           
   324                           ;Config register IDLOC3 @ 0x200003
   325                           ;	unspecified, using default values
   326  200003                     	org	2097155
   327  200003  FF                 	db	255
   328                           
   329                           ;Config register IDLOC4 @ 0x200004
   330                           ;	unspecified, using default values
   331  200004                     	org	2097156
   332  200004  FF                 	db	255
   333                           
   334                           ;Config register IDLOC5 @ 0x200005
   335                           ;	unspecified, using default values
   336  200005                     	org	2097157
   337  200005  FF                 	db	255
   338                           
   339                           ;Config register IDLOC6 @ 0x200006
   340                           ;	unspecified, using default values
   341  200006                     	org	2097158
   342  200006  FF                 	db	255
   343                           
   344                           ;Config register IDLOC7 @ 0x200007
   345                           ;	unspecified, using default values
   346  200007                     	org	2097159
   347  200007  FF                 	db	255
   348                           
   349                           	psect	config
   350                           
   351                           ;Config register CONFIG1L @ 0x300000
   352                           ;	PLL Prescaler Selection bits
   353                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
   354                           ;	System Clock Postscaler Selection bits
   355                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   356                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   357                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
   358  300000                     	org	3145728
   359  300000  00                 	db	0
   360                           
   361                           ;Config register CONFIG1H @ 0x300001
   362                           ;	Oscillator Selection bits
   363                           ;	FOSC = XT_XT, XT oscillator (XT)
   364                           ;	Fail-Safe Clock Monitor Enable bit
   365                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   366                           ;	Internal/External Oscillator Switchover bit
   367                           ;	IESO = OFF, Oscillator Switchover mode disabled
   368  300001                     	org	3145729
   369  300001  00                 	db	0
   370                           
   371                           ;Config register CONFIG2L @ 0x300002
   372                           ;	Power-up Timer Enable bit
   373                           ;	PWRT = OFF, PWRT disabled
   374                           ;	Brown-out Reset Enable bits
   375                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
   376                           ;	Brown-out Reset Voltage bits
   377                           ;	BORV = 3, Minimum setting 2.05V
   378                           ;	USB Voltage Regulator Enable bit
   379                           ;	VREGEN = OFF, USB voltage regulator disabled
   380  300002                     	org	3145730
   381  300002  19                 	db	25
   382                           
   383                           ;Config register CONFIG2H @ 0x300003
   384                           ;	Watchdog Timer Enable bit
   385                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   386                           ;	Watchdog Timer Postscale Select bits
   387                           ;	WDTPS = 32768, 1:32768
   388  300003                     	org	3145731
   389  300003  1E                 	db	30
   390                           
   391                           ; Padding undefined space
   392  300004                     	org	3145732
   393  300004  FF                 	db	255
   394                           
   395                           ;Config register CONFIG3H @ 0x300005
   396                           ;	CCP2 MUX bit
   397                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
   398                           ;	PORTB A/D Enable bit
   399                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
   400                           ;	Low-Power Timer 1 Oscillator Enable bit
   401                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   402                           ;	MCLR Pin Enable bit
   403                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   404  300005                     	org	3145733
   405  300005  83                 	db	131
   406                           
   407                           ;Config register CONFIG4L @ 0x300006
   408                           ;	Stack Full/Underflow Reset Enable bit
   409                           ;	STVREN = ON, Stack full/underflow will cause Reset
   410                           ;	Single-Supply ICSP Enable bit
   411                           ;	LVP = OFF, Single-Supply ICSP disabled
   412                           ;	Extended Instruction Set Enable bit
   413                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   414                           ;	Background Debugger Enable bit
   415                           ;	DEBUG = 0x1, unprogrammed default
   416  300006                     	org	3145734
   417  300006  81                 	db	129
   418                           
   419                           ; Padding undefined space
   420  300007                     	org	3145735
   421  300007  FF                 	db	255
   422                           
   423                           ;Config register CONFIG5L @ 0x300008
   424                           ;	Code Protection bit
   425                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   426                           ;	Code Protection bit
   427                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   428                           ;	Code Protection bit
   429                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   430                           ;	Code Protection bit
   431                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   432  300008                     	org	3145736
   433  300008  0F                 	db	15
   434                           
   435                           ;Config register CONFIG5H @ 0x300009
   436                           ;	Boot Block Code Protection bit
   437                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
   438                           ;	Data EEPROM Code Protection bit
   439                           ;	CPD = OFF, Data EEPROM is not code-protected
   440  300009                     	org	3145737
   441  300009  C0                 	db	192
   442                           
   443                           ;Config register CONFIG6L @ 0x30000A
   444                           ;	Write Protection bit
   445                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
   446                           ;	Write Protection bit
   447                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
   448                           ;	Write Protection bit
   449                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
   450                           ;	Write Protection bit
   451                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
   452  30000A                     	org	3145738
   453  30000A  0F                 	db	15
   454                           
   455                           ;Config register CONFIG6H @ 0x30000B
   456                           ;	Configuration Register Write Protection bit
   457                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   458                           ;	Boot Block Write Protection bit
   459                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
   460                           ;	Data EEPROM Write Protection bit
   461                           ;	WRTD = OFF, Data EEPROM is not write-protected
   462  30000B                     	org	3145739
   463  30000B  E0                 	db	224
   464                           
   465                           ;Config register CONFIG7L @ 0x30000C
   466                           ;	Table Read Protection bit
   467                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
   468                           ;	Table Read Protection bit
   469                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
   470                           ;	Table Read Protection bit
   471                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
   472                           ;	Table Read Protection bit
   473                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
   474  30000C                     	org	3145740
   475  30000C  0F                 	db	15
   476                           
   477                           ;Config register CONFIG7H @ 0x30000D
   478                           ;	Boot Block Table Read Protection bit
   479                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
   480  30000D                     	org	3145741
   481  30000D  40                 	db	64
   482                           tosu	equ	0xFFF
   483                           tosh	equ	0xFFE
   484                           tosl	equ	0xFFD
   485                           stkptr	equ	0xFFC
   486                           pclatu	equ	0xFFB
   487                           pclath	equ	0xFFA
   488                           pcl	equ	0xFF9
   489                           tblptru	equ	0xFF8
   490                           tblptrh	equ	0xFF7
   491                           tblptrl	equ	0xFF6
   492                           tablat	equ	0xFF5
   493                           prodh	equ	0xFF4
   494                           prodl	equ	0xFF3
   495                           indf0	equ	0xFEF
   496                           postinc0	equ	0xFEE
   497                           postdec0	equ	0xFED
   498                           preinc0	equ	0xFEC
   499                           plusw0	equ	0xFEB
   500                           fsr0h	equ	0xFEA
   501                           fsr0l	equ	0xFE9
   502                           wreg	equ	0xFE8
   503                           indf1	equ	0xFE7
   504                           postinc1	equ	0xFE6
   505                           postdec1	equ	0xFE5
   506                           preinc1	equ	0xFE4
   507                           plusw1	equ	0xFE3
   508                           fsr1h	equ	0xFE2
   509                           fsr1l	equ	0xFE1
   510                           bsr	equ	0xFE0
   511                           indf2	equ	0xFDF
   512                           postinc2	equ	0xFDE
   513                           postdec2	equ	0xFDD
   514                           preinc2	equ	0xFDC
   515                           plusw2	equ	0xFDB
   516                           fsr2h	equ	0xFDA
   517                           fsr2l	equ	0xFD9
   518                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      1       1
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR_TIMER0 in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR_TIMER0 in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_TIMER0 in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_TIMER0 in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_TIMER0 in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_TIMER0 in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_TIMER0 in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_TIMER0 in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_TIMER0 in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                      _TMR0_contador
 ---------------------------------------------------------------------------------
 (1) _TMR0_contador                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR_TIMER0                                           1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _TMR0_contador

 _ISR_TIMER0 (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5E      1       1       1        1.1%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
DATA                 0      0       0       4        0.0%
BITBANK0            A0      0       0       5        0.0%
BANK0               A0      0       0       6        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBIGSFRh           D      0       0      21        0.0%
BITBIGSFRlhh        1B      0       0      22        0.0%
BITBIGSFRlhlhh      13      0       0      23        0.0%
BITBIGSFRlhlhl      2D      0       0      24        0.0%
BITBIGSFRlhll        7      0       0      25        0.0%
BITBIGSFRll         2A      0       0      26        0.0%
BIGRAM             7FF      0       0      27        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Sat Mar 19 19:56:27 2022

                     l23 0072                       l31 005E                       l32 005E  
                    l710 0066                      l730 0050                      l740 005A  
                    l732 0052                      l734 0054                      l726 004A  
                    l736 0056                      l728 004C                      l738 0058  
                   i2l20 0046                     _main 004A                     btemp 0002  
                   start 000E              ?_ISR_TIMER0 0001             ___param_bank 000000  
                  ?_main 0001                    i2l712 0014                    i2l714 0022  
                  i2l716 0042                    i2l718 0044                    _TMR0L 000FD6  
                  ttemp5 0003                    ttemp6 0006                    ttemp7 000A  
                  wtemp8 0003          __initialization 0074             __end_of_main 0066  
                 ??_main 0002            __activetblptr 000000                   _ADCON1 000FC1  
                 i2u1_40 0022                   i2u1_41 001E                   i2u2_40 0034  
                 i2u2_41 002C                   i2u3_48 0036                   isa$std 000001  
             __accesstop 0060  __end_of__initialization 0074            ___rparam_used 000001  
         __pcstackCOMRAM 0001    __end_of_TMR0_contador 0074             ??_ISR_TIMER0 0001  
     __end_of_ISR_TIMER0 004A                  __Hparam 0000                  __Lparam 0000  
                __pcinit 0074                  __ramtop 0800                  __ptext0 004A  
                __ptext1 0066                _T0CONbits 000FD5           __pintcode_body 0012  
   end_of_initialization 0074                  int_func 0012                _TRISAbits 000F92  
              _TRISBbits 000F93      start_initialization 0074                __pintcode 0008  
               _LATBbits 000F8A                 __Hrparam 0000            _TMR0_contador 0066  
               __Lrparam 0000           ?_TMR0_contador 0001                 isa$xinst 000000  
               int$flags 0002               _INTCONbits 000FF2                 intlevel2 0000  
             _ISR_TIMER0 0008          ??_TMR0_contador 0002  
