

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Sat Mar 19 19:50:34 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F2550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    35                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    36                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    37                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    38  0000                     
    39                           ; Version 2.40
    40                           ; Generated 17/11/2021 GMT
    41                           ; 
    42                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution. Publication is not required when
    56                           ;        this file is used in an embedded application.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC18F2550 Definitions
    72                           ; 
    73                           ; SFR Addresses
    74  0000                     
    75                           	psect	idataCOMRAM
    76  000BFE                     __pidataCOMRAM:
    77                           	callstack 0
    78                           
    79                           ;initializer for _Fecha
    80  000BFE  32                 	db	50
    81  000BFF  30                 	db	48
    82  000C00  30                 	db	48
    83  000C01  33                 	db	51
    84  000C02  31                 	db	49
    85  000C03  39                 	db	57
    86  000C04  00                 	db	0
    87                           
    88                           ;initializer for _Hora
    89  000C05  31                 	db	49
    90  000C06  30                 	db	48
    91  000C07  35                 	db	53
    92  000C08  38                 	db	56
    93  000C09  34                 	db	52
    94  000C0A  35                 	db	53
    95  000C0B  00                 	db	0
    96  0000                     _LATBbits	set	3978
    97  0000                     _LATCbits	set	3979
    98  0000                     _SSPCON2bits	set	4037
    99  0000                     _ACKSTAT	set	32302
   100  0000                     _LATAbits	set	3977
   101  0000                     _TRISAbits	set	3986
   102  0000                     _TRISBbits	set	3987
   103  0000                     _TRISCbits	set	3988
   104  0000                     _PIR1bits	set	3998
   105  0000                     _SSPCON2	set	4037
   106  0000                     _SSPCON1	set	4038
   107  0000                     _SSPSTAT	set	4039
   108  0000                     _SSPBUF	set	4041
   109  0000                     _SSPADD	set	4040
   110  0000                     _ADCON1	set	4033
   111                           
   112                           	psect	smallconst
   113  000800                     __psmallconst:
   114                           	callstack 0
   115  000800  00                 	db	0
   116  000801                     STR_1:
   117  000801  48                 	db	72	;'H'
   118  000802  6F                 	db	111	;'o'
   119  000803  72                 	db	114	;'r'
   120  000804  61                 	db	97	;'a'
   121  000805  20                 	db	32
   122  000806  20                 	db	32
   123  000807  00                 	db	0
   124  000808                     STR_2:
   125  000808  46                 	db	70	;'F'
   126  000809  65                 	db	101	;'e'
   127  00080A  63                 	db	99	;'c'
   128  00080B  68                 	db	104	;'h'
   129  00080C  61                 	db	97	;'a'
   130  00080D  20                 	db	32
   131  00080E  00                 	db	0
   132  00080F  00                 	db	0	; dummy byte at the end
   133  0000                     
   134                           ; #config settings
   135                           
   136                           	psect	cinit
   137  000B62                     __pcinit:
   138                           	callstack 0
   139  000B62                     start_initialization:
   140                           	callstack 0
   141  000B62                     __initialization:
   142                           	callstack 0
   143                           
   144                           ; Initialize objects allocated to COMRAM (14 bytes)
   145                           ; load TBLPTR registers with __pidataCOMRAM
   146  000B62  0EFE               	movlw	low __pidataCOMRAM
   147  000B64  6EF6               	movwf	tblptrl,c
   148  000B66  0E0B               	movlw	high __pidataCOMRAM
   149  000B68  6EF7               	movwf	tblptrh,c
   150  000B6A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   151  000B6C  6EF8               	movwf	tblptru,c
   152  000B6E  EE00  F00F         	lfsr	0,__pdataCOMRAM
   153  000B72  EE10 F00E          	lfsr	1,14
   154  000B76                     copy_data0:
   155  000B76  0009               	tblrd		*+
   156  000B78  CFF5 FFEE          	movff	tablat,postinc0
   157  000B7C  50E5               	movf	postdec1,w,c
   158  000B7E  50E1               	movf	fsr1l,w,c
   159  000B80  E1FA               	bnz	copy_data0
   160                           
   161                           ; Clear objects allocated to COMRAM (14 bytes)
   162  000B82  EE00  F001         	lfsr	0,__pbssCOMRAM
   163  000B86  0E0E               	movlw	14
   164  000B88                     clear_0:
   165  000B88  6AEE               	clrf	postinc0,c
   166  000B8A  06E8               	decf	wreg,f,c
   167  000B8C  E1FD               	bnz	clear_0
   168  000B8E                     end_of_initialization:
   169                           	callstack 0
   170  000B8E                     __end_of__initialization:
   171                           	callstack 0
   172  000B8E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   173  000B90  6EF8               	movwf	tblptru,c
   174  000B92  0100               	movlb	0
   175  000B94  EF3F  F004         	goto	_main	;jump to C main() function
   176                           
   177                           	psect	bssCOMRAM
   178  000001                     __pbssCOMRAM:
   179                           	callstack 0
   180  000001                     	ds	8
   181  000009                     _anio:
   182                           	callstack 0
   183  000009                     	ds	1
   184  00000A                     _mes:
   185                           	callstack 0
   186  00000A                     	ds	1
   187  00000B                     _dia:
   188                           	callstack 0
   189  00000B                     	ds	1
   190  00000C                     _hora:
   191                           	callstack 0
   192  00000C                     	ds	1
   193  00000D                     _min:
   194                           	callstack 0
   195  00000D                     	ds	1
   196  00000E                     _sec:
   197                           	callstack 0
   198  00000E                     	ds	1
   199                           
   200                           	psect	dataCOMRAM
   201  00000F                     __pdataCOMRAM:
   202                           	callstack 0
   203  00000F                     _Fecha:
   204                           	callstack 0
   205  00000F                     	ds	7
   206  000016                     _Hora:
   207                           	callstack 0
   208  000016                     	ds	7
   209                           
   210                           	psect	cstackCOMRAM
   211  00001D                     __pcstackCOMRAM:
   212                           	callstack 0
   213  00001D                     I2C_write@I2C_data:
   214                           	callstack 0
   215  00001D                     convertirHora@i:
   216                           	callstack 0
   217  00001D                     convertirFecha@i:
   218                           	callstack 0
   219  00001D                     LCD_write@dato:
   220                           	callstack 0
   221                           
   222                           ; 1 bytes @ 0x0
   223  00001D                     	ds	1
   224  00001E                     LCD_cmd@dato:
   225                           	callstack 0
   226  00001E                     LCD_dato@dato:
   227                           	callstack 0
   228                           
   229                           ; 1 bytes @ 0x1
   230  00001E                     	ds	1
   231  00001F                     ??_LCD_init:
   232  00001F                     LCD_goto@y:
   233                           	callstack 0
   234  00001F                     LCD_printf@dato:
   235                           	callstack 0
   236                           
   237                           ; 2 bytes @ 0x2
   238  00001F                     	ds	1
   239  000020                     LCD_goto@posicion:
   240                           	callstack 0
   241                           
   242                           ; 1 bytes @ 0x3
   243  000020                     	ds	1
   244  000021                     LCD_goto@x:
   245                           	callstack 0
   246                           
   247                           ; 1 bytes @ 0x4
   248  000021                     	ds	1
   249  000022                     ??_main:
   250                           
   251                           ; 1 bytes @ 0x5
   252  000022                     	ds	1
   253                           
   254 ;;
   255 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   256 ;;
   257 ;; *************** function _main *****************
   258 ;; Defined at:
   259 ;;		line 180 in file "main.c"
   260 ;; Parameters:    Size  Location     Type
   261 ;;		None
   262 ;; Auto vars:     Size  Location     Type
   263 ;;		None
   264 ;; Return value:  Size  Location     Type
   265 ;;                  1    wreg      void 
   266 ;; Registers used:
   267 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   268 ;; Tracked objects:
   269 ;;		On entry : 0/0
   270 ;;		On exit  : 0/0
   271 ;;		Unchanged: 0/0
   272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   273 ;;      Params:         0       0       0       0       0       0       0       0       0
   274 ;;      Locals:         0       0       0       0       0       0       0       0       0
   275 ;;      Temps:          1       0       0       0       0       0       0       0       0
   276 ;;      Totals:         1       0       0       0       0       0       0       0       0
   277 ;;Total ram usage:        1 bytes
   278 ;; Hardware stack levels required when called: 3
   279 ;; This function calls:
   280 ;;		_I2C_init
   281 ;;		_LCD_goto
   282 ;;		_LCD_init
   283 ;;		_LCD_printf
   284 ;;		_convertirFecha
   285 ;;		_convertirHora
   286 ;;		_enviar_fecha
   287 ;;		_enviar_hora
   288 ;;		_leer_fecha
   289 ;;		_leer_hora
   290 ;;		_mostrar_fecha
   291 ;;		_mostrar_hora
   292 ;; This function is called by:
   293 ;;		Startup code after reset
   294 ;; This function uses a non-reentrant model
   295 ;;
   296                           
   297                           	psect	text0
   298  00087E                     __ptext0:
   299                           	callstack 0
   300  00087E                     _main:
   301                           	callstack 28
   302                           
   303                           ;main.c: 182: ADCON1 = 0X06;
   304                           
   305                           ;incstack = 0
   306  00087E  0E06               	movlw	6
   307  000880  6EC1               	movwf	193,c	;volatile
   308                           
   309                           ;main.c: 183: LCD_init();
   310  000882  EC73  F004         	call	_LCD_init	;wreg free
   311                           
   312                           ;main.c: 184: I2C_init();
   313  000886  ECF4  F005         	call	_I2C_init	;wreg free
   314                           
   315                           ;main.c: 186: convertirHora();
   316  00088A  EC75  F005         	call	_convertirHora	;wreg free
   317                           
   318                           ;main.c: 187: enviar_hora();
   319  00088E  ECCC  F005         	call	_enviar_hora	;wreg free
   320                           
   321                           ;main.c: 189: convertirFecha();
   322  000892  EC93  F005         	call	_convertirFecha	;wreg free
   323                           
   324                           ;main.c: 190: enviar_fecha();
   325  000896  ECE0  F005         	call	_enviar_fecha	;wreg free
   326  00089A                     l1337:
   327                           
   328                           ;main.c: 194: LCD_goto(2, 1);
   329  00089A  0E01               	movlw	1
   330  00089C  6E1F               	movwf	LCD_goto@y^0,c
   331  00089E  0E02               	movlw	2
   332  0008A0  EC16  F005         	call	_LCD_goto
   333                           
   334                           ;main.c: 195: LCD_printf("Hora  ");
   335  0008A4  0E01               	movlw	low STR_1
   336  0008A6  6E1F               	movwf	LCD_printf@dato^0,c
   337  0008A8  0E08               	movlw	high STR_1
   338  0008AA  6E20               	movwf	(LCD_printf@dato+1)^0,c
   339  0008AC  ECA3  F004         	call	_LCD_printf	;wreg free
   340                           
   341                           ;main.c: 196: leer_hora();
   342  0008B0  EC37  F005         	call	_leer_hora	;wreg free
   343                           
   344                           ;main.c: 197: mostrar_hora();
   345  0008B4  ECCC  F004         	call	_mostrar_hora	;wreg free
   346                           
   347                           ;main.c: 199: LCD_goto(2, 2);
   348  0008B8  0E02               	movlw	2
   349  0008BA  6E1F               	movwf	LCD_goto@y^0,c
   350  0008BC  0E02               	movlw	2
   351  0008BE  EC16  F005         	call	_LCD_goto
   352                           
   353                           ;main.c: 200: LCD_printf("Fecha ");
   354  0008C2  0E08               	movlw	low STR_2
   355  0008C4  6E1F               	movwf	LCD_printf@dato^0,c
   356  0008C6  0E08               	movlw	high STR_2
   357  0008C8  6E20               	movwf	(LCD_printf@dato+1)^0,c
   358  0008CA  ECA3  F004         	call	_LCD_printf	;wreg free
   359                           
   360                           ;main.c: 201: leer_fecha();
   361  0008CE  EC56  F005         	call	_leer_fecha	;wreg free
   362                           
   363                           ;main.c: 202: mostrar_fecha();
   364  0008D2  ECF1  F004         	call	_mostrar_fecha	;wreg free
   365                           
   366                           ;main.c: 203: _delay((unsigned long)((100)*(4000000/4000.0)));
   367  0008D6  0E82               	movlw	130
   368  0008D8  6E22               	movwf	??_main^0,c
   369  0008DA  0EDE               	movlw	222
   370  0008DC                     u317:
   371  0008DC  2EE8               	decfsz	wreg,f,c
   372  0008DE  D7FE               	bra	u317
   373  0008E0  2E22               	decfsz	??_main^0,f,c
   374  0008E2  D7FC               	bra	u317
   375  0008E4  D7DA               	goto	l1337
   376  0008E6                     __end_of_main:
   377                           	callstack 0
   378                           
   379 ;; *************** function _mostrar_hora *****************
   380 ;; Defined at:
   381 ;;		line 154 in file "main.c"
   382 ;; Parameters:    Size  Location     Type
   383 ;;		None
   384 ;; Auto vars:     Size  Location     Type
   385 ;;		None
   386 ;; Return value:  Size  Location     Type
   387 ;;                  1    wreg      void 
   388 ;; Registers used:
   389 ;;		wreg, status,2, status,0, cstack
   390 ;; Tracked objects:
   391 ;;		On entry : 0/0
   392 ;;		On exit  : 0/0
   393 ;;		Unchanged: 0/0
   394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   395 ;;      Params:         0       0       0       0       0       0       0       0       0
   396 ;;      Locals:         0       0       0       0       0       0       0       0       0
   397 ;;      Temps:          0       0       0       0       0       0       0       0       0
   398 ;;      Totals:         0       0       0       0       0       0       0       0       0
   399 ;;Total ram usage:        0 bytes
   400 ;; Hardware stack levels used: 1
   401 ;; Hardware stack levels required when called: 2
   402 ;; This function calls:
   403 ;;		_LCD_dato
   404 ;; This function is called by:
   405 ;;		_main
   406 ;; This function uses a non-reentrant model
   407 ;;
   408                           
   409                           	psect	text1
   410  000998                     __ptext1:
   411                           	callstack 0
   412  000998                     _mostrar_hora:
   413                           	callstack 28
   414                           
   415                           ;main.c: 156: LCD_dato((hora>>4)+0x30);
   416                           
   417                           ;incstack = 0
   418  000998  380C               	swapf	_hora^0,w,c
   419  00099A  0B0F               	andlw	15
   420  00099C  0F30               	addlw	48
   421  00099E  EC1F  F006         	call	_LCD_dato
   422                           
   423                           ;main.c: 157: LCD_dato((hora & 0x0F)+0x30);
   424  0009A2  500C               	movf	_hora^0,w,c
   425  0009A4  0B0F               	andlw	15
   426  0009A6  0F30               	addlw	48
   427  0009A8  EC1F  F006         	call	_LCD_dato
   428                           
   429                           ;main.c: 158: LCD_dato(':');
   430  0009AC  0E3A               	movlw	58
   431  0009AE  EC1F  F006         	call	_LCD_dato
   432                           
   433                           ;main.c: 159: LCD_dato((min>>4)+0x30);
   434  0009B2  380D               	swapf	_min^0,w,c
   435  0009B4  0B0F               	andlw	15
   436  0009B6  0F30               	addlw	48
   437  0009B8  EC1F  F006         	call	_LCD_dato
   438                           
   439                           ;main.c: 160: LCD_dato((min & 0x0F)+0x30);
   440  0009BC  500D               	movf	_min^0,w,c
   441  0009BE  0B0F               	andlw	15
   442  0009C0  0F30               	addlw	48
   443  0009C2  EC1F  F006         	call	_LCD_dato
   444                           
   445                           ;main.c: 161: LCD_dato(':');
   446  0009C6  0E3A               	movlw	58
   447  0009C8  EC1F  F006         	call	_LCD_dato
   448                           
   449                           ;main.c: 162: LCD_dato((sec>>4)+0x30);
   450  0009CC  380E               	swapf	_sec^0,w,c
   451  0009CE  0B0F               	andlw	15
   452  0009D0  0F30               	addlw	48
   453  0009D2  EC1F  F006         	call	_LCD_dato
   454                           
   455                           ;main.c: 163: LCD_dato((sec & 0x0F)+0x30);
   456  0009D6  500E               	movf	_sec^0,w,c
   457  0009D8  0B0F               	andlw	15
   458  0009DA  0F30               	addlw	48
   459  0009DC  EC1F  F006         	call	_LCD_dato
   460  0009E0  0012               	return		;funcret
   461  0009E2                     __end_of_mostrar_hora:
   462                           	callstack 0
   463                           
   464 ;; *************** function _mostrar_fecha *****************
   465 ;; Defined at:
   466 ;;		line 166 in file "main.c"
   467 ;; Parameters:    Size  Location     Type
   468 ;;		None
   469 ;; Auto vars:     Size  Location     Type
   470 ;;		None
   471 ;; Return value:  Size  Location     Type
   472 ;;                  1    wreg      void 
   473 ;; Registers used:
   474 ;;		wreg, status,2, status,0, cstack
   475 ;; Tracked objects:
   476 ;;		On entry : 0/0
   477 ;;		On exit  : 0/0
   478 ;;		Unchanged: 0/0
   479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   480 ;;      Params:         0       0       0       0       0       0       0       0       0
   481 ;;      Locals:         0       0       0       0       0       0       0       0       0
   482 ;;      Temps:          0       0       0       0       0       0       0       0       0
   483 ;;      Totals:         0       0       0       0       0       0       0       0       0
   484 ;;Total ram usage:        0 bytes
   485 ;; Hardware stack levels used: 1
   486 ;; Hardware stack levels required when called: 2
   487 ;; This function calls:
   488 ;;		_LCD_dato
   489 ;; This function is called by:
   490 ;;		_main
   491 ;; This function uses a non-reentrant model
   492 ;;
   493                           
   494                           	psect	text2
   495  0009E2                     __ptext2:
   496                           	callstack 0
   497  0009E2                     _mostrar_fecha:
   498                           	callstack 28
   499                           
   500                           ;main.c: 168: LCD_dato((dia>>4)+0x30);
   501                           
   502                           ;incstack = 0
   503  0009E2  380B               	swapf	_dia^0,w,c
   504  0009E4  0B0F               	andlw	15
   505  0009E6  0F30               	addlw	48
   506  0009E8  EC1F  F006         	call	_LCD_dato
   507                           
   508                           ;main.c: 169: LCD_dato((dia & 0x0F)+0x30);
   509  0009EC  500B               	movf	_dia^0,w,c
   510  0009EE  0B0F               	andlw	15
   511  0009F0  0F30               	addlw	48
   512  0009F2  EC1F  F006         	call	_LCD_dato
   513                           
   514                           ;main.c: 170: LCD_dato('/');
   515  0009F6  0E2F               	movlw	47
   516  0009F8  EC1F  F006         	call	_LCD_dato
   517                           
   518                           ;main.c: 171: LCD_dato((mes>>4)+0x30);
   519  0009FC  380A               	swapf	_mes^0,w,c
   520  0009FE  0B0F               	andlw	15
   521  000A00  0F30               	addlw	48
   522  000A02  EC1F  F006         	call	_LCD_dato
   523                           
   524                           ;main.c: 172: LCD_dato((mes & 0x0F)+0x30);
   525  000A06  500A               	movf	_mes^0,w,c
   526  000A08  0B0F               	andlw	15
   527  000A0A  0F30               	addlw	48
   528  000A0C  EC1F  F006         	call	_LCD_dato
   529                           
   530                           ;main.c: 173: LCD_dato('/');
   531  000A10  0E2F               	movlw	47
   532  000A12  EC1F  F006         	call	_LCD_dato
   533                           
   534                           ;main.c: 174: LCD_dato((anio>>4)+0x30);
   535  000A16  3809               	swapf	_anio^0,w,c
   536  000A18  0B0F               	andlw	15
   537  000A1A  0F30               	addlw	48
   538  000A1C  EC1F  F006         	call	_LCD_dato
   539                           
   540                           ;main.c: 175: LCD_dato((anio & 0x0F)+0x30);
   541  000A20  5009               	movf	_anio^0,w,c
   542  000A22  0B0F               	andlw	15
   543  000A24  0F30               	addlw	48
   544  000A26  EC1F  F006         	call	_LCD_dato
   545  000A2A  0012               	return		;funcret
   546  000A2C                     __end_of_mostrar_fecha:
   547                           	callstack 0
   548                           
   549 ;; *************** function _leer_hora *****************
   550 ;; Defined at:
   551 ;;		line 110 in file "main.c"
   552 ;; Parameters:    Size  Location     Type
   553 ;;		None
   554 ;; Auto vars:     Size  Location     Type
   555 ;;		None
   556 ;; Return value:  Size  Location     Type
   557 ;;                  1    wreg      void 
   558 ;; Registers used:
   559 ;;		wreg, status,2, cstack
   560 ;; Tracked objects:
   561 ;;		On entry : 0/0
   562 ;;		On exit  : 0/0
   563 ;;		Unchanged: 0/0
   564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   565 ;;      Params:         0       0       0       0       0       0       0       0       0
   566 ;;      Locals:         0       0       0       0       0       0       0       0       0
   567 ;;      Temps:          0       0       0       0       0       0       0       0       0
   568 ;;      Totals:         0       0       0       0       0       0       0       0       0
   569 ;;Total ram usage:        0 bytes
   570 ;; Hardware stack levels used: 1
   571 ;; Hardware stack levels required when called: 1
   572 ;; This function calls:
   573 ;;		_I2C_ack
   574 ;;		_I2C_nack
   575 ;;		_I2C_read
   576 ;;		_I2C_restart
   577 ;;		_I2C_start
   578 ;;		_I2C_stop
   579 ;;		_I2C_write
   580 ;; This function is called by:
   581 ;;		_main
   582 ;; This function uses a non-reentrant model
   583 ;;
   584                           
   585                           	psect	text3
   586  000A6E                     __ptext3:
   587                           	callstack 0
   588  000A6E                     _leer_hora:
   589                           	callstack 29
   590                           
   591                           ;main.c: 112: I2C_start();
   592                           
   593                           ;incstack = 0
   594  000A6E  EC33  F006         	call	_I2C_start	;wreg free
   595                           
   596                           ;main.c: 113: I2C_write(0xD0);
   597  000A72  0ED0               	movlw	208
   598  000A74  EC06  F006         	call	_I2C_write
   599                           
   600                           ;main.c: 114: I2C_write(0x00);
   601  000A78  0E00               	movlw	0
   602  000A7A  EC06  F006         	call	_I2C_write
   603                           
   604                           ;main.c: 115: I2C_restart();
   605  000A7E  EC2B  F006         	call	_I2C_restart	;wreg free
   606                           
   607                           ;main.c: 116: I2C_write(0xD1);
   608  000A82  0ED1               	movlw	209
   609  000A84  EC06  F006         	call	_I2C_write
   610                           
   611                           ;main.c: 117: sec = I2C_read();
   612  000A88  EC0D  F006         	call	_I2C_read	;wreg free
   613  000A8C  6E0E               	movwf	_sec^0,c
   614                           
   615                           ;main.c: 118: I2C_ack();
   616  000A8E  EC19  F006         	call	_I2C_ack	;wreg free
   617                           
   618                           ;main.c: 119: min = I2C_read();
   619  000A92  EC0D  F006         	call	_I2C_read	;wreg free
   620  000A96  6E0D               	movwf	_min^0,c
   621                           
   622                           ;main.c: 120: I2C_ack();
   623  000A98  EC19  F006         	call	_I2C_ack	;wreg free
   624                           
   625                           ;main.c: 121: hora = I2C_read();
   626  000A9C  EC0D  F006         	call	_I2C_read	;wreg free
   627  000AA0  6E0C               	movwf	_hora^0,c
   628                           
   629                           ;main.c: 122: I2C_nack();
   630  000AA2  EC13  F006         	call	_I2C_nack	;wreg free
   631                           
   632                           ;main.c: 123: I2C_stop();
   633  000AA6  EC2F  F006         	call	_I2C_stop	;wreg free
   634  000AAA  0012               	return		;funcret
   635  000AAC                     __end_of_leer_hora:
   636                           	callstack 0
   637                           
   638 ;; *************** function _leer_fecha *****************
   639 ;; Defined at:
   640 ;;		line 137 in file "main.c"
   641 ;; Parameters:    Size  Location     Type
   642 ;;		None
   643 ;; Auto vars:     Size  Location     Type
   644 ;;		None
   645 ;; Return value:  Size  Location     Type
   646 ;;                  1    wreg      void 
   647 ;; Registers used:
   648 ;;		wreg, status,2, cstack
   649 ;; Tracked objects:
   650 ;;		On entry : 0/0
   651 ;;		On exit  : 0/0
   652 ;;		Unchanged: 0/0
   653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   654 ;;      Params:         0       0       0       0       0       0       0       0       0
   655 ;;      Locals:         0       0       0       0       0       0       0       0       0
   656 ;;      Temps:          0       0       0       0       0       0       0       0       0
   657 ;;      Totals:         0       0       0       0       0       0       0       0       0
   658 ;;Total ram usage:        0 bytes
   659 ;; Hardware stack levels used: 1
   660 ;; Hardware stack levels required when called: 1
   661 ;; This function calls:
   662 ;;		_I2C_ack
   663 ;;		_I2C_nack
   664 ;;		_I2C_read
   665 ;;		_I2C_restart
   666 ;;		_I2C_start
   667 ;;		_I2C_stop
   668 ;;		_I2C_write
   669 ;; This function is called by:
   670 ;;		_main
   671 ;; This function uses a non-reentrant model
   672 ;;
   673                           
   674                           	psect	text4
   675  000AAC                     __ptext4:
   676                           	callstack 0
   677  000AAC                     _leer_fecha:
   678                           	callstack 29
   679                           
   680                           ;main.c: 139: I2C_start();
   681                           
   682                           ;incstack = 0
   683  000AAC  EC33  F006         	call	_I2C_start	;wreg free
   684                           
   685                           ;main.c: 140: I2C_write(0xD0);
   686  000AB0  0ED0               	movlw	208
   687  000AB2  EC06  F006         	call	_I2C_write
   688                           
   689                           ;main.c: 141: I2C_write(0x04);
   690  000AB6  0E04               	movlw	4
   691  000AB8  EC06  F006         	call	_I2C_write
   692                           
   693                           ;main.c: 142: I2C_restart();
   694  000ABC  EC2B  F006         	call	_I2C_restart	;wreg free
   695                           
   696                           ;main.c: 143: I2C_write(0xD1);
   697  000AC0  0ED1               	movlw	209
   698  000AC2  EC06  F006         	call	_I2C_write
   699                           
   700                           ;main.c: 144: dia = I2C_read();
   701  000AC6  EC0D  F006         	call	_I2C_read	;wreg free
   702  000ACA  6E0B               	movwf	_dia^0,c
   703                           
   704                           ;main.c: 145: I2C_ack();
   705  000ACC  EC19  F006         	call	_I2C_ack	;wreg free
   706                           
   707                           ;main.c: 146: mes = I2C_read();
   708  000AD0  EC0D  F006         	call	_I2C_read	;wreg free
   709  000AD4  6E0A               	movwf	_mes^0,c
   710                           
   711                           ;main.c: 147: I2C_ack();
   712  000AD6  EC19  F006         	call	_I2C_ack	;wreg free
   713                           
   714                           ;main.c: 148: anio = I2C_read();
   715  000ADA  EC0D  F006         	call	_I2C_read	;wreg free
   716  000ADE  6E09               	movwf	_anio^0,c
   717                           
   718                           ;main.c: 149: I2C_nack();
   719  000AE0  EC13  F006         	call	_I2C_nack	;wreg free
   720                           
   721                           ;main.c: 150: I2C_stop();
   722  000AE4  EC2F  F006         	call	_I2C_stop	;wreg free
   723  000AE8  0012               	return		;funcret
   724  000AEA                     __end_of_leer_fecha:
   725                           	callstack 0
   726                           
   727 ;; *************** function _I2C_restart *****************
   728 ;; Defined at:
   729 ;;		line 24 in file "I2C.h"
   730 ;; Parameters:    Size  Location     Type
   731 ;;		None
   732 ;; Auto vars:     Size  Location     Type
   733 ;;		None
   734 ;; Return value:  Size  Location     Type
   735 ;;                  1    wreg      void 
   736 ;; Registers used:
   737 ;;		None
   738 ;; Tracked objects:
   739 ;;		On entry : 0/0
   740 ;;		On exit  : 0/0
   741 ;;		Unchanged: 0/0
   742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   743 ;;      Params:         0       0       0       0       0       0       0       0       0
   744 ;;      Locals:         0       0       0       0       0       0       0       0       0
   745 ;;      Temps:          0       0       0       0       0       0       0       0       0
   746 ;;      Totals:         0       0       0       0       0       0       0       0       0
   747 ;;Total ram usage:        0 bytes
   748 ;; Hardware stack levels used: 1
   749 ;; This function calls:
   750 ;;		Nothing
   751 ;; This function is called by:
   752 ;;		_leer_hora
   753 ;;		_leer_fecha
   754 ;; This function uses a non-reentrant model
   755 ;;
   756                           
   757                           	psect	text5
   758  000C56                     __ptext5:
   759                           	callstack 0
   760  000C56                     _I2C_restart:
   761                           	callstack 29
   762                           
   763                           ;I2C.h: 26: SSPCON2bits.RSEN = 1;
   764                           
   765                           ;incstack = 0
   766  000C56  82C5               	bsf	197,1,c	;volatile
   767  000C58                     l42:
   768  000C58  A2C5               	btfss	197,1,c	;volatile
   769  000C5A  0012               	return	
   770  000C5C  D7FD               	goto	l42
   771  000C5E                     __end_of_I2C_restart:
   772                           	callstack 0
   773                           
   774 ;; *************** function _I2C_read *****************
   775 ;; Defined at:
   776 ;;		line 36 in file "I2C.h"
   777 ;; Parameters:    Size  Location     Type
   778 ;;		None
   779 ;; Auto vars:     Size  Location     Type
   780 ;;		None
   781 ;; Return value:  Size  Location     Type
   782 ;;                  1    wreg      unsigned char 
   783 ;; Registers used:
   784 ;;		wreg, status,2
   785 ;; Tracked objects:
   786 ;;		On entry : 0/0
   787 ;;		On exit  : 0/0
   788 ;;		Unchanged: 0/0
   789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   790 ;;      Params:         0       0       0       0       0       0       0       0       0
   791 ;;      Locals:         0       0       0       0       0       0       0       0       0
   792 ;;      Temps:          0       0       0       0       0       0       0       0       0
   793 ;;      Totals:         0       0       0       0       0       0       0       0       0
   794 ;;Total ram usage:        0 bytes
   795 ;; Hardware stack levels used: 1
   796 ;; This function calls:
   797 ;;		Nothing
   798 ;; This function is called by:
   799 ;;		_leer_hora
   800 ;;		_leer_fecha
   801 ;; This function uses a non-reentrant model
   802 ;;
   803                           
   804                           	psect	text6
   805  000C1A                     __ptext6:
   806                           	callstack 0
   807  000C1A                     _I2C_read:
   808                           	callstack 29
   809                           
   810                           ;I2C.h: 38: PIR1bits.SSPIF = 0;
   811                           
   812                           ;incstack = 0
   813  000C1A  969E               	bcf	158,3,c	;volatile
   814                           
   815                           ;I2C.h: 39: SSPCON2bits.RCEN = 1;
   816  000C1C  86C5               	bsf	197,3,c	;volatile
   817  000C1E                     l54:
   818  000C1E  A69E               	btfss	158,3,c	;volatile
   819  000C20  D7FE               	goto	l54
   820                           
   821                           ;I2C.h: 41: return SSPBUF;
   822  000C22  50C9               	movf	201,w,c	;volatile
   823  000C24  0012               	return		;funcret
   824  000C26                     __end_of_I2C_read:
   825                           	callstack 0
   826                           
   827 ;; *************** function _I2C_nack *****************
   828 ;; Defined at:
   829 ;;		line 52 in file "I2C.h"
   830 ;; Parameters:    Size  Location     Type
   831 ;;		None
   832 ;; Auto vars:     Size  Location     Type
   833 ;;		None
   834 ;; Return value:  Size  Location     Type
   835 ;;                  1    wreg      void 
   836 ;; Registers used:
   837 ;;		None
   838 ;; Tracked objects:
   839 ;;		On entry : 0/0
   840 ;;		On exit  : 0/0
   841 ;;		Unchanged: 0/0
   842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   843 ;;      Params:         0       0       0       0       0       0       0       0       0
   844 ;;      Locals:         0       0       0       0       0       0       0       0       0
   845 ;;      Temps:          0       0       0       0       0       0       0       0       0
   846 ;;      Totals:         0       0       0       0       0       0       0       0       0
   847 ;;Total ram usage:        0 bytes
   848 ;; Hardware stack levels used: 1
   849 ;; This function calls:
   850 ;;		Nothing
   851 ;; This function is called by:
   852 ;;		_leer_hora
   853 ;;		_leer_fecha
   854 ;; This function uses a non-reentrant model
   855 ;;
   856                           
   857                           	psect	text7
   858  000C26                     __ptext7:
   859                           	callstack 0
   860  000C26                     _I2C_nack:
   861                           	callstack 29
   862                           
   863                           ;I2C.h: 54: PIR1bits.SSPIF = 0;
   864                           
   865                           ;incstack = 0
   866  000C26  969E               	bcf	158,3,c	;volatile
   867                           
   868                           ;I2C.h: 55: SSPCON2bits.ACKDT = 1;
   869  000C28  8AC5               	bsf	197,5,c	;volatile
   870                           
   871                           ;I2C.h: 56: SSPCON2bits.ACKEN = 1;
   872  000C2A  88C5               	bsf	197,4,c	;volatile
   873  000C2C                     l66:
   874  000C2C  B69E               	btfsc	158,3,c	;volatile
   875  000C2E  0012               	return	
   876  000C30  D7FD               	goto	l66
   877  000C32                     __end_of_I2C_nack:
   878                           	callstack 0
   879                           
   880 ;; *************** function _I2C_ack *****************
   881 ;; Defined at:
   882 ;;		line 44 in file "I2C.h"
   883 ;; Parameters:    Size  Location     Type
   884 ;;		None
   885 ;; Auto vars:     Size  Location     Type
   886 ;;		None
   887 ;; Return value:  Size  Location     Type
   888 ;;                  1    wreg      void 
   889 ;; Registers used:
   890 ;;		None
   891 ;; Tracked objects:
   892 ;;		On entry : 0/0
   893 ;;		On exit  : 0/0
   894 ;;		Unchanged: 0/0
   895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   896 ;;      Params:         0       0       0       0       0       0       0       0       0
   897 ;;      Locals:         0       0       0       0       0       0       0       0       0
   898 ;;      Temps:          0       0       0       0       0       0       0       0       0
   899 ;;      Totals:         0       0       0       0       0       0       0       0       0
   900 ;;Total ram usage:        0 bytes
   901 ;; Hardware stack levels used: 1
   902 ;; This function calls:
   903 ;;		Nothing
   904 ;; This function is called by:
   905 ;;		_leer_hora
   906 ;;		_leer_fecha
   907 ;; This function uses a non-reentrant model
   908 ;;
   909                           
   910                           	psect	text8
   911  000C32                     __ptext8:
   912                           	callstack 0
   913  000C32                     _I2C_ack:
   914                           	callstack 29
   915                           
   916                           ;I2C.h: 46: PIR1bits.SSPIF = 0;
   917                           
   918                           ;incstack = 0
   919  000C32  969E               	bcf	158,3,c	;volatile
   920                           
   921                           ;I2C.h: 47: SSPCON2bits.ACKDT = 0;
   922  000C34  9AC5               	bcf	197,5,c	;volatile
   923                           
   924                           ;I2C.h: 48: SSPCON2bits.ACKEN = 1;
   925  000C36  88C5               	bsf	197,4,c	;volatile
   926  000C38                     l60:
   927  000C38  B69E               	btfsc	158,3,c	;volatile
   928  000C3A  0012               	return	
   929  000C3C  D7FD               	goto	l60
   930  000C3E                     __end_of_I2C_ack:
   931                           	callstack 0
   932                           
   933 ;; *************** function _enviar_hora *****************
   934 ;; Defined at:
   935 ;;		line 99 in file "main.c"
   936 ;; Parameters:    Size  Location     Type
   937 ;;		None
   938 ;; Auto vars:     Size  Location     Type
   939 ;;		None
   940 ;; Return value:  Size  Location     Type
   941 ;;                  1    wreg      void 
   942 ;; Registers used:
   943 ;;		wreg, status,2, cstack
   944 ;; Tracked objects:
   945 ;;		On entry : 0/0
   946 ;;		On exit  : 0/0
   947 ;;		Unchanged: 0/0
   948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   949 ;;      Params:         0       0       0       0       0       0       0       0       0
   950 ;;      Locals:         0       0       0       0       0       0       0       0       0
   951 ;;      Temps:          0       0       0       0       0       0       0       0       0
   952 ;;      Totals:         0       0       0       0       0       0       0       0       0
   953 ;;Total ram usage:        0 bytes
   954 ;; Hardware stack levels used: 1
   955 ;; Hardware stack levels required when called: 1
   956 ;; This function calls:
   957 ;;		_I2C_start
   958 ;;		_I2C_stop
   959 ;;		_I2C_write
   960 ;; This function is called by:
   961 ;;		_main
   962 ;; This function uses a non-reentrant model
   963 ;;
   964                           
   965                           	psect	text9
   966  000B98                     __ptext9:
   967                           	callstack 0
   968  000B98                     _enviar_hora:
   969                           	callstack 29
   970                           
   971                           ;main.c: 101: I2C_start();
   972                           
   973                           ;incstack = 0
   974  000B98  EC33  F006         	call	_I2C_start	;wreg free
   975                           
   976                           ;main.c: 102: I2C_write(0xD0);
   977  000B9C  0ED0               	movlw	208
   978  000B9E  EC06  F006         	call	_I2C_write
   979                           
   980                           ;main.c: 103: I2C_write(0x00);
   981  000BA2  0E00               	movlw	0
   982  000BA4  EC06  F006         	call	_I2C_write
   983                           
   984                           ;main.c: 104: I2C_write(sec);
   985  000BA8  500E               	movf	_sec^0,w,c
   986  000BAA  EC06  F006         	call	_I2C_write
   987                           
   988                           ;main.c: 105: I2C_write(min);
   989  000BAE  500D               	movf	_min^0,w,c
   990  000BB0  EC06  F006         	call	_I2C_write
   991                           
   992                           ;main.c: 106: I2C_write(hora);
   993  000BB4  500C               	movf	_hora^0,w,c
   994  000BB6  EC06  F006         	call	_I2C_write
   995                           
   996                           ;main.c: 107: I2C_stop();
   997  000BBA  EC2F  F006         	call	_I2C_stop	;wreg free
   998  000BBE  0012               	return		;funcret
   999  000BC0                     __end_of_enviar_hora:
  1000                           	callstack 0
  1001                           
  1002 ;; *************** function _enviar_fecha *****************
  1003 ;; Defined at:
  1004 ;;		line 126 in file "main.c"
  1005 ;; Parameters:    Size  Location     Type
  1006 ;;		None
  1007 ;; Auto vars:     Size  Location     Type
  1008 ;;		None
  1009 ;; Return value:  Size  Location     Type
  1010 ;;                  1    wreg      void 
  1011 ;; Registers used:
  1012 ;;		wreg, status,2, cstack
  1013 ;; Tracked objects:
  1014 ;;		On entry : 0/0
  1015 ;;		On exit  : 0/0
  1016 ;;		Unchanged: 0/0
  1017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1018 ;;      Params:         0       0       0       0       0       0       0       0       0
  1019 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1020 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1021 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1022 ;;Total ram usage:        0 bytes
  1023 ;; Hardware stack levels used: 1
  1024 ;; Hardware stack levels required when called: 1
  1025 ;; This function calls:
  1026 ;;		_I2C_start
  1027 ;;		_I2C_stop
  1028 ;;		_I2C_write
  1029 ;; This function is called by:
  1030 ;;		_main
  1031 ;; This function uses a non-reentrant model
  1032 ;;
  1033                           
  1034                           	psect	text10
  1035  000BC0                     __ptext10:
  1036                           	callstack 0
  1037  000BC0                     _enviar_fecha:
  1038                           	callstack 29
  1039                           
  1040                           ;main.c: 128: I2C_start();
  1041                           
  1042                           ;incstack = 0
  1043  000BC0  EC33  F006         	call	_I2C_start	;wreg free
  1044                           
  1045                           ;main.c: 129: I2C_write(0xD0);
  1046  000BC4  0ED0               	movlw	208
  1047  000BC6  EC06  F006         	call	_I2C_write
  1048                           
  1049                           ;main.c: 130: I2C_write(0x04);
  1050  000BCA  0E04               	movlw	4
  1051  000BCC  EC06  F006         	call	_I2C_write
  1052                           
  1053                           ;main.c: 131: I2C_write(dia);
  1054  000BD0  500B               	movf	_dia^0,w,c
  1055  000BD2  EC06  F006         	call	_I2C_write
  1056                           
  1057                           ;main.c: 132: I2C_write(mes);
  1058  000BD6  500A               	movf	_mes^0,w,c
  1059  000BD8  EC06  F006         	call	_I2C_write
  1060                           
  1061                           ;main.c: 133: I2C_write(anio);
  1062  000BDC  5009               	movf	_anio^0,w,c
  1063  000BDE  EC06  F006         	call	_I2C_write
  1064                           
  1065                           ;main.c: 134: I2C_stop();
  1066  000BE2  EC2F  F006         	call	_I2C_stop	;wreg free
  1067  000BE6  0012               	return		;funcret
  1068  000BE8                     __end_of_enviar_fecha:
  1069                           	callstack 0
  1070                           
  1071 ;; *************** function _I2C_write *****************
  1072 ;; Defined at:
  1073 ;;		line 60 in file "I2C.h"
  1074 ;; Parameters:    Size  Location     Type
  1075 ;;  I2C_data        1    wreg     unsigned char 
  1076 ;; Auto vars:     Size  Location     Type
  1077 ;;  I2C_data        1    0[COMRAM] unsigned char 
  1078 ;; Return value:  Size  Location     Type
  1079 ;;                  1    wreg      unsigned char 
  1080 ;; Registers used:
  1081 ;;		wreg
  1082 ;; Tracked objects:
  1083 ;;		On entry : 0/0
  1084 ;;		On exit  : 0/0
  1085 ;;		Unchanged: 0/0
  1086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1087 ;;      Params:         0       0       0       0       0       0       0       0       0
  1088 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1089 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1090 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1091 ;;Total ram usage:        1 bytes
  1092 ;; Hardware stack levels used: 1
  1093 ;; This function calls:
  1094 ;;		Nothing
  1095 ;; This function is called by:
  1096 ;;		_enviar_hora
  1097 ;;		_leer_hora
  1098 ;;		_enviar_fecha
  1099 ;;		_leer_fecha
  1100 ;; This function uses a non-reentrant model
  1101 ;;
  1102                           
  1103                           	psect	text11
  1104  000C0C                     __ptext11:
  1105                           	callstack 0
  1106  000C0C                     _I2C_write:
  1107                           	callstack 29
  1108                           
  1109                           ;incstack = 0
  1110                           ;I2C_write@I2C_data stored from wreg
  1111  000C0C  6E1D               	movwf	I2C_write@I2C_data^0,c
  1112                           
  1113                           ;I2C.h: 61: PIR1bits.SSPIF = 0;
  1114  000C0E  969E               	bcf	158,3,c	;volatile
  1115                           
  1116                           ;I2C.h: 62: SSPBUF = I2C_data;
  1117  000C10  C01D  FFC9         	movff	I2C_write@I2C_data,4041	;volatile
  1118  000C14                     l72:
  1119  000C14  B69E               	btfsc	158,3,c	;volatile
  1120  000C16  0012               	return	
  1121  000C18  D7FD               	goto	l72
  1122  000C1A                     __end_of_I2C_write:
  1123                           	callstack 0
  1124                           
  1125 ;; *************** function _I2C_stop *****************
  1126 ;; Defined at:
  1127 ;;		line 30 in file "I2C.h"
  1128 ;; Parameters:    Size  Location     Type
  1129 ;;		None
  1130 ;; Auto vars:     Size  Location     Type
  1131 ;;		None
  1132 ;; Return value:  Size  Location     Type
  1133 ;;                  1    wreg      void 
  1134 ;; Registers used:
  1135 ;;		None
  1136 ;; Tracked objects:
  1137 ;;		On entry : 0/0
  1138 ;;		On exit  : 0/0
  1139 ;;		Unchanged: 0/0
  1140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1141 ;;      Params:         0       0       0       0       0       0       0       0       0
  1142 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1143 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1144 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1145 ;;Total ram usage:        0 bytes
  1146 ;; Hardware stack levels used: 1
  1147 ;; This function calls:
  1148 ;;		Nothing
  1149 ;; This function is called by:
  1150 ;;		_enviar_hora
  1151 ;;		_leer_hora
  1152 ;;		_enviar_fecha
  1153 ;;		_leer_fecha
  1154 ;; This function uses a non-reentrant model
  1155 ;;
  1156                           
  1157                           	psect	text12
  1158  000C5E                     __ptext12:
  1159                           	callstack 0
  1160  000C5E                     _I2C_stop:
  1161                           	callstack 29
  1162                           
  1163                           ;I2C.h: 32: SSPCON2bits.PEN = 1;
  1164                           
  1165                           ;incstack = 0
  1166  000C5E  84C5               	bsf	197,2,c	;volatile
  1167  000C60                     l48:
  1168  000C60  A4C5               	btfss	197,2,c	;volatile
  1169  000C62  0012               	return	
  1170  000C64  D7FD               	goto	l48
  1171  000C66                     __end_of_I2C_stop:
  1172                           	callstack 0
  1173                           
  1174 ;; *************** function _I2C_start *****************
  1175 ;; Defined at:
  1176 ;;		line 18 in file "I2C.h"
  1177 ;; Parameters:    Size  Location     Type
  1178 ;;		None
  1179 ;; Auto vars:     Size  Location     Type
  1180 ;;		None
  1181 ;; Return value:  Size  Location     Type
  1182 ;;                  1    wreg      void 
  1183 ;; Registers used:
  1184 ;;		None
  1185 ;; Tracked objects:
  1186 ;;		On entry : 0/0
  1187 ;;		On exit  : 0/0
  1188 ;;		Unchanged: 0/0
  1189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1190 ;;      Params:         0       0       0       0       0       0       0       0       0
  1191 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1192 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1193 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1194 ;;Total ram usage:        0 bytes
  1195 ;; Hardware stack levels used: 1
  1196 ;; This function calls:
  1197 ;;		Nothing
  1198 ;; This function is called by:
  1199 ;;		_enviar_hora
  1200 ;;		_leer_hora
  1201 ;;		_enviar_fecha
  1202 ;;		_leer_fecha
  1203 ;; This function uses a non-reentrant model
  1204 ;;
  1205                           
  1206                           	psect	text13
  1207  000C66                     __ptext13:
  1208                           	callstack 0
  1209  000C66                     _I2C_start:
  1210                           	callstack 29
  1211                           
  1212                           ;I2C.h: 20: SSPCON2bits.SEN = 1;
  1213                           
  1214                           ;incstack = 0
  1215  000C66  80C5               	bsf	197,0,c	;volatile
  1216  000C68                     l36:
  1217  000C68  A0C5               	btfss	197,0,c	;volatile
  1218  000C6A  0012               	return	
  1219  000C6C  D7FD               	goto	l36
  1220  000C6E                     __end_of_I2C_start:
  1221                           	callstack 0
  1222                           
  1223 ;; *************** function _convertirHora *****************
  1224 ;; Defined at:
  1225 ;;		line 77 in file "main.c"
  1226 ;; Parameters:    Size  Location     Type
  1227 ;;		None
  1228 ;; Auto vars:     Size  Location     Type
  1229 ;;  i               1    0[COMRAM] unsigned char 
  1230 ;; Return value:  Size  Location     Type
  1231 ;;                  1    wreg      void 
  1232 ;; Registers used:
  1233 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1234 ;; Tracked objects:
  1235 ;;		On entry : 0/0
  1236 ;;		On exit  : 0/0
  1237 ;;		Unchanged: 0/0
  1238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1239 ;;      Params:         0       0       0       0       0       0       0       0       0
  1240 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1241 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1242 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1243 ;;Total ram usage:        1 bytes
  1244 ;; Hardware stack levels used: 1
  1245 ;; This function calls:
  1246 ;;		Nothing
  1247 ;; This function is called by:
  1248 ;;		_main
  1249 ;; This function uses a non-reentrant model
  1250 ;;
  1251                           
  1252                           	psect	text14
  1253  000AEA                     __ptext14:
  1254                           	callstack 0
  1255  000AEA                     _convertirHora:
  1256                           	callstack 30
  1257                           
  1258                           ;main.c: 79: for(uint8_t i=0; i<7; i++){
  1259                           
  1260                           ;incstack = 0
  1261  000AEA  0E00               	movlw	0
  1262  000AEC  6E1D               	movwf	convertirHora@i^0,c
  1263  000AEE                     l1275:
  1264                           
  1265                           ;main.c: 80: Hora[i] &= 0x0F;
  1266  000AEE  0E16               	movlw	low _Hora
  1267  000AF0  241D               	addwf	convertirHora@i^0,w,c
  1268  000AF2  6ED9               	movwf	fsr2l,c
  1269  000AF4  6ADA               	clrf	fsr2h,c
  1270  000AF6  0E00               	movlw	high _Hora
  1271  000AF8  22DA               	addwfc	fsr2h,f,c
  1272  000AFA  0E0F               	movlw	15
  1273  000AFC  16DF               	andwf	indf2,f,c
  1274  000AFE  2A1D               	incf	convertirHora@i^0,f,c
  1275  000B00  0E06               	movlw	6
  1276  000B02  641D               	cpfsgt	convertirHora@i^0,c
  1277  000B04  D7F4               	goto	l1275
  1278                           
  1279                           ;main.c: 81: };main.c: 83: hora = ((Hora[0]<<4)+ Hora[1]);
  1280  000B06  5016               	movf	_Hora^0,w,c
  1281  000B08  0D10               	mullw	16
  1282  000B0A  50F3               	movf	243,w,c
  1283  000B0C  2417               	addwf	(_Hora+1)^0,w,c
  1284  000B0E  6E0C               	movwf	_hora^0,c
  1285                           
  1286                           ;main.c: 84: min = ((Hora[2]<<4)+ Hora[3]);
  1287  000B10  5018               	movf	(_Hora+2)^0,w,c
  1288  000B12  0D10               	mullw	16
  1289  000B14  50F3               	movf	243,w,c
  1290  000B16  2419               	addwf	(_Hora+3)^0,w,c
  1291  000B18  6E0D               	movwf	_min^0,c
  1292                           
  1293                           ;main.c: 85: sec = ((Hora[4]<<4)+ Hora[5]);
  1294  000B1A  501A               	movf	(_Hora+4)^0,w,c
  1295  000B1C  0D10               	mullw	16
  1296  000B1E  50F3               	movf	243,w,c
  1297  000B20  241B               	addwf	(_Hora+5)^0,w,c
  1298  000B22  6E0E               	movwf	_sec^0,c
  1299  000B24  0012               	return		;funcret
  1300  000B26                     __end_of_convertirHora:
  1301                           	callstack 0
  1302                           
  1303 ;; *************** function _convertirFecha *****************
  1304 ;; Defined at:
  1305 ;;		line 88 in file "main.c"
  1306 ;; Parameters:    Size  Location     Type
  1307 ;;		None
  1308 ;; Auto vars:     Size  Location     Type
  1309 ;;  i               1    0[COMRAM] unsigned char 
  1310 ;; Return value:  Size  Location     Type
  1311 ;;                  1    wreg      void 
  1312 ;; Registers used:
  1313 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1314 ;; Tracked objects:
  1315 ;;		On entry : 0/0
  1316 ;;		On exit  : 0/0
  1317 ;;		Unchanged: 0/0
  1318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1319 ;;      Params:         0       0       0       0       0       0       0       0       0
  1320 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1321 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1322 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1323 ;;Total ram usage:        1 bytes
  1324 ;; Hardware stack levels used: 1
  1325 ;; This function calls:
  1326 ;;		Nothing
  1327 ;; This function is called by:
  1328 ;;		_main
  1329 ;; This function uses a non-reentrant model
  1330 ;;
  1331                           
  1332                           	psect	text15
  1333  000B26                     __ptext15:
  1334                           	callstack 0
  1335  000B26                     _convertirFecha:
  1336                           	callstack 30
  1337                           
  1338                           ;main.c: 90: for(uint8_t i=0; i<7; i++){
  1339                           
  1340                           ;incstack = 0
  1341  000B26  0E00               	movlw	0
  1342  000B28  6E1D               	movwf	convertirFecha@i^0,c
  1343  000B2A                     l1289:
  1344                           
  1345                           ;main.c: 91: Fecha[i] &= 0x0F;
  1346  000B2A  0E0F               	movlw	low _Fecha
  1347  000B2C  241D               	addwf	convertirFecha@i^0,w,c
  1348  000B2E  6ED9               	movwf	fsr2l,c
  1349  000B30  6ADA               	clrf	fsr2h,c
  1350  000B32  0E00               	movlw	high _Fecha
  1351  000B34  22DA               	addwfc	fsr2h,f,c
  1352  000B36  0E0F               	movlw	15
  1353  000B38  16DF               	andwf	indf2,f,c
  1354  000B3A  2A1D               	incf	convertirFecha@i^0,f,c
  1355  000B3C  0E06               	movlw	6
  1356  000B3E  641D               	cpfsgt	convertirFecha@i^0,c
  1357  000B40  D7F4               	goto	l1289
  1358                           
  1359                           ;main.c: 92: };main.c: 94: dia = ((Fecha[0]<<4)+ Fecha[1]);
  1360  000B42  500F               	movf	_Fecha^0,w,c
  1361  000B44  0D10               	mullw	16
  1362  000B46  50F3               	movf	243,w,c
  1363  000B48  2410               	addwf	(_Fecha+1)^0,w,c
  1364  000B4A  6E0B               	movwf	_dia^0,c
  1365                           
  1366                           ;main.c: 95: mes = ((Fecha[2]<<4)+ Fecha[3]);
  1367  000B4C  5011               	movf	(_Fecha+2)^0,w,c
  1368  000B4E  0D10               	mullw	16
  1369  000B50  50F3               	movf	243,w,c
  1370  000B52  2412               	addwf	(_Fecha+3)^0,w,c
  1371  000B54  6E0A               	movwf	_mes^0,c
  1372                           
  1373                           ;main.c: 96: anio = ((Fecha[4]<<4)+ Fecha[5]);
  1374  000B56  5013               	movf	(_Fecha+4)^0,w,c
  1375  000B58  0D10               	mullw	16
  1376  000B5A  50F3               	movf	243,w,c
  1377  000B5C  2414               	addwf	(_Fecha+5)^0,w,c
  1378  000B5E  6E09               	movwf	_anio^0,c
  1379  000B60  0012               	return		;funcret
  1380  000B62                     __end_of_convertirFecha:
  1381                           	callstack 0
  1382                           
  1383 ;; *************** function _LCD_printf *****************
  1384 ;; Defined at:
  1385 ;;		line 100 in file "LCD.c"
  1386 ;; Parameters:    Size  Location     Type
  1387 ;;  dato            2    2[COMRAM] PTR unsigned char 
  1388 ;;		 -> LCD_integer@st(8), STR_2(7), STR_1(7), 
  1389 ;; Auto vars:     Size  Location     Type
  1390 ;;		None
  1391 ;; Return value:  Size  Location     Type
  1392 ;;                  1    wreg      void 
  1393 ;; Registers used:
  1394 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1395 ;; Tracked objects:
  1396 ;;		On entry : 0/0
  1397 ;;		On exit  : 0/0
  1398 ;;		Unchanged: 0/0
  1399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1400 ;;      Params:         2       0       0       0       0       0       0       0       0
  1401 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1402 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1403 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1404 ;;Total ram usage:        2 bytes
  1405 ;; Hardware stack levels used: 1
  1406 ;; Hardware stack levels required when called: 2
  1407 ;; This function calls:
  1408 ;;		_LCD_dato
  1409 ;; This function is called by:
  1410 ;;		_main
  1411 ;;		_LCD_integer
  1412 ;; This function uses a non-reentrant model
  1413 ;;
  1414                           
  1415                           	psect	text16
  1416  000946                     __ptext16:
  1417                           	callstack 0
  1418  000946                     _LCD_printf:
  1419                           	callstack 28
  1420                           
  1421                           ;LCD.c: 101: while (*dato){
  1422                           
  1423                           ;incstack = 0
  1424  000946  D014               	goto	l1321
  1425  000948                     l1317:
  1426                           
  1427                           ;LCD.c: 102: LCD_dato(*dato);
  1428  000948  C01F  FFF6         	movff	LCD_printf@dato,tblptrl
  1429  00094C  C020  FFF7         	movff	LCD_printf@dato+1,tblptrh
  1430  000950  6AF8               	clrf	tblptru,c
  1431  000952  0E07               	movlw	(high __ramtop+-1)
  1432  000954  64F7               	cpfsgt	tblptrh,c
  1433  000956  D003               	bra	u277
  1434  000958  0008               	tblrd		*
  1435  00095A  50F5               	movf	tablat,w,c
  1436  00095C  D005               	bra	u270
  1437  00095E                     u277:
  1438  00095E  CFF6 FFE9          	movff	tblptrl,fsr0l
  1439  000962  CFF7 FFEA          	movff	tblptrh,fsr0h
  1440  000966  50EF               	movf	indf0,w,c
  1441  000968                     u270:
  1442  000968  EC1F  F006         	call	_LCD_dato
  1443                           
  1444                           ;LCD.c: 103: dato++;
  1445  00096C  4A1F               	infsnz	LCD_printf@dato^0,f,c
  1446  00096E  2A20               	incf	(LCD_printf@dato+1)^0,f,c
  1447  000970                     l1321:
  1448  000970  C01F  FFF6         	movff	LCD_printf@dato,tblptrl
  1449  000974  C020  FFF7         	movff	LCD_printf@dato+1,tblptrh
  1450  000978  6AF8               	clrf	tblptru,c
  1451  00097A  0E07               	movlw	(high __ramtop+-1)
  1452  00097C  64F7               	cpfsgt	tblptrh,c
  1453  00097E  D003               	bra	u287
  1454  000980  0008               	tblrd		*
  1455  000982  50F5               	movf	tablat,w,c
  1456  000984  D005               	bra	u280
  1457  000986                     u287:
  1458  000986  CFF6 FFE9          	movff	tblptrl,fsr0l
  1459  00098A  CFF7 FFEA          	movff	tblptrh,fsr0h
  1460  00098E  50EF               	movf	indf0,w,c
  1461  000990                     u280:
  1462  000990  0900               	iorlw	0
  1463  000992  B4D8               	btfsc	status,2,c
  1464  000994  0012               	return	
  1465  000996  D7D8               	goto	l1317
  1466  000998                     __end_of_LCD_printf:
  1467                           	callstack 0
  1468                           
  1469 ;; *************** function _LCD_dato *****************
  1470 ;; Defined at:
  1471 ;;		line 88 in file "LCD.c"
  1472 ;; Parameters:    Size  Location     Type
  1473 ;;  dato            1    wreg     unsigned char 
  1474 ;; Auto vars:     Size  Location     Type
  1475 ;;  dato            1    1[COMRAM] unsigned char 
  1476 ;; Return value:  Size  Location     Type
  1477 ;;                  1    wreg      void 
  1478 ;; Registers used:
  1479 ;;		wreg, status,2, status,0, cstack
  1480 ;; Tracked objects:
  1481 ;;		On entry : 0/0
  1482 ;;		On exit  : 0/0
  1483 ;;		Unchanged: 0/0
  1484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1485 ;;      Params:         0       0       0       0       0       0       0       0       0
  1486 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1487 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1488 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1489 ;;Total ram usage:        1 bytes
  1490 ;; Hardware stack levels used: 1
  1491 ;; Hardware stack levels required when called: 1
  1492 ;; This function calls:
  1493 ;;		_LCD_write
  1494 ;; This function is called by:
  1495 ;;		_mostrar_hora
  1496 ;;		_mostrar_fecha
  1497 ;;		_LCD_printf
  1498 ;;		_putch
  1499 ;;		_LCD_custom_char
  1500 ;; This function uses a non-reentrant model
  1501 ;;
  1502                           
  1503                           	psect	text17
  1504  000C3E                     __ptext17:
  1505                           	callstack 0
  1506  000C3E                     _LCD_dato:
  1507                           	callstack 28
  1508                           
  1509                           ;incstack = 0
  1510                           ;LCD_dato@dato stored from wreg
  1511  000C3E  6E1E               	movwf	LCD_dato@dato^0,c
  1512                           
  1513                           ;LCD.c: 91: LATAbits.LATA2 = 1;
  1514  000C40  8489               	bsf	137,2,c	;volatile
  1515                           
  1516                           ;LCD.c: 92: LCD_write(dato);
  1517  000C42  501E               	movf	LCD_dato@dato^0,w,c
  1518  000C44  EC08  F004         	call	_LCD_write
  1519  000C48  0012               	return		;funcret
  1520  000C4A                     __end_of_LCD_dato:
  1521                           	callstack 0
  1522                           
  1523 ;; *************** function _LCD_init *****************
  1524 ;; Defined at:
  1525 ;;		line 18 in file "LCD.c"
  1526 ;; Parameters:    Size  Location     Type
  1527 ;;		None
  1528 ;; Auto vars:     Size  Location     Type
  1529 ;;		None
  1530 ;; Return value:  Size  Location     Type
  1531 ;;                  1    wreg      void 
  1532 ;; Registers used:
  1533 ;;		wreg, status,2, status,0, cstack
  1534 ;; Tracked objects:
  1535 ;;		On entry : 0/0
  1536 ;;		On exit  : 0/0
  1537 ;;		Unchanged: 0/0
  1538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1539 ;;      Params:         0       0       0       0       0       0       0       0       0
  1540 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1541 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1542 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1543 ;;Total ram usage:        2 bytes
  1544 ;; Hardware stack levels used: 1
  1545 ;; Hardware stack levels required when called: 2
  1546 ;; This function calls:
  1547 ;;		_LCD_cmd
  1548 ;; This function is called by:
  1549 ;;		_main
  1550 ;; This function uses a non-reentrant model
  1551 ;;
  1552                           
  1553                           	psect	text18
  1554  0008E6                     __ptext18:
  1555                           	callstack 0
  1556  0008E6                     _LCD_init:
  1557                           	callstack 28
  1558                           
  1559                           ;LCD.c: 20: TRISCbits.TRISC0 = 0;
  1560                           
  1561                           ;incstack = 0
  1562  0008E6  9094               	bcf	148,0,c	;volatile
  1563                           
  1564                           ;LCD.c: 21: TRISCbits.TRISC1 = 0;
  1565  0008E8  9294               	bcf	148,1,c	;volatile
  1566                           
  1567                           ;LCD.c: 22: TRISCbits.TRISC2 = 0;
  1568  0008EA  9494               	bcf	148,2,c	;volatile
  1569                           
  1570                           ;LCD.c: 23: TRISBbits.TRISB3 = 0;
  1571  0008EC  9693               	bcf	147,3,c	;volatile
  1572                           
  1573                           ;LCD.c: 25: TRISAbits.TRISA2 = 0;
  1574  0008EE  9492               	bcf	146,2,c	;volatile
  1575                           
  1576                           ;LCD.c: 26: TRISAbits.TRISA3 = 0;
  1577  0008F0  9692               	bcf	146,3,c	;volatile
  1578                           
  1579                           ;LCD.c: 27: LATAbits.LATA2 = 0;
  1580  0008F2  9489               	bcf	137,2,c	;volatile
  1581                           
  1582                           ;LCD.c: 28: LATAbits.LATA3 = 0;
  1583  0008F4  9689               	bcf	137,3,c	;volatile
  1584                           
  1585                           ;LCD.c: 30: LATCbits.LATC0 = 0;
  1586  0008F6  908B               	bcf	139,0,c	;volatile
  1587                           
  1588                           ;LCD.c: 31: LATCbits.LATC1 = 0;
  1589  0008F8  928B               	bcf	139,1,c	;volatile
  1590                           
  1591                           ;LCD.c: 32: LATCbits.LATC2 = 0;
  1592  0008FA  948B               	bcf	139,2,c	;volatile
  1593                           
  1594                           ;LCD.c: 33: LATBbits.LATB3 = 0;
  1595  0008FC  968A               	bcf	138,3,c	;volatile
  1596                           
  1597                           ;LCD.c: 35: _delay((unsigned long)((50)*(4000000/4000.0)));
  1598  0008FE  0E41               	movlw	65
  1599  000900  6E1F               	movwf	??_LCD_init^0,c
  1600  000902  0EEE               	movlw	238
  1601  000904                     u327:
  1602  000904  2EE8               	decfsz	wreg,f,c
  1603  000906  D7FE               	bra	u327
  1604  000908  2E1F               	decfsz	??_LCD_init^0,f,c
  1605  00090A  D7FC               	bra	u327
  1606  00090C  D000               	nop2	
  1607                           
  1608                           ;LCD.c: 36: LCD_cmd(0x02);
  1609  00090E  0E02               	movlw	2
  1610  000910  EC25  F006         	call	_LCD_cmd
  1611                           
  1612                           ;LCD.c: 37: LCD_cmd(0x28);
  1613  000914  0E28               	movlw	40
  1614  000916  EC25  F006         	call	_LCD_cmd
  1615                           
  1616                           ;LCD.c: 38: LCD_cmd(0x0C);
  1617  00091A  0E0C               	movlw	12
  1618  00091C  EC25  F006         	call	_LCD_cmd
  1619                           
  1620                           ;LCD.c: 39: LCD_cmd(0x06);
  1621  000920  0E06               	movlw	6
  1622  000922  EC25  F006         	call	_LCD_cmd
  1623                           
  1624                           ;LCD.c: 40: LCD_cmd(0X01);
  1625  000926  0E01               	movlw	1
  1626  000928  EC25  F006         	call	_LCD_cmd
  1627                           
  1628                           ;LCD.c: 41: _delay((unsigned long)((300)*(4000000/4000.0)));
  1629  00092C  0E02               	movlw	2
  1630  00092E  6E20               	movwf	(??_LCD_init+1)^0,c
  1631  000930  0E86               	movlw	134
  1632  000932  6E1F               	movwf	??_LCD_init^0,c
  1633  000934  0E99               	movlw	153
  1634  000936                     u337:
  1635  000936  2EE8               	decfsz	wreg,f,c
  1636  000938  D7FE               	bra	u337
  1637  00093A  2E1F               	decfsz	??_LCD_init^0,f,c
  1638  00093C  D7FC               	bra	u337
  1639  00093E  2E20               	decfsz	(??_LCD_init+1)^0,f,c
  1640  000940  D7FA               	bra	u337
  1641  000942  F000               	nop	
  1642  000944  0012               	return		;funcret
  1643  000946                     __end_of_LCD_init:
  1644                           	callstack 0
  1645                           
  1646 ;; *************** function _LCD_goto *****************
  1647 ;; Defined at:
  1648 ;;		line 122 in file "LCD.c"
  1649 ;; Parameters:    Size  Location     Type
  1650 ;;  x               1    wreg     unsigned char 
  1651 ;;  y               1    2[COMRAM] unsigned char 
  1652 ;; Auto vars:     Size  Location     Type
  1653 ;;  x               1    4[COMRAM] unsigned char 
  1654 ;;  posicion        1    3[COMRAM] unsigned char 
  1655 ;; Return value:  Size  Location     Type
  1656 ;;                  1    wreg      void 
  1657 ;; Registers used:
  1658 ;;		wreg, status,2, status,0, cstack
  1659 ;; Tracked objects:
  1660 ;;		On entry : 0/0
  1661 ;;		On exit  : 0/0
  1662 ;;		Unchanged: 0/0
  1663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1664 ;;      Params:         1       0       0       0       0       0       0       0       0
  1665 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1666 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1667 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1668 ;;Total ram usage:        3 bytes
  1669 ;; Hardware stack levels used: 1
  1670 ;; Hardware stack levels required when called: 2
  1671 ;; This function calls:
  1672 ;;		_LCD_cmd
  1673 ;; This function is called by:
  1674 ;;		_main
  1675 ;; This function uses a non-reentrant model
  1676 ;;
  1677                           
  1678                           	psect	text19
  1679  000A2C                     __ptext19:
  1680                           	callstack 0
  1681  000A2C                     _LCD_goto:
  1682                           	callstack 28
  1683                           
  1684                           ;incstack = 0
  1685                           ;LCD_goto@x stored from wreg
  1686  000A2C  6E21               	movwf	LCD_goto@x^0,c
  1687                           
  1688                           ;LCD.c: 123: uint8_t posicion;;LCD.c: 124: switch (y) {
  1689  000A2E  D00C               	goto	l1311
  1690  000A30                     l1299:
  1691  000A30  0421               	decf	LCD_goto@x^0,w,c
  1692  000A32  D008               	goto	L3
  1693  000A34                     l1301:
  1694  000A34  5021               	movf	LCD_goto@x^0,w,c
  1695  000A36  0F3F               	addlw	63
  1696  000A38  D005               	goto	L3
  1697  000A3A                     l1303:
  1698  000A3A  5021               	movf	LCD_goto@x^0,w,c
  1699  000A3C  0F13               	addlw	19
  1700  000A3E  D002               	goto	L3
  1701  000A40                     l1305:
  1702  000A40  5021               	movf	LCD_goto@x^0,w,c
  1703  000A42  0F53               	addlw	83
  1704  000A44                     L3:
  1705  000A44  6E20               	movwf	LCD_goto@posicion^0,c
  1706  000A46  D00E               	goto	l1313
  1707  000A48                     l1311:
  1708  000A48  501F               	movf	LCD_goto@y^0,w,c
  1709                           
  1710                           ; Switch size 1, requested type "simple"
  1711                           ; Number of cases is 4, Range of values is 1 to 4
  1712                           ; switch strategies available:
  1713                           ; Name         Instructions Cycles
  1714                           ; simple_byte           13     7 (average)
  1715                           ;	Chosen strategy is simple_byte
  1716  000A4A  0A01               	xorlw	1	; case 1
  1717  000A4C  B4D8               	btfsc	status,2,c
  1718  000A4E  D7F0               	goto	l1299
  1719  000A50  0A03               	xorlw	3	; case 2
  1720  000A52  B4D8               	btfsc	status,2,c
  1721  000A54  D7EF               	goto	l1301
  1722  000A56  0A01               	xorlw	1	; case 3
  1723  000A58  B4D8               	btfsc	status,2,c
  1724  000A5A  D7EF               	goto	l1303
  1725  000A5C  0A07               	xorlw	7	; case 4
  1726  000A5E  B4D8               	btfsc	status,2,c
  1727  000A60  D7EF               	goto	l1305
  1728  000A62  D7E6               	goto	l1299
  1729  000A64                     l1313:
  1730                           
  1731                           ;LCD.c: 131: LCD_cmd(0x80 | posicion);
  1732  000A64  5020               	movf	LCD_goto@posicion^0,w,c
  1733  000A66  0980               	iorlw	128
  1734  000A68  EC25  F006         	call	_LCD_cmd
  1735  000A6C  0012               	return		;funcret
  1736  000A6E                     __end_of_LCD_goto:
  1737                           	callstack 0
  1738                           
  1739 ;; *************** function _LCD_cmd *****************
  1740 ;; Defined at:
  1741 ;;		line 72 in file "LCD.c"
  1742 ;; Parameters:    Size  Location     Type
  1743 ;;  dato            1    wreg     unsigned char 
  1744 ;; Auto vars:     Size  Location     Type
  1745 ;;  dato            1    1[COMRAM] unsigned char 
  1746 ;; Return value:  Size  Location     Type
  1747 ;;                  1    wreg      void 
  1748 ;; Registers used:
  1749 ;;		wreg, status,2, status,0, cstack
  1750 ;; Tracked objects:
  1751 ;;		On entry : 0/0
  1752 ;;		On exit  : 0/0
  1753 ;;		Unchanged: 0/0
  1754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1755 ;;      Params:         0       0       0       0       0       0       0       0       0
  1756 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1757 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1758 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1759 ;;Total ram usage:        1 bytes
  1760 ;; Hardware stack levels used: 1
  1761 ;; Hardware stack levels required when called: 1
  1762 ;; This function calls:
  1763 ;;		_LCD_write
  1764 ;; This function is called by:
  1765 ;;		_LCD_init
  1766 ;;		_LCD_goto
  1767 ;;		_LCD_cursor
  1768 ;;		_LCD_segunda_linea
  1769 ;;		_LCD_clear
  1770 ;;		_LCD_home
  1771 ;;		_LCD_custom_char
  1772 ;; This function uses a non-reentrant model
  1773 ;;
  1774                           
  1775                           	psect	text20
  1776  000C4A                     __ptext20:
  1777                           	callstack 0
  1778  000C4A                     _LCD_cmd:
  1779                           	callstack 28
  1780                           
  1781                           ;incstack = 0
  1782                           ;LCD_cmd@dato stored from wreg
  1783  000C4A  6E1E               	movwf	LCD_cmd@dato^0,c
  1784                           
  1785                           ;LCD.c: 75: LATAbits.LATA2 = 0;
  1786  000C4C  9489               	bcf	137,2,c	;volatile
  1787                           
  1788                           ;LCD.c: 76: LCD_write(dato);
  1789  000C4E  501E               	movf	LCD_cmd@dato^0,w,c
  1790  000C50  EC08  F004         	call	_LCD_write
  1791  000C54  0012               	return		;funcret
  1792  000C56                     __end_of_LCD_cmd:
  1793                           	callstack 0
  1794                           
  1795 ;; *************** function _LCD_write *****************
  1796 ;; Defined at:
  1797 ;;		line 48 in file "LCD.c"
  1798 ;; Parameters:    Size  Location     Type
  1799 ;;  dato            1    wreg     unsigned char 
  1800 ;; Auto vars:     Size  Location     Type
  1801 ;;  dato            1    0[COMRAM] unsigned char 
  1802 ;; Return value:  Size  Location     Type
  1803 ;;                  1    wreg      void 
  1804 ;; Registers used:
  1805 ;;		wreg, status,2, status,0
  1806 ;; Tracked objects:
  1807 ;;		On entry : 0/0
  1808 ;;		On exit  : 0/0
  1809 ;;		Unchanged: 0/0
  1810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1811 ;;      Params:         0       0       0       0       0       0       0       0       0
  1812 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1813 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1814 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1815 ;;Total ram usage:        1 bytes
  1816 ;; Hardware stack levels used: 1
  1817 ;; This function calls:
  1818 ;;		Nothing
  1819 ;; This function is called by:
  1820 ;;		_LCD_cmd
  1821 ;;		_LCD_dato
  1822 ;; This function uses a non-reentrant model
  1823 ;;
  1824                           
  1825                           	psect	text21
  1826  000810                     __ptext21:
  1827                           	callstack 0
  1828  000810                     _LCD_write:
  1829                           	callstack 28
  1830                           
  1831                           ;incstack = 0
  1832                           ;LCD_write@dato stored from wreg
  1833  000810  6E1D               	movwf	LCD_write@dato^0,c
  1834                           
  1835                           ;LCD.c: 50: if (dato & (1<<4)) LATCbits.LATC0 = 1; else LATCbits.LATC0 = 0;
  1836  000812  A81D               	btfss	LCD_write@dato^0,4,c
  1837  000814  D002               	goto	l157
  1838  000816  808B               	bsf	139,0,c	;volatile
  1839  000818  D001               	goto	l989
  1840  00081A                     l157:
  1841  00081A  908B               	bcf	139,0,c	;volatile
  1842  00081C                     l989:
  1843                           
  1844                           ;LCD.c: 51: if (dato & (1<<5)) LATCbits.LATC1 = 1; else LATCbits.LATC1 = 0;
  1845  00081C  AA1D               	btfss	LCD_write@dato^0,5,c
  1846  00081E  D002               	goto	l159
  1847  000820  828B               	bsf	139,1,c	;volatile
  1848  000822  D001               	goto	l993
  1849  000824                     l159:
  1850  000824  928B               	bcf	139,1,c	;volatile
  1851  000826                     l993:
  1852                           
  1853                           ;LCD.c: 52: if (dato & (1<<6)) LATCbits.LATC2 = 1; else LATCbits.LATC2 = 0;
  1854  000826  AC1D               	btfss	LCD_write@dato^0,6,c
  1855  000828  D002               	goto	l161
  1856  00082A  848B               	bsf	139,2,c	;volatile
  1857  00082C  D001               	goto	l997
  1858  00082E                     l161:
  1859  00082E  948B               	bcf	139,2,c	;volatile
  1860  000830                     l997:
  1861                           
  1862                           ;LCD.c: 53: if (dato & (1<<7)) LATBbits.LATB3 = 1; else LATBbits.LATB3 = 0;
  1863  000830  AE1D               	btfss	LCD_write@dato^0,7,c
  1864  000832  D002               	goto	l163
  1865  000834  868A               	bsf	138,3,c	;volatile
  1866  000836  D001               	goto	l164
  1867  000838                     l163:
  1868  000838  968A               	bcf	138,3,c	;volatile
  1869  00083A                     l164:
  1870                           
  1871                           ;LCD.c: 54: LATAbits.LATA3 = 1;
  1872  00083A  8689               	bsf	137,3,c	;volatile
  1873                           
  1874                           ;LCD.c: 55: __nop();
  1875  00083C  F000               	nop	
  1876                           
  1877                           ;LCD.c: 56: LATAbits.LATA3 = 0;
  1878  00083E  9689               	bcf	137,3,c	;volatile
  1879                           
  1880                           ;LCD.c: 58: dato = (dato << 4);
  1881  000840  381D               	swapf	LCD_write@dato^0,w,c
  1882  000842  0BF0               	andlw	240
  1883  000844  6E1D               	movwf	LCD_write@dato^0,c
  1884                           
  1885                           ;LCD.c: 59: if (dato & (1<<4)) LATCbits.LATC0 = 1; else LATCbits.LATC0 = 0;
  1886  000846  A81D               	btfss	LCD_write@dato^0,4,c
  1887  000848  D002               	goto	l165
  1888  00084A  808B               	bsf	139,0,c	;volatile
  1889  00084C  D001               	goto	l166
  1890  00084E                     l165:
  1891  00084E  908B               	bcf	139,0,c	;volatile
  1892  000850                     l166:
  1893                           
  1894                           ;LCD.c: 60: if (dato & (1<<5)) LATCbits.LATC1 = 1; else LATCbits.LATC1 = 0;
  1895  000850  AA1D               	btfss	LCD_write@dato^0,5,c
  1896  000852  D002               	goto	l167
  1897  000854  828B               	bsf	139,1,c	;volatile
  1898  000856  D001               	goto	l168
  1899  000858                     l167:
  1900  000858  928B               	bcf	139,1,c	;volatile
  1901  00085A                     l168:
  1902                           
  1903                           ;LCD.c: 61: if (dato & (1<<6)) LATCbits.LATC2 = 1; else LATCbits.LATC2 = 0;
  1904  00085A  AC1D               	btfss	LCD_write@dato^0,6,c
  1905  00085C  D002               	goto	l169
  1906  00085E  848B               	bsf	139,2,c	;volatile
  1907  000860  D001               	goto	l170
  1908  000862                     l169:
  1909  000862  948B               	bcf	139,2,c	;volatile
  1910  000864                     l170:
  1911                           
  1912                           ;LCD.c: 62: if (dato & (1<<7)) LATBbits.LATB3 = 1; else LATBbits.LATB3 = 0;
  1913  000864  AE1D               	btfss	LCD_write@dato^0,7,c
  1914  000866  D002               	goto	l171
  1915  000868  868A               	bsf	138,3,c	;volatile
  1916  00086A  D001               	goto	l172
  1917  00086C                     l171:
  1918  00086C  968A               	bcf	138,3,c	;volatile
  1919  00086E                     l172:
  1920                           
  1921                           ;LCD.c: 63: LATAbits.LATA3 = 1;
  1922  00086E  8689               	bsf	137,3,c	;volatile
  1923                           
  1924                           ;LCD.c: 64: __nop();
  1925  000870  F000               	nop	
  1926                           
  1927                           ;LCD.c: 65: LATAbits.LATA3 = 0;
  1928  000872  9689               	bcf	137,3,c	;volatile
  1929                           
  1930                           ;LCD.c: 66: _delay((unsigned long)((50)*(4000000/4000000.0)));
  1931  000874  0E10               	movlw	16
  1932  000876                     u347:
  1933  000876  2EE8               	decfsz	wreg,f,c
  1934  000878  D7FE               	bra	u347
  1935  00087A  D000               	nop2	
  1936  00087C  0012               	return		;funcret
  1937  00087E                     __end_of_LCD_write:
  1938                           	callstack 0
  1939                           
  1940 ;; *************** function _I2C_init *****************
  1941 ;; Defined at:
  1942 ;;		line 7 in file "I2C.h"
  1943 ;; Parameters:    Size  Location     Type
  1944 ;;		None
  1945 ;; Auto vars:     Size  Location     Type
  1946 ;;		None
  1947 ;; Return value:  Size  Location     Type
  1948 ;;                  1    wreg      void 
  1949 ;; Registers used:
  1950 ;;		wreg, status,2
  1951 ;; Tracked objects:
  1952 ;;		On entry : 0/0
  1953 ;;		On exit  : 0/0
  1954 ;;		Unchanged: 0/0
  1955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1956 ;;      Params:         0       0       0       0       0       0       0       0       0
  1957 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1958 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1959 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1960 ;;Total ram usage:        0 bytes
  1961 ;; Hardware stack levels used: 1
  1962 ;; This function calls:
  1963 ;;		Nothing
  1964 ;; This function is called by:
  1965 ;;		_main
  1966 ;; This function uses a non-reentrant model
  1967 ;;
  1968                           
  1969                           	psect	text22
  1970  000BE8                     __ptext22:
  1971                           	callstack 0
  1972  000BE8                     _I2C_init:
  1973                           	callstack 30
  1974                           
  1975                           ;I2C.h: 9: TRISBbits.TRISB0 = 1;
  1976                           
  1977                           ;incstack = 0
  1978  000BE8  8093               	bsf	147,0,c	;volatile
  1979                           
  1980                           ;I2C.h: 10: TRISBbits.TRISB1 = 1;
  1981  000BEA  8293               	bsf	147,1,c	;volatile
  1982                           
  1983                           ;I2C.h: 12: SSPSTAT = 0b10000000;
  1984  000BEC  0E80               	movlw	128
  1985  000BEE  6EC7               	movwf	199,c	;volatile
  1986                           
  1987                           ;I2C.h: 13: SSPCON1 = 0b00101000;
  1988  000BF0  0E28               	movlw	40
  1989  000BF2  6EC6               	movwf	198,c	;volatile
  1990                           
  1991                           ;I2C.h: 14: SSPCON2 = 0x00;
  1992  000BF4  0E00               	movlw	0
  1993  000BF6  6EC5               	movwf	197,c	;volatile
  1994                           
  1995                           ;I2C.h: 15: SSPADD = ((4000000/(4UL*100000UL))-1);
  1996  000BF8  0E09               	movlw	9
  1997  000BFA  6EC8               	movwf	200,c	;volatile
  1998  000BFC  0012               	return		;funcret
  1999  000BFE                     __end_of_I2C_init:
  2000                           	callstack 0
  2001                           
  2002                           	psect	rparam
  2003  0000                     
  2004                           	psect	idloc
  2005                           
  2006                           ;Config register IDLOC0 @ 0x200000
  2007                           ;	unspecified, using default values
  2008  200000                     	org	2097152
  2009  200000  FF                 	db	255
  2010                           
  2011                           ;Config register IDLOC1 @ 0x200001
  2012                           ;	unspecified, using default values
  2013  200001                     	org	2097153
  2014  200001  FF                 	db	255
  2015                           
  2016                           ;Config register IDLOC2 @ 0x200002
  2017                           ;	unspecified, using default values
  2018  200002                     	org	2097154
  2019  200002  FF                 	db	255
  2020                           
  2021                           ;Config register IDLOC3 @ 0x200003
  2022                           ;	unspecified, using default values
  2023  200003                     	org	2097155
  2024  200003  FF                 	db	255
  2025                           
  2026                           ;Config register IDLOC4 @ 0x200004
  2027                           ;	unspecified, using default values
  2028  200004                     	org	2097156
  2029  200004  FF                 	db	255
  2030                           
  2031                           ;Config register IDLOC5 @ 0x200005
  2032                           ;	unspecified, using default values
  2033  200005                     	org	2097157
  2034  200005  FF                 	db	255
  2035                           
  2036                           ;Config register IDLOC6 @ 0x200006
  2037                           ;	unspecified, using default values
  2038  200006                     	org	2097158
  2039  200006  FF                 	db	255
  2040                           
  2041                           ;Config register IDLOC7 @ 0x200007
  2042                           ;	unspecified, using default values
  2043  200007                     	org	2097159
  2044  200007  FF                 	db	255
  2045                           
  2046                           	psect	config
  2047                           
  2048                           ;Config register CONFIG1L @ 0x300000
  2049                           ;	PLL Prescaler Selection bits
  2050                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  2051                           ;	System Clock Postscaler Selection bits
  2052                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  2053                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  2054                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  2055  300000                     	org	3145728
  2056  300000  00                 	db	0
  2057                           
  2058                           ;Config register CONFIG1H @ 0x300001
  2059                           ;	Oscillator Selection bits
  2060                           ;	FOSC = XT_XT, XT oscillator (XT)
  2061                           ;	Fail-Safe Clock Monitor Enable bit
  2062                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2063                           ;	Internal/External Oscillator Switchover bit
  2064                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2065  300001                     	org	3145729
  2066  300001  00                 	db	0
  2067                           
  2068                           ;Config register CONFIG2L @ 0x300002
  2069                           ;	Power-up Timer Enable bit
  2070                           ;	PWRT = OFF, PWRT disabled
  2071                           ;	Brown-out Reset Enable bits
  2072                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  2073                           ;	Brown-out Reset Voltage bits
  2074                           ;	BORV = 3, Minimum setting 2.05V
  2075                           ;	USB Voltage Regulator Enable bit
  2076                           ;	VREGEN = OFF, USB voltage regulator disabled
  2077  300002                     	org	3145730
  2078  300002  19                 	db	25
  2079                           
  2080                           ;Config register CONFIG2H @ 0x300003
  2081                           ;	Watchdog Timer Enable bit
  2082                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2083                           ;	Watchdog Timer Postscale Select bits
  2084                           ;	WDTPS = 32768, 1:32768
  2085  300003                     	org	3145731
  2086  300003  1E                 	db	30
  2087                           
  2088                           ; Padding undefined space
  2089  300004                     	org	3145732
  2090  300004  FF                 	db	255
  2091                           
  2092                           ;Config register CONFIG3H @ 0x300005
  2093                           ;	CCP2 MUX bit
  2094                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  2095                           ;	PORTB A/D Enable bit
  2096                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  2097                           ;	Low-Power Timer 1 Oscillator Enable bit
  2098                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  2099                           ;	MCLR Pin Enable bit
  2100                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  2101  300005                     	org	3145733
  2102  300005  83                 	db	131
  2103                           
  2104                           ;Config register CONFIG4L @ 0x300006
  2105                           ;	Stack Full/Underflow Reset Enable bit
  2106                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2107                           ;	Single-Supply ICSP Enable bit
  2108                           ;	LVP = OFF, Single-Supply ICSP disabled
  2109                           ;	Extended Instruction Set Enable bit
  2110                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2111                           ;	Background Debugger Enable bit
  2112                           ;	DEBUG = 0x1, unprogrammed default
  2113  300006                     	org	3145734
  2114  300006  81                 	db	129
  2115                           
  2116                           ; Padding undefined space
  2117  300007                     	org	3145735
  2118  300007  FF                 	db	255
  2119                           
  2120                           ;Config register CONFIG5L @ 0x300008
  2121                           ;	Code Protection bit
  2122                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  2123                           ;	Code Protection bit
  2124                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  2125                           ;	Code Protection bit
  2126                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  2127                           ;	Code Protection bit
  2128                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  2129  300008                     	org	3145736
  2130  300008  0F                 	db	15
  2131                           
  2132                           ;Config register CONFIG5H @ 0x300009
  2133                           ;	Boot Block Code Protection bit
  2134                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  2135                           ;	Data EEPROM Code Protection bit
  2136                           ;	CPD = OFF, Data EEPROM is not code-protected
  2137  300009                     	org	3145737
  2138  300009  C0                 	db	192
  2139                           
  2140                           ;Config register CONFIG6L @ 0x30000A
  2141                           ;	Write Protection bit
  2142                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  2143                           ;	Write Protection bit
  2144                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  2145                           ;	Write Protection bit
  2146                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  2147                           ;	Write Protection bit
  2148                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  2149  30000A                     	org	3145738
  2150  30000A  0F                 	db	15
  2151                           
  2152                           ;Config register CONFIG6H @ 0x30000B
  2153                           ;	Configuration Register Write Protection bit
  2154                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  2155                           ;	Boot Block Write Protection bit
  2156                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  2157                           ;	Data EEPROM Write Protection bit
  2158                           ;	WRTD = OFF, Data EEPROM is not write-protected
  2159  30000B                     	org	3145739
  2160  30000B  E0                 	db	224
  2161                           
  2162                           ;Config register CONFIG7L @ 0x30000C
  2163                           ;	Table Read Protection bit
  2164                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2165                           ;	Table Read Protection bit
  2166                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2167                           ;	Table Read Protection bit
  2168                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2169                           ;	Table Read Protection bit
  2170                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2171  30000C                     	org	3145740
  2172  30000C  0F                 	db	15
  2173                           
  2174                           ;Config register CONFIG7H @ 0x30000D
  2175                           ;	Boot Block Table Read Protection bit
  2176                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  2177  30000D                     	org	3145741
  2178  30000D  40                 	db	64
  2179                           tosu	equ	0xFFF
  2180                           tosh	equ	0xFFE
  2181                           tosl	equ	0xFFD
  2182                           stkptr	equ	0xFFC
  2183                           pclatu	equ	0xFFB
  2184                           pclath	equ	0xFFA
  2185                           pcl	equ	0xFF9
  2186                           tblptru	equ	0xFF8
  2187                           tblptrh	equ	0xFF7
  2188                           tblptrl	equ	0xFF6
  2189                           tablat	equ	0xFF5
  2190                           prodh	equ	0xFF4
  2191                           prodl	equ	0xFF3
  2192                           indf0	equ	0xFEF
  2193                           postinc0	equ	0xFEE
  2194                           postdec0	equ	0xFED
  2195                           preinc0	equ	0xFEC
  2196                           plusw0	equ	0xFEB
  2197                           fsr0h	equ	0xFEA
  2198                           fsr0l	equ	0xFE9
  2199                           wreg	equ	0xFE8
  2200                           indf1	equ	0xFE7
  2201                           postinc1	equ	0xFE6
  2202                           postdec1	equ	0xFE5
  2203                           preinc1	equ	0xFE4
  2204                           plusw1	equ	0xFE3
  2205                           fsr1h	equ	0xFE2
  2206                           fsr1l	equ	0xFE1
  2207                           bsr	equ	0xFE0
  2208                           indf2	equ	0xFDF
  2209                           postinc2	equ	0xFDE
  2210                           postdec2	equ	0xFDD
  2211                           preinc2	equ	0xFDC
  2212                           plusw2	equ	0xFDB
  2213                           fsr2h	equ	0xFDA
  2214                           fsr2l	equ	0xFD9
  2215                           status	equ	0xFD8

Data Sizes:
    Strings     14
    Constant    0
    Data        14
    BSS         14
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      6      34
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    sp__utoa	PTR unsigned char  size(2) Largest target is 8
		 -> LCD_integer@st(COMRAM[8]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 8
		 -> LCD_integer@st(COMRAM[8]), 

    LCD_printf@dato	PTR unsigned char  size(2) Largest target is 8
		 -> LCD_integer@st(COMRAM[8]), STR_2(CODE[7]), STR_1(CODE[7]), 


Critical Paths under _main in COMRAM

    _main->_LCD_goto
    _mostrar_hora->_LCD_dato
    _mostrar_fecha->_LCD_dato
    _leer_hora->_I2C_write
    _leer_fecha->_I2C_write
    _enviar_hora->_I2C_write
    _enviar_fecha->_I2C_write
    _LCD_printf->_LCD_dato
    _LCD_dato->_LCD_write
    _LCD_init->_LCD_cmd
    _LCD_goto->_LCD_cmd
    _LCD_cmd->_LCD_write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    1530
                                              5 COMRAM     1     1      0
                           _I2C_init
                           _LCD_goto
                           _LCD_init
                         _LCD_printf
                     _convertirFecha
                      _convertirHora
                       _enviar_fecha
                        _enviar_hora
                         _leer_fecha
                          _leer_hora
                      _mostrar_fecha
                       _mostrar_hora
 ---------------------------------------------------------------------------------
 (1) _mostrar_hora                                         0     0      0     150
                           _LCD_dato
 ---------------------------------------------------------------------------------
 (1) _mostrar_fecha                                        0     0      0     150
                           _LCD_dato
 ---------------------------------------------------------------------------------
 (1) _leer_hora                                            0     0      0      15
                            _I2C_ack
                           _I2C_nack
                           _I2C_read
                        _I2C_restart
                          _I2C_start
                           _I2C_stop
                          _I2C_write
 ---------------------------------------------------------------------------------
 (1) _leer_fecha                                           0     0      0      15
                            _I2C_ack
                           _I2C_nack
                           _I2C_read
                        _I2C_restart
                          _I2C_start
                           _I2C_stop
                          _I2C_write
 ---------------------------------------------------------------------------------
 (2) _I2C_restart                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_read                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_nack                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_ack                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _enviar_hora                                          0     0      0      15
                          _I2C_start
                           _I2C_stop
                          _I2C_write
 ---------------------------------------------------------------------------------
 (1) _enviar_fecha                                         0     0      0      15
                          _I2C_start
                           _I2C_stop
                          _I2C_write
 ---------------------------------------------------------------------------------
 (2) _I2C_write                                            1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _convertirHora                                        1     1      0      68
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _convertirFecha                                       1     1      0      68
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _LCD_printf                                           2     0      2     423
                                              2 COMRAM     2     0      2
                           _LCD_dato
 ---------------------------------------------------------------------------------
 (2) _LCD_dato                                             1     1      0     150
                                              1 COMRAM     1     1      0
                          _LCD_write
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             2     2      0     150
                                              2 COMRAM     2     2      0
                            _LCD_cmd
 ---------------------------------------------------------------------------------
 (1) _LCD_goto                                             3     2      1     461
                                              2 COMRAM     3     2      1
                            _LCD_cmd
 ---------------------------------------------------------------------------------
 (2) _LCD_cmd                                              1     1      0     150
                                              1 COMRAM     1     1      0
                          _LCD_write
 ---------------------------------------------------------------------------------
 (3) _LCD_write                                            1     1      0     135
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_init
   _LCD_goto
     _LCD_cmd
       _LCD_write
   _LCD_init
     _LCD_cmd
   _LCD_printf
     _LCD_dato
       _LCD_write
   _convertirFecha
   _convertirHora
   _enviar_fecha
     _I2C_start
     _I2C_stop
     _I2C_write
   _enviar_hora
     _I2C_start
     _I2C_stop
     _I2C_write
   _leer_fecha
     _I2C_ack
     _I2C_nack
     _I2C_read
     _I2C_restart
     _I2C_start
     _I2C_stop
     _I2C_write
   _leer_hora
     _I2C_ack
     _I2C_nack
     _I2C_read
     _I2C_restart
     _I2C_start
     _I2C_stop
     _I2C_write
   _mostrar_fecha
     _LCD_dato
   _mostrar_hora
     _LCD_dato

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      27        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       5        0.0%
BANK0               A0      0       0       6        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      6      22       1       35.8%
BITBIGSFRhh         36      0       0      21        0.0%
BITBIGSFRll         29      0       0      26        0.0%
BITBIGSFRhlhl       22      0       0      23        0.0%
BITBIGSFRhll         9      0       0      24        0.0%
BITBIGSFRlhh         6      0       0      25        0.0%
BITBIGSFRhlhh        3      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      22       3        0.0%
DATA                 0      0      22       4        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Sat Mar 19 19:50:34 2022

                     l42 0C58                       l36 0C68                       l60 0C38  
                     l54 0C1E                       l48 0C60                       l72 0C14  
                     l66 0C2C                      l161 082E                      l170 0864  
                    l171 086C                      l163 0838                      l172 086E  
                    l164 083A                      l165 084E                      l157 081A  
                    l166 0850                      l167 0858                      l159 0824  
                    l168 085A                      l169 0862                      l993 0826  
                    l997 0830                      l989 081C                      u317 08DC  
                    u270 0968                      u327 0904                      u280 0990  
                    u337 0936                      u347 0876                      u277 095E  
                    u287 0986                      _dia 000B                      _mes 000A  
                    _min 000D                      _sec 000E          __end_of_I2C_ack 0C3E  
            ?_LCD_printf 001F                      wreg 000FE8          ??_mostrar_fecha 001F  
        __end_of_LCD_cmd 0C56                     l1301 0A34                     l1303 0A3A  
                   l1311 0A48                     l1305 0A40                     l1313 0A64  
                   l1321 0970                     l1317 0948                     l1337 089A  
                   l1275 0AEE                     l1289 0B2A                     l1299 0A30  
                   STR_1 0801                     STR_2 0808                     _Hora 0016  
                   _anio 0009                     _main 087E                     _hora 000C  
                   fsr0h 000FEA                     indf0 000FEF                     fsr0l 000FE9  
                   indf2 000FDF                     fsr1l 000FE1                     fsr2l 000FD9  
       __end_of_I2C_nack 0C32         __end_of_I2C_init 0BFE         __end_of_I2C_read 0C26  
                   prodl 000FF3                     start 0000         __end_of_I2C_stop 0C66  
           ?_enviar_hora 001D             ___param_bank 000000         __end_of_LCD_dato 0C4A  
       __end_of_LCD_init 0946         __end_of_LCD_goto 0A6E                    ?_main 001D  
          _convertirHora 0AEA                    _Fecha 000F              LCD_cmd@dato 001E  
                  tablat 000FF5            ?_enviar_fecha 001D                    status 000FD8  
      __end_of_I2C_start 0C6E        __end_of_I2C_write 0C1A          __initialization 0B62  
      I2C_write@I2C_data 001D             __end_of_main 08E6                ??_I2C_ack 001D  
         ?_convertirHora 001D                   ??_main 0022            __activetblptr 000002  
              ??_LCD_cmd 001E        __end_of_LCD_write 087E                   _ADCON1 000FC1  
         _convertirFecha 0B26           ??_enviar_fecha 001E                   _SSPADD 000FC8  
                 _SSPBUF 000FC9                   clear_0 0B88                   isa$std 000001  
           LCD_dato@dato 001E             __pdataCOMRAM 000F                ?_I2C_nack 001D  
           __mediumconst 0000                ?_I2C_init 001D                ?_I2C_read 001D  
 __end_of_convertirFecha 0B62                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8                ?_I2C_stop 001D           LCD_printf@dato 001F  
             __accesstop 0060  __end_of__initialization 0B8E                ?_LCD_dato 001D  
              ?_LCD_init 001D                ?_LCD_goto 001F            ___rparam_used 000001  
         __pcstackCOMRAM 001D          ??_convertirHora 001D                LCD_goto@x 0021  
              LCD_goto@y 001F         LCD_goto@posicion 0020             ??_LCD_printf 0021  
             ??_I2C_nack 001D               ??_I2C_init 001D               ??_I2C_read 001D  
        ?_convertirFecha 001D               ??_I2C_stop 001D               ??_LCD_dato 001E  
             ??_LCD_init 001F               ??_LCD_goto 0020       __end_of_LCD_printf 0998  
                _ACKSTAT 007E2E                  _I2C_ack 0C32     __end_of_enviar_fecha 0BE8  
                _LCD_cmd 0C4A                  _SSPCON1 000FC6                  _SSPCON2 000FC5  
  __end_of_mostrar_fecha 0A2C                  _SSPSTAT 000FC7               _leer_fecha 0AAC  
          ??_I2C_restart 001D                  __Hparam 0000                  __Lparam 0000  
              _I2C_start 0C66         LCD_integer@F2837 0001                _I2C_write 0C0C  
           __psmallconst 0800                  __pcinit 0B62        __end_of_leer_hora 0AAC  
                __ramtop 0800                  __ptext0 087E                  __ptext1 0998  
                __ptext2 09E2                  __ptext3 0A6E                  __ptext4 0AAC  
                __ptext5 0C56                  __ptext6 0C1A                  __ptext7 0C26  
                __ptext8 0C32                  __ptext9 0B98     end_of_initialization 0B8E  
              _LCD_write 0810            __Lmediumconst 0000            ?_mostrar_hora 001D  
             ?_I2C_start 001D               ?_I2C_write 001D                  postdec1 000FE5  
                postinc0 000FEE      __end_of_I2C_restart 0C5E                _TRISAbits 000F92  
              _TRISBbits 000F93                _TRISCbits 000F94               ?_LCD_write 001D  
         ??_mostrar_hora 001F              ?_leer_fecha 001D            __pidataCOMRAM 0BFE  
       ??_convertirFecha 001D      start_initialization 0B62             _enviar_fecha 0BC0  
          ??_enviar_hora 001E              _I2C_restart 0C56              ??_I2C_start 001D  
            ??_I2C_write 001D                 ?_I2C_ack 001D    __end_of_convertirHora 0B26  
               ?_LCD_cmd 001D              __pbssCOMRAM 0001              ??_LCD_write 001D  
          LCD_write@dato 001D      __end_of_enviar_hora 0BC0     __end_of_mostrar_hora 09E2  
            __smallconst 0800                _leer_hora 0A6E                 _I2C_nack 0C26  
               _I2C_init 0BE8                 _I2C_read 0C1A                 _I2C_stop 0C5E  
               _LATAbits 000F89                 _LATBbits 000F8A                 _LATCbits 000F8B  
               _LCD_dato 0C3E                 _LCD_init 08E6                 _LCD_goto 0A2C  
               _PIR1bits 000F9E               ?_leer_hora 001D          convertirFecha@i 001D  
              copy_data0 0B76             ??_leer_fecha 001E              _enviar_hora 0B98  
               __Hrparam 0000                 __Lrparam 0000       __end_of_leer_fecha 0AEA  
               __ptext10 0BC0                 __ptext11 0C0C                 __ptext20 0C4A  
               __ptext12 0C5E                 __ptext21 0810                 __ptext13 0C66  
               __ptext22 0BE8                 __ptext14 0AEA                 __ptext15 0B26  
               __ptext16 0946                 __ptext17 0C3E                 __ptext18 08E6  
               __ptext19 0A2C            _mostrar_fecha 09E2             ?_I2C_restart 001D  
               isa$xinst 000000           convertirHora@i 001D              ??_leer_hora 001E  
             _LCD_printf 0946           ?_mostrar_fecha 001D             _mostrar_hora 0998  
            _SSPCON2bits 000FC5  
