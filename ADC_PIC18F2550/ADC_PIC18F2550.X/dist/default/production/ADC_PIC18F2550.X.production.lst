

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Sat Mar 19 18:50:49 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F2550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1
    50                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    51                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    52                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    53                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    54  0000                     
    55                           ; Version 2.40
    56                           ; Generated 17/11/2021 GMT
    57                           ; 
    58                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    59                           ; All rights reserved.
    60                           ; 
    61                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    62                           ; 
    63                           ; Redistribution and use in source and binary forms, with or without modification, are
    64                           ; permitted provided that the following conditions are met:
    65                           ; 
    66                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    67                           ;        conditions and the following disclaimer.
    68                           ; 
    69                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    70                           ;        of conditions and the following disclaimer in the documentation and/or other
    71                           ;        materials provided with the distribution. Publication is not required when
    72                           ;        this file is used in an embedded application.
    73                           ; 
    74                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    75                           ;        software without specific prior written permission.
    76                           ; 
    77                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    78                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    79                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    80                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    81                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    82                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    83                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    84                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    85                           ; 
    86                           ; 
    87                           ; Code-generator required, PIC18F2550 Definitions
    88                           ; 
    89                           ; SFR Addresses
    90  0000                     _ADRESL	set	4035
    91  0000                     _ADRESH	set	4036
    92  0000                     _ADCON0bits	set	4034
    93  0000                     _TRISBbits	set	3987
    94  0000                     _TRISCbits	set	3988
    95  0000                     _LATBbits	set	3978
    96  0000                     _LATCbits	set	3979
    97  0000                     _LATAbits	set	3977
    98  0000                     _TRISAbits	set	3986
    99  0000                     _ADCON2bits	set	4032
   100  0000                     _ADCON1bits	set	4033
   101                           
   102                           	psect	smallconst
   103  000800                     __psmallconst:
   104                           	callstack 0
   105  000800  00                 	db	0
   106  000801                     STR_1:
   107  000801  56                 	db	86	;'V'
   108  000802  6F                 	db	111	;'o'
   109  000803  6C                 	db	108	;'l'
   110  000804  74                 	db	116	;'t'
   111  000805  61                 	db	97	;'a'
   112  000806  6A                 	db	106	;'j'
   113  000807  65                 	db	101	;'e'
   114  000808  20                 	db	32
   115  000809  25                 	db	37
   116  00080A  2E                 	db	46
   117  00080B  32                 	db	50	;'2'
   118  00080C  66                 	db	102	;'f'
   119  00080D  00                 	db	0
   120  00080E                     STR_2:
   121  00080E  49                 	db	73	;'I'
   122  00080F  4E                 	db	78	;'N'
   123  000810  46                 	db	70	;'F'
   124  000811  00                 	db	0
   125  000812                     STR_6:
   126  000812  4E                 	db	78	;'N'
   127  000813  41                 	db	65	;'A'
   128  000814  4E                 	db	78	;'N'
   129  000815  00                 	db	0
   130  000816                     STR_3:
   131  000816  69                 	db	105	;'i'
   132  000817  6E                 	db	110	;'n'
   133  000818  66                 	db	102	;'f'
   134  000819  00                 	db	0
   135  00081A                     STR_7:
   136  00081A  6E                 	db	110	;'n'
   137  00081B  61                 	db	97	;'a'
   138  00081C  6E                 	db	110	;'n'
   139  00081D  00                 	db	0
   140  00081E                     STR_10:
   141  00081E  6C                 	db	108	;'l'
   142  00081F  66                 	db	102	;'f'
   143  000820  00                 	db	0
   144  000821  00                 	db	0	; dummy byte at the end
   145  0000                     
   146                           ; #config settings
   147                           
   148                           	psect	cinit
   149  0036D6                     __pcinit:
   150                           	callstack 0
   151  0036D6                     start_initialization:
   152                           	callstack 0
   153  0036D6                     __initialization:
   154                           	callstack 0
   155                           
   156                           ; Clear objects allocated to BANK1 (80 bytes)
   157  0036D6  EE01  F000         	lfsr	0,__pbssBANK1
   158  0036DA  0E50               	movlw	80
   159  0036DC                     clear_0:
   160  0036DC  6AEE               	clrf	postinc0,c
   161  0036DE  06E8               	decf	wreg,f,c
   162  0036E0  E1FD               	bnz	clear_0
   163                           
   164                           ; Clear objects allocated to BANK0 (10 bytes)
   165  0036E2  EE00  F0B7         	lfsr	0,__pbssBANK0
   166  0036E6  0E0A               	movlw	10
   167  0036E8                     clear_1:
   168  0036E8  6AEE               	clrf	postinc0,c
   169  0036EA  06E8               	decf	wreg,f,c
   170  0036EC  E1FD               	bnz	clear_1
   171                           
   172                           ; Clear objects allocated to COMRAM (6 bytes)
   173  0036EE  6A5F               	clrf	(__pbssCOMRAM+5)& (0+255),c
   174  0036F0  6A5E               	clrf	(__pbssCOMRAM+4)& (0+255),c
   175  0036F2  6A5D               	clrf	(__pbssCOMRAM+3)& (0+255),c
   176  0036F4  6A5C               	clrf	(__pbssCOMRAM+2)& (0+255),c
   177  0036F6  6A5B               	clrf	(__pbssCOMRAM+1)& (0+255),c
   178  0036F8  6A5A               	clrf	__pbssCOMRAM& (0+255),c
   179  0036FA                     end_of_initialization:
   180                           	callstack 0
   181  0036FA                     __end_of__initialization:
   182                           	callstack 0
   183  0036FA  0E00               	movlw	low (__Lmediumconst shr (0+16))
   184  0036FC  6EF8               	movwf	tblptru,c
   185  0036FE  0100               	movlb	0
   186  003700  EFC2  F018         	goto	_main	;jump to C main() function
   187                           
   188                           	psect	bssCOMRAM
   189  00005A                     __pbssCOMRAM:
   190                           	callstack 0
   191  00005A                     _width:
   192                           	callstack 0
   193  00005A                     	ds	2
   194  00005C                     _prec:
   195                           	callstack 0
   196  00005C                     	ds	2
   197  00005E                     _flags:
   198                           	callstack 0
   199  00005E                     	ds	2
   200                           
   201                           	psect	bssBANK0
   202  0000B7                     __pbssBANK0:
   203                           	callstack 0
   204  0000B7                     floorf@F526:
   205                           	callstack 0
   206  0000B7                     	ds	4
   207  0000BB                     ___fpclassifyf@F465:
   208                           	callstack 0
   209  0000BB                     	ds	4
   210  0000BF                     _nout:
   211                           	callstack 0
   212  0000BF                     	ds	2
   213                           
   214                           	psect	bssBANK1
   215  000100                     __pbssBANK1:
   216                           	callstack 0
   217  000100                     _dbuf:
   218                           	callstack 0
   219  000100                     	ds	80
   220                           
   221                           	psect	cstackBANK0
   222  000060                     __pcstackBANK0:
   223                           	callstack 0
   224  000060                     _efgtoa$1063:
   225                           	callstack 0
   226                           
   227                           ; 2 bytes @ 0x0
   228  000060                     	ds	2
   229  000062                     _efgtoa$1071:
   230                           	callstack 0
   231                           
   232                           ; 2 bytes @ 0x2
   233  000062                     	ds	2
   234  000064                     _efgtoa$1072:
   235                           	callstack 0
   236                           
   237                           ; 2 bytes @ 0x4
   238  000064                     	ds	2
   239  000066                     efgtoa@t:
   240                           	callstack 0
   241                           
   242                           ; 2 bytes @ 0x6
   243  000066                     	ds	2
   244  000068                     efgtoa@pp:
   245                           	callstack 0
   246                           
   247                           ; 2 bytes @ 0x8
   248  000068                     	ds	2
   249  00006A                     efgtoa@ne:
   250                           	callstack 0
   251                           
   252                           ; 2 bytes @ 0xA
   253  00006A                     	ds	2
   254  00006C                     efgtoa@m:
   255                           	callstack 0
   256                           
   257                           ; 2 bytes @ 0xC
   258  00006C                     	ds	2
   259  00006E                     efgtoa@ou:
   260                           	callstack 0
   261                           
   262                           ; 4 bytes @ 0xE
   263  00006E                     	ds	4
   264  000072                     efgtoa@d:
   265                           	callstack 0
   266                           
   267                           ; 2 bytes @ 0x12
   268  000072                     	ds	2
   269  000074                     efgtoa@sign:
   270                           	callstack 0
   271                           
   272                           ; 2 bytes @ 0x14
   273  000074                     	ds	2
   274  000076                     efgtoa@p:
   275                           	callstack 0
   276                           
   277                           ; 2 bytes @ 0x16
   278  000076                     	ds	2
   279  000078                     efgtoa@w:
   280                           	callstack 0
   281                           
   282                           ; 2 bytes @ 0x18
   283  000078                     	ds	2
   284  00007A                     efgtoa@nmode:
   285                           	callstack 0
   286                           
   287                           ; 1 bytes @ 0x1A
   288  00007A                     	ds	1
   289  00007B                     efgtoa@mode:
   290                           	callstack 0
   291                           
   292                           ; 1 bytes @ 0x1B
   293  00007B                     	ds	1
   294  00007C                     efgtoa@h:
   295                           	callstack 0
   296                           
   297                           ; 4 bytes @ 0x1C
   298  00007C                     	ds	4
   299  000080                     efgtoa@l:
   300                           	callstack 0
   301                           
   302                           ; 4 bytes @ 0x20
   303  000080                     	ds	4
   304  000084                     efgtoa@i:
   305                           	callstack 0
   306                           
   307                           ; 2 bytes @ 0x24
   308  000084                     	ds	2
   309  000086                     efgtoa@g:
   310                           	callstack 0
   311                           
   312                           ; 4 bytes @ 0x26
   313  000086                     	ds	4
   314  00008A                     efgtoa@e:
   315                           	callstack 0
   316                           
   317                           ; 2 bytes @ 0x2A
   318  00008A                     	ds	2
   319  00008C                     efgtoa@n:
   320                           	callstack 0
   321                           
   322                           ; 2 bytes @ 0x2C
   323  00008C                     	ds	2
   324  00008E                     efgtoa@u:
   325                           	callstack 0
   326                           
   327                           ; 4 bytes @ 0x2E
   328  00008E                     	ds	4
   329  000092                     ?_sprintf:
   330                           	callstack 0
   331  000092                     sprintf@s:
   332                           	callstack 0
   333                           
   334                           ; 2 bytes @ 0x32
   335  000092                     	ds	2
   336  000094                     sprintf@fmt:
   337                           	callstack 0
   338                           
   339                           ; 2 bytes @ 0x34
   340  000094                     	ds	6
   341  00009A                     sprintf@ap:
   342                           	callstack 0
   343                           
   344                           ; 2 bytes @ 0x3A
   345  00009A                     	ds	2
   346  00009C                     sprintf@f:
   347                           	callstack 0
   348                           
   349                           ; 11 bytes @ 0x3C
   350  00009C                     	ds	11
   351  0000A7                     main@buffer:
   352                           	callstack 0
   353                           
   354                           ; 10 bytes @ 0x47
   355  0000A7                     	ds	10
   356  0000B1                     main@volt:
   357                           	callstack 0
   358                           
   359                           ; 4 bytes @ 0x51
   360  0000B1                     	ds	4
   361  0000B5                     main@dato:
   362                           	callstack 0
   363                           
   364                           ; 2 bytes @ 0x55
   365  0000B5                     	ds	2
   366                           
   367                           	psect	cstackCOMRAM
   368  000001                     __pcstackCOMRAM:
   369                           	callstack 0
   370  000001                     ?_strlen:
   371                           	callstack 0
   372  000001                     ?___fpclassifyf:
   373                           	callstack 0
   374  000001                     ?_isupper:
   375                           	callstack 0
   376  000001                     ?_isdigit:
   377                           	callstack 0
   378  000001                     ?_strncmp:
   379                           	callstack 0
   380  000001                     ?_isspace:
   381                           	callstack 0
   382  000001                     ?_ADC_read:
   383                           	callstack 0
   384  000001                     ?___wmul:
   385                           	callstack 0
   386  000001                     ?___awdiv:
   387                           	callstack 0
   388  000001                     ?___awmod:
   389                           	callstack 0
   390  000001                     ?___fladd:
   391                           	callstack 0
   392  000001                     ?___fldiv:
   393                           	callstack 0
   394  000001                     ?___flneg:
   395                           	callstack 0
   396  000001                     ?___fltol:
   397                           	callstack 0
   398  000001                     ?___xxtofl:
   399                           	callstack 0
   400  000001                     LCD_write_nible@nible:
   401                           	callstack 0
   402  000001                     ___wmul@multiplier:
   403                           	callstack 0
   404  000001                     ___awdiv@dividend:
   405                           	callstack 0
   406  000001                     ___awmod@dividend:
   407                           	callstack 0
   408  000001                     isdigit@c:
   409                           	callstack 0
   410  000001                     isspace@c:
   411                           	callstack 0
   412  000001                     isupper@c:
   413                           	callstack 0
   414  000001                     fputc@c:
   415                           	callstack 0
   416  000001                     strcpy@dest:
   417                           	callstack 0
   418  000001                     strlen@s:
   419                           	callstack 0
   420  000001                     strncmp@_l:
   421                           	callstack 0
   422  000001                     ___fleq@ff1:
   423                           	callstack 0
   424  000001                     ___flneg@f1:
   425                           	callstack 0
   426  000001                     ___fltol@f1:
   427                           	callstack 0
   428  000001                     ___fladd@b:
   429                           	callstack 0
   430  000001                     ___fldiv@b:
   431                           	callstack 0
   432  000001                     ___xxtofl@val:
   433                           	callstack 0
   434  000001                     ___fpclassifyf@x:
   435                           	callstack 0
   436                           
   437                           ; 4 bytes @ 0x0
   438  000001                     	ds	1
   439  000002                     ??_LCD_cmd:
   440  000002                     LCD_char@caracter:
   441                           	callstack 0
   442                           
   443                           ; 1 bytes @ 0x1
   444  000002                     	ds	1
   445  000003                     ??_isupper:
   446  000003                     ??_isdigit:
   447  000003                     ??_isspace:
   448  000003                     ??_ADC_read:
   449  000003                     LCD_cmd@comando:
   450                           	callstack 0
   451  000003                     LCD_write_text@dato:
   452                           	callstack 0
   453  000003                     ___wmul@multiplicand:
   454                           	callstack 0
   455  000003                     ___awdiv@divisor:
   456                           	callstack 0
   457  000003                     ___awmod@divisor:
   458                           	callstack 0
   459  000003                     fputc@fp:
   460                           	callstack 0
   461  000003                     strcpy@src:
   462                           	callstack 0
   463  000003                     strlen@a:
   464                           	callstack 0
   465  000003                     strncmp@_r:
   466                           	callstack 0
   467                           
   468                           ; 2 bytes @ 0x2
   469  000003                     	ds	1
   470  000004                     ??_LCD_init:
   471                           
   472                           ; 1 bytes @ 0x3
   473  000004                     	ds	1
   474  000005                     ??_fputc:
   475  000005                     ??___fpclassifyf:
   476  000005                     ??_strcpy:
   477  000005                     ??___fltol:
   478  000005                     ??___xxtofl:
   479  000005                     ADC_read@channel:
   480                           	callstack 0
   481  000005                     ___awdiv@counter:
   482                           	callstack 0
   483  000005                     ___awmod@counter:
   484                           	callstack 0
   485  000005                     ___wmul@product:
   486                           	callstack 0
   487  000005                     strncmp@n:
   488                           	callstack 0
   489  000005                     ___fleq@ff2:
   490                           	callstack 0
   491  000005                     ___fladd@a:
   492                           	callstack 0
   493  000005                     ___fldiv@a:
   494                           	callstack 0
   495                           
   496                           ; 4 bytes @ 0x4
   497  000005                     	ds	1
   498  000006                     ___awdiv@sign:
   499                           	callstack 0
   500  000006                     ___awmod@sign:
   501                           	callstack 0
   502                           
   503                           ; 1 bytes @ 0x5
   504  000006                     	ds	1
   505  000007                     ??_strncmp:
   506  000007                     ?_tolower:
   507                           	callstack 0
   508  000007                     _isspace$1150:
   509                           	callstack 0
   510  000007                     ___awdiv@quotient:
   511                           	callstack 0
   512  000007                     strcpy@s:
   513                           	callstack 0
   514  000007                     tolower@c:
   515                           	callstack 0
   516                           
   517                           ; 2 bytes @ 0x6
   518  000007                     	ds	1
   519  000008                     ?_atoi:
   520                           	callstack 0
   521  000008                     atoi@s:
   522                           	callstack 0
   523  000008                     strncmp@l:
   524                           	callstack 0
   525                           
   526                           ; 2 bytes @ 0x7
   527  000008                     	ds	1
   528  000009                     ??___fladd:
   529  000009                     ??___fldiv:
   530  000009                     ??_tolower:
   531  000009                     ??___fleq:
   532  000009                     ___fltol@sign1:
   533                           	callstack 0
   534  000009                     ___xxtofl@sign:
   535                           	callstack 0
   536  000009                     ___fpclassifyf@e:
   537                           	callstack 0
   538  000009                     strcpy@d:
   539                           	callstack 0
   540                           
   541                           ; 2 bytes @ 0x8
   542  000009                     	ds	1
   543  00000A                     ??_atoi:
   544  00000A                     ___fltol@exp1:
   545                           	callstack 0
   546  00000A                     ___xxtofl@exp:
   547                           	callstack 0
   548  00000A                     fputs@s:
   549                           	callstack 0
   550  00000A                     strncmp@r:
   551                           	callstack 0
   552                           
   553                           ; 2 bytes @ 0x9
   554  00000A                     	ds	1
   555  00000B                     ___xxtofl@arg:
   556                           	callstack 0
   557  00000B                     ___fpclassifyf@u:
   558                           	callstack 0
   559                           
   560                           ; 4 bytes @ 0xA
   561  00000B                     	ds	1
   562  00000C                     fputs@fp:
   563                           	callstack 0
   564                           
   565                           ; 2 bytes @ 0xB
   566  00000C                     	ds	1
   567  00000D                     ___fladd@signs:
   568                           	callstack 0
   569  00000D                     ___fldiv@rem:
   570                           	callstack 0
   571                           
   572                           ; 4 bytes @ 0xC
   573  00000D                     	ds	1
   574  00000E                     ___fladd@aexp:
   575                           	callstack 0
   576  00000E                     fputs@c:
   577                           	callstack 0
   578  00000E                     atoi@neg:
   579                           	callstack 0
   580                           
   581                           ; 2 bytes @ 0xD
   582  00000E                     	ds	1
   583  00000F                     ?___flmul:
   584                           	callstack 0
   585  00000F                     ___fladd@bexp:
   586                           	callstack 0
   587  00000F                     fputs@i:
   588                           	callstack 0
   589  00000F                     ___flmul@b:
   590                           	callstack 0
   591                           
   592                           ; 4 bytes @ 0xE
   593  00000F                     	ds	1
   594  000010                     ___fladd@grs:
   595                           	callstack 0
   596  000010                     atoi@n:
   597                           	callstack 0
   598                           
   599                           ; 2 bytes @ 0xF
   600  000010                     	ds	1
   601  000011                     ?_pad:
   602                           	callstack 0
   603  000011                     ___fldiv@sign:
   604                           	callstack 0
   605  000011                     pad@fp:
   606                           	callstack 0
   607                           
   608                           ; 2 bytes @ 0x10
   609  000011                     	ds	1
   610  000012                     ___fldiv@new_exp:
   611                           	callstack 0
   612                           
   613                           ; 2 bytes @ 0x11
   614  000012                     	ds	1
   615  000013                     pad@buf:
   616                           	callstack 0
   617  000013                     ___flmul@a:
   618                           	callstack 0
   619                           
   620                           ; 4 bytes @ 0x12
   621  000013                     	ds	1
   622  000014                     ___fldiv@grs:
   623                           	callstack 0
   624                           
   625                           ; 4 bytes @ 0x13
   626  000014                     	ds	1
   627  000015                     pad@p:
   628                           	callstack 0
   629                           
   630                           ; 2 bytes @ 0x14
   631  000015                     	ds	2
   632  000017                     ??___flmul:
   633  000017                     ??_pad:
   634                           
   635                           ; 1 bytes @ 0x16
   636  000017                     	ds	1
   637  000018                     ___fldiv@bexp:
   638                           	callstack 0
   639  000018                     pad@i:
   640                           	callstack 0
   641                           
   642                           ; 2 bytes @ 0x17
   643  000018                     	ds	1
   644  000019                     ___fldiv@aexp:
   645                           	callstack 0
   646                           
   647                           ; 1 bytes @ 0x18
   648  000019                     	ds	1
   649  00001A                     ?_floorf:
   650                           	callstack 0
   651  00001A                     pad@w:
   652                           	callstack 0
   653  00001A                     floorf@x:
   654                           	callstack 0
   655                           
   656                           ; 4 bytes @ 0x19
   657  00001A                     	ds	1
   658  00001B                     ___flmul@sign:
   659                           	callstack 0
   660                           
   661                           ; 1 bytes @ 0x1A
   662  00001B                     	ds	1
   663  00001C                     ___flmul@grs:
   664                           	callstack 0
   665                           
   666                           ; 4 bytes @ 0x1B
   667  00001C                     	ds	2
   668  00001E                     ??_floorf:
   669                           
   670                           ; 1 bytes @ 0x1D
   671  00001E                     	ds	2
   672  000020                     ___flmul@aexp:
   673                           	callstack 0
   674                           
   675                           ; 1 bytes @ 0x1F
   676  000020                     	ds	1
   677  000021                     ___flmul@bexp:
   678                           	callstack 0
   679                           
   680                           ; 1 bytes @ 0x20
   681  000021                     	ds	1
   682  000022                     ___flmul@prod:
   683                           	callstack 0
   684                           
   685                           ; 4 bytes @ 0x21
   686  000022                     	ds	2
   687  000024                     floorf@m:
   688                           	callstack 0
   689                           
   690                           ; 4 bytes @ 0x23
   691  000024                     	ds	2
   692  000026                     ___flmul@temp:
   693                           	callstack 0
   694                           
   695                           ; 2 bytes @ 0x25
   696  000026                     	ds	2
   697  000028                     ?___flsub:
   698                           	callstack 0
   699  000028                     floorf@e:
   700                           	callstack 0
   701  000028                     ___flge@ff1:
   702                           	callstack 0
   703  000028                     ___flsub@b:
   704                           	callstack 0
   705                           
   706                           ; 4 bytes @ 0x27
   707  000028                     	ds	2
   708  00002A                     floorf@u:
   709                           	callstack 0
   710                           
   711                           ; 4 bytes @ 0x29
   712  00002A                     	ds	2
   713  00002C                     ___flge@ff2:
   714                           	callstack 0
   715  00002C                     ___flsub@a:
   716                           	callstack 0
   717                           
   718                           ; 4 bytes @ 0x2B
   719  00002C                     	ds	4
   720  000030                     ??___flge:
   721                           
   722                           ; 1 bytes @ 0x2F
   723  000030                     	ds	4
   724  000034                     ?_efgtoa:
   725                           	callstack 0
   726  000034                     efgtoa@fp:
   727                           	callstack 0
   728                           
   729                           ; 2 bytes @ 0x33
   730  000034                     	ds	2
   731  000036                     efgtoa@f:
   732                           	callstack 0
   733                           
   734                           ; 4 bytes @ 0x35
   735  000036                     	ds	4
   736  00003A                     efgtoa@c:
   737                           	callstack 0
   738                           
   739                           ; 1 bytes @ 0x39
   740  00003A                     	ds	1
   741  00003B                     ??_efgtoa:
   742                           
   743                           ; 1 bytes @ 0x3A
   744  00003B                     	ds	5
   745  000040                     ?_vfpfcnvrt:
   746                           	callstack 0
   747  000040                     vfpfcnvrt@fp:
   748                           	callstack 0
   749                           
   750                           ; 2 bytes @ 0x3F
   751  000040                     	ds	2
   752  000042                     vfpfcnvrt@fmt:
   753                           	callstack 0
   754                           
   755                           ; 2 bytes @ 0x41
   756  000042                     	ds	2
   757  000044                     vfpfcnvrt@ap:
   758                           	callstack 0
   759                           
   760                           ; 2 bytes @ 0x43
   761  000044                     	ds	2
   762  000046                     ??_vfpfcnvrt:
   763                           
   764                           ; 1 bytes @ 0x45
   765  000046                     	ds	4
   766  00004A                     vfpfcnvrt@f:
   767                           	callstack 0
   768                           
   769                           ; 4 bytes @ 0x49
   770  00004A                     	ds	4
   771  00004E                     vfpfcnvrt@ct:
   772                           	callstack 0
   773                           
   774                           ; 3 bytes @ 0x4D
   775  00004E                     	ds	3
   776  000051                     vfpfcnvrt@c:
   777                           	callstack 0
   778                           
   779                           ; 1 bytes @ 0x50
   780  000051                     	ds	1
   781  000052                     ?_vfprintf:
   782                           	callstack 0
   783  000052                     vfprintf@fp:
   784                           	callstack 0
   785                           
   786                           ; 2 bytes @ 0x51
   787  000052                     	ds	2
   788  000054                     vfprintf@fmt:
   789                           	callstack 0
   790                           
   791                           ; 2 bytes @ 0x53
   792  000054                     	ds	2
   793  000056                     vfprintf@ap:
   794                           	callstack 0
   795                           
   796                           ; 2 bytes @ 0x55
   797  000056                     	ds	2
   798  000058                     vfprintf@cfmt:
   799                           	callstack 0
   800                           
   801                           ; 2 bytes @ 0x57
   802  000058                     	ds	2
   803  00005A                     
   804                           ; 1 bytes @ 0x59
   805 ;;
   806 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   807 ;;
   808 ;; *************** function _main *****************
   809 ;; Defined at:
   810 ;;		line 76 in file "main.c"
   811 ;; Parameters:    Size  Location     Type
   812 ;;		None
   813 ;; Auto vars:     Size  Location     Type
   814 ;;  buffer         10   71[BANK0 ] unsigned char [10]
   815 ;;  volt            4   81[BANK0 ] float 
   816 ;;  dato            2   85[BANK0 ] unsigned short 
   817 ;; Return value:  Size  Location     Type
   818 ;;                  1    wreg      void 
   819 ;; Registers used:
   820 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   821 ;; Tracked objects:
   822 ;;		On entry : 0/0
   823 ;;		On exit  : 0/0
   824 ;;		Unchanged: 0/0
   825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   826 ;;      Params:         0       0       0       0       0       0       0       0       0
   827 ;;      Locals:         0      16       0       0       0       0       0       0       0
   828 ;;      Temps:          0       0       0       0       0       0       0       0       0
   829 ;;      Totals:         0      16       0       0       0       0       0       0       0
   830 ;;Total ram usage:       16 bytes
   831 ;; Hardware stack levels required when called: 8
   832 ;; This function calls:
   833 ;;		_ADC_init
   834 ;;		_ADC_read
   835 ;;		_LCD_cmd
   836 ;;		_LCD_init
   837 ;;		_LCD_write_text
   838 ;;		___flmul
   839 ;;		___xxtofl
   840 ;;		_sprintf
   841 ;; This function is called by:
   842 ;;		Startup code after reset
   843 ;; This function uses a non-reentrant model
   844 ;;
   845                           
   846                           	psect	text0
   847  003184                     __ptext0:
   848                           	callstack 0
   849  003184                     _main:
   850                           	callstack 23
   851  003184                     
   852                           ;main.c: 78:     uint16_t dato;;main.c: 79:     float volt;;main.c: 80:     char buffer[
      +                          10];;main.c: 81:     ADC_init();
   853  003184  EC95  F01B         	call	_ADC_init	;wreg free
   854  003188                     
   855                           ;main.c: 82:     LCD_init();
   856  003188  EC10  F019         	call	_LCD_init	;wreg free
   857  00318C                     l3944:
   858                           
   859                           ;main.c: 86:     {;main.c: 87:         LCD_cmd(0x02);
   860  00318C  0E02               	movlw	2
   861  00318E  EC37  F01A         	call	_LCD_cmd
   862  003192                     
   863                           ;main.c: 88:         dato= ADC_read(0);
   864  003192  0E00               	movlw	0
   865  003194  EC1C  F01B         	call	_ADC_read
   866  003198  C001  F0B5         	movff	?_ADC_read,main@dato
   867  00319C  C002  F0B6         	movff	?_ADC_read+1,main@dato+1
   868  0031A0                     
   869                           ;main.c: 89:         volt = (float)(((5.0/1024) * dato));
   870  0031A0  C0B5  F001         	movff	main@dato,___xxtofl@val
   871  0031A4  C0B6  F002         	movff	main@dato+1,___xxtofl@val+1
   872  0031A8  6A03               	clrf	(___xxtofl@val+2)^0,c
   873  0031AA  6A04               	clrf	(___xxtofl@val+3)^0,c
   874  0031AC  0E00               	movlw	0
   875  0031AE  EC79  F013         	call	___xxtofl
   876  0031B2  C001  F00F         	movff	?___xxtofl,___flmul@b
   877  0031B6  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
   878  0031BA  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
   879  0031BE  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
   880  0031C2  0E00               	movlw	0
   881  0031C4  6E13               	movwf	___flmul@a^0,c
   882  0031C6  0E00               	movlw	0
   883  0031C8  6E14               	movwf	(___flmul@a+1)^0,c
   884  0031CA  0EA0               	movlw	160
   885  0031CC  6E15               	movwf	(___flmul@a+2)^0,c
   886  0031CE  0E3B               	movlw	59
   887  0031D0  6E16               	movwf	(___flmul@a+3)^0,c
   888  0031D2  EC8E  F00E         	call	___flmul	;wreg free
   889  0031D6  C00F  F0B1         	movff	?___flmul,main@volt
   890  0031DA  C010  F0B2         	movff	?___flmul+1,main@volt+1
   891  0031DE  C011  F0B3         	movff	?___flmul+2,main@volt+2
   892  0031E2  C012  F0B4         	movff	?___flmul+3,main@volt+3
   893  0031E6                     
   894                           ;main.c: 90:         sprintf(buffer, "Voltaje %.2f", volt);
   895  0031E6  0EA7               	movlw	low main@buffer
   896  0031E8  0100               	movlb	0	; () banked
   897  0031EA  6F92               	movwf	sprintf@s& (0+255),b
   898  0031EC  0E00               	movlw	high main@buffer
   899  0031EE  6F93               	movwf	(sprintf@s+1)& (0+255),b
   900  0031F0  0E01               	movlw	low STR_1
   901  0031F2  6F94               	movwf	sprintf@fmt& (0+255),b
   902  0031F4  0E08               	movlw	high STR_1
   903  0031F6  6F95               	movwf	(sprintf@fmt+1)& (0+255),b
   904  0031F8  C0B1  F096         	movff	main@volt,?_sprintf+4
   905  0031FC  C0B2  F097         	movff	main@volt+1,?_sprintf+5
   906  003200  C0B3  F098         	movff	main@volt+2,?_sprintf+6
   907  003204  C0B4  F099         	movff	main@volt+3,?_sprintf+7
   908  003208  ECE5  F019         	call	_sprintf	;wreg free
   909  00320C                     
   910                           ;main.c: 91:         LCD_write_text(buffer);
   911  00320C  0EA7               	movlw	low main@buffer
   912  00320E  6E03               	movwf	LCD_write_text@dato^0,c
   913  003210  0E00               	movlw	high main@buffer
   914  003212  6E04               	movwf	(LCD_write_text@dato+1)^0,c
   915  003214  EC53  F01B         	call	_LCD_write_text	;wreg free
   916  003218  EFC6  F018         	goto	l3944
   917  00321C  EF00  F000         	goto	start
   918  003220                     __end_of_main:
   919                           	callstack 0
   920                           
   921 ;; *************** function _sprintf *****************
   922 ;; Defined at:
   923 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_sprintf.c"
   924 ;; Parameters:    Size  Location     Type
   925 ;;  s               2   50[BANK0 ] PTR unsigned char 
   926 ;;		 -> main@buffer(10), 
   927 ;;  fmt             2   52[BANK0 ] PTR const unsigned char 
   928 ;;		 -> STR_1(13), 
   929 ;; Auto vars:     Size  Location     Type
   930 ;;  f              11   60[BANK0 ] struct _IO_FILE
   931 ;;  ap              2   58[BANK0 ] PTR void [1]
   932 ;;		 -> ?_sprintf(2), 
   933 ;;  ret             2    0        int 
   934 ;; Return value:  Size  Location     Type
   935 ;;                  2   50[BANK0 ] int 
   936 ;; Registers used:
   937 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   938 ;; Tracked objects:
   939 ;;		On entry : 0/0
   940 ;;		On exit  : 0/0
   941 ;;		Unchanged: 0/0
   942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   943 ;;      Params:         0       8       0       0       0       0       0       0       0
   944 ;;      Locals:         0      13       0       0       0       0       0       0       0
   945 ;;      Temps:          0       0       0       0       0       0       0       0       0
   946 ;;      Totals:         0      21       0       0       0       0       0       0       0
   947 ;;Total ram usage:       21 bytes
   948 ;; Hardware stack levels used: 1
   949 ;; Hardware stack levels required when called: 7
   950 ;; This function calls:
   951 ;;		_vfprintf
   952 ;; This function is called by:
   953 ;;		_main
   954 ;; This function uses a non-reentrant model
   955 ;;
   956                           
   957                           	psect	text1
   958  0033CA                     __ptext1:
   959                           	callstack 0
   960  0033CA                     _sprintf:
   961                           	callstack 23
   962  0033CA  0E96               	movlw	low (?_sprintf+4)
   963  0033CC  0100               	movlb	0	; () banked
   964  0033CE  6F9A               	movwf	sprintf@ap& (0+255),b
   965  0033D0  0E00               	movlw	high (?_sprintf+4)
   966  0033D2  6F9B               	movwf	(sprintf@ap+1)& (0+255),b
   967  0033D4  C092  F09C         	movff	sprintf@s,sprintf@f
   968  0033D8  C093  F09D         	movff	sprintf@s+1,sprintf@f+1
   969  0033DC                     
   970                           ; BSR set to: 0
   971  0033DC  0E00               	movlw	0
   972  0033DE  6FA0               	movwf	(sprintf@f+4)& (0+255),b
   973  0033E0  0E00               	movlw	0
   974  0033E2  6F9F               	movwf	(sprintf@f+3)& (0+255),b
   975  0033E4                     
   976                           ; BSR set to: 0
   977  0033E4  0E00               	movlw	0
   978  0033E6  6FA6               	movwf	(sprintf@f+10)& (0+255),b
   979  0033E8  0E00               	movlw	0
   980  0033EA  6FA5               	movwf	(sprintf@f+9)& (0+255),b
   981  0033EC                     
   982                           ; BSR set to: 0
   983  0033EC  0E9C               	movlw	low sprintf@f
   984  0033EE  6E52               	movwf	vfprintf@fp^0,c
   985  0033F0  0E00               	movlw	high sprintf@f
   986  0033F2  6E53               	movwf	(vfprintf@fp+1)^0,c
   987  0033F4  C094  F054         	movff	sprintf@fmt,vfprintf@fmt
   988  0033F8  C095  F055         	movff	sprintf@fmt+1,vfprintf@fmt+1
   989  0033FC  0E9A               	movlw	low sprintf@ap
   990  0033FE  6E56               	movwf	vfprintf@ap^0,c
   991  003400  0E00               	movlw	high sprintf@ap
   992  003402  6E57               	movwf	(vfprintf@ap+1)^0,c
   993  003404  EC86  F019         	call	_vfprintf	;wreg free
   994  003408  0100               	movlb	0	; () banked
   995  00340A  519F               	movf	(sprintf@f+3)& (0+255),w,b
   996  00340C  2592               	addwf	sprintf@s& (0+255),w,b
   997  00340E  6ED9               	movwf	fsr2l,c
   998  003410  51A0               	movf	(sprintf@f+4)& (0+255),w,b
   999  003412  2193               	addwfc	(sprintf@s+1)& (0+255),w,b
  1000  003414  6EDA               	movwf	fsr2h,c
  1001  003416  0E00               	movlw	0
  1002  003418  6EDF               	movwf	indf2,c
  1003  00341A                     
  1004                           ; BSR set to: 0
  1005  00341A  0012               	return		;funcret
  1006  00341C                     __end_of_sprintf:
  1007                           	callstack 0
  1008                           
  1009 ;; *************** function _vfprintf *****************
  1010 ;; Defined at:
  1011 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  1012 ;; Parameters:    Size  Location     Type
  1013 ;;  fp              2   81[COMRAM] PTR struct _IO_FILE
  1014 ;;		 -> sprintf@f(11), 
  1015 ;;  fmt             2   83[COMRAM] PTR const unsigned char 
  1016 ;;		 -> STR_1(13), 
  1017 ;;  ap              2   85[COMRAM] PTR PTR void 
  1018 ;;		 -> sprintf@ap(2), 
  1019 ;; Auto vars:     Size  Location     Type
  1020 ;;  cfmt            2   87[COMRAM] PTR unsigned char 
  1021 ;;		 -> STR_1(13), 
  1022 ;; Return value:  Size  Location     Type
  1023 ;;                  2   81[COMRAM] int 
  1024 ;; Registers used:
  1025 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1026 ;; Tracked objects:
  1027 ;;		On entry : 0/0
  1028 ;;		On exit  : 0/0
  1029 ;;		Unchanged: 0/0
  1030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1031 ;;      Params:         6       0       0       0       0       0       0       0       0
  1032 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1033 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1034 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1035 ;;Total ram usage:        8 bytes
  1036 ;; Hardware stack levels used: 1
  1037 ;; Hardware stack levels required when called: 6
  1038 ;; This function calls:
  1039 ;;		_vfpfcnvrt
  1040 ;; This function is called by:
  1041 ;;		_sprintf
  1042 ;; This function uses a non-reentrant model
  1043 ;;
  1044                           
  1045                           	psect	text2
  1046  00330C                     __ptext2:
  1047                           	callstack 0
  1048  00330C                     _vfprintf:
  1049                           	callstack 23
  1050  00330C                     
  1051                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  1052  00330C  C054  F058         	movff	vfprintf@fmt,vfprintf@cfmt
  1053  003310  C055  F059         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1054  003314                     
  1055                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  1056  003314  0E00               	movlw	0
  1057  003316  0100               	movlb	0	; () banked
  1058  003318  6FC0               	movwf	(_nout+1)& (0+255),b
  1059  00331A  0E00               	movlw	0
  1060  00331C  6FBF               	movwf	_nout& (0+255),b
  1061                           
  1062                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1063  00331E  EFA4  F019         	goto	l3794
  1064  003322                     l3792:
  1065                           
  1066                           ; BSR set to: 0
  1067                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1068  003322  C052  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
  1069  003326  C053  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1070  00332A  0E58               	movlw	low vfprintf@cfmt
  1071  00332C  6E42               	movwf	vfpfcnvrt@fmt^0,c
  1072  00332E  0E00               	movlw	high vfprintf@cfmt
  1073  003330  6E43               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1074  003332  C056  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
  1075  003336  C057  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1076  00333A  EC79  F00C         	call	_vfpfcnvrt	;wreg free
  1077  00333E  5040               	movf	?_vfpfcnvrt^0,w,c
  1078  003340  0100               	movlb	0	; () banked
  1079  003342  27BF               	addwf	_nout& (0+255),f,b
  1080  003344  5041               	movf	(?_vfpfcnvrt+1)^0,w,c
  1081  003346  23C0               	addwfc	(_nout+1)& (0+255),f,b
  1082  003348                     l3794:
  1083                           
  1084                           ; BSR set to: 0
  1085                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1086  003348  C058  FFF6         	movff	vfprintf@cfmt,tblptrl
  1087  00334C  C059  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1088  003350                     	if	0	;tblptru may be non-zero
  1089  003350                     	endif
  1090  003350                     	if	0	;tblptru may be non-zero
  1091  003350                     	endif
  1092  003350  0008               	tblrd		*
  1093  003352  50F5               	movf	tablat,w,c
  1094  003354  0900               	iorlw	0
  1095  003356  A4D8               	btfss	status,2,c
  1096  003358  EFB0  F019         	goto	u4521
  1097  00335C  EFB2  F019         	goto	u4520
  1098  003360                     u4521:
  1099  003360  EF91  F019         	goto	l3792
  1100  003364                     u4520:
  1101  003364                     
  1102                           ; BSR set to: 0
  1103                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  1104  003364  C0BF  F052         	movff	_nout,?_vfprintf
  1105  003368  C0C0  F053         	movff	_nout+1,?_vfprintf+1
  1106  00336C                     
  1107                           ; BSR set to: 0
  1108  00336C  0012               	return		;funcret
  1109  00336E                     __end_of_vfprintf:
  1110                           	callstack 0
  1111                           
  1112 ;; *************** function _vfpfcnvrt *****************
  1113 ;; Defined at:
  1114 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  1115 ;; Parameters:    Size  Location     Type
  1116 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  1117 ;;		 -> sprintf@f(11), 
  1118 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  1119 ;;		 -> vfprintf@cfmt(2), 
  1120 ;;  ap              2   67[COMRAM] PTR PTR void 
  1121 ;;		 -> sprintf@ap(2), 
  1122 ;; Auto vars:     Size  Location     Type
  1123 ;;  llu             8    0        unsigned long long 
  1124 ;;  ll              8    0        long long 
  1125 ;;  f               4   73[COMRAM] long long 
  1126 ;;  ct              3   77[COMRAM] unsigned char [3]
  1127 ;;  vp              3    0        PTR void 
  1128 ;;  cp              3    0        PTR unsigned char 
  1129 ;;  i               2    0        int 
  1130 ;;  done            2    0        int 
  1131 ;;  c               1   80[COMRAM] unsigned char 
  1132 ;; Return value:  Size  Location     Type
  1133 ;;                  2   63[COMRAM] int 
  1134 ;; Registers used:
  1135 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1136 ;; Tracked objects:
  1137 ;;		On entry : 0/0
  1138 ;;		On exit  : 0/0
  1139 ;;		Unchanged: 0/0
  1140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1141 ;;      Params:         6       0       0       0       0       0       0       0       0
  1142 ;;      Locals:         8       0       0       0       0       0       0       0       0
  1143 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1144 ;;      Totals:        18       0       0       0       0       0       0       0       0
  1145 ;;Total ram usage:       18 bytes
  1146 ;; Hardware stack levels used: 1
  1147 ;; Hardware stack levels required when called: 5
  1148 ;; This function calls:
  1149 ;;		_atoi
  1150 ;;		_efgtoa
  1151 ;;		_fputc
  1152 ;;		_isdigit
  1153 ;;		_isupper
  1154 ;;		_strncmp
  1155 ;;		_tolower
  1156 ;; This function is called by:
  1157 ;;		_vfprintf
  1158 ;; This function uses a non-reentrant model
  1159 ;;
  1160                           
  1161                           	psect	text3
  1162  0018F2                     __ptext3:
  1163                           	callstack 0
  1164  0018F2                     _vfpfcnvrt:
  1165                           	callstack 23
  1166  0018F2                     
  1167                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.36\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          6\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  1168  0018F2  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1169  0018F6  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1170  0018FA  CFDE FFF6          	movff	postinc2,tblptrl
  1171  0018FE  CFDD FFF7          	movff	postdec2,tblptrh
  1172  001902                     	if	0	;tblptru may be non-zero
  1173  001902                     	endif
  1174  001902                     	if	0	;tblptru may be non-zero
  1175  001902                     	endif
  1176  001902  0008               	tblrd		*
  1177  001904  50F5               	movf	tablat,w,c
  1178  001906  0A25               	xorlw	37
  1179  001908  A4D8               	btfss	status,2,c
  1180  00190A  EF89  F00C         	goto	u4401
  1181  00190E  EF8B  F00C         	goto	u4400
  1182  001912                     u4401:
  1183  001912  EF72  F00E         	goto	l3762
  1184  001916                     u4400:
  1185  001916                     
  1186                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  1187  001916  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1188  00191A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1189  00191E  2ADE               	incf	postinc2,f,c
  1190  001920  0E00               	movlw	0
  1191  001922  22DD               	addwfc	postdec2,f,c
  1192  001924                     
  1193                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  1194  001924  0E00               	movlw	0
  1195  001926  6E5B               	movwf	(_width+1)^0,c
  1196  001928  0E00               	movlw	0
  1197  00192A  6E5A               	movwf	_width^0,c
  1198  00192C  C05A  F05E         	movff	_width,_flags
  1199  001930  C05B  F05F         	movff	_width+1,_flags+1
  1200  001934                     
  1201                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  1202  001934  685C               	setf	_prec^0,c
  1203  001936  685D               	setf	(_prec+1)^0,c
  1204  001938                     
  1205                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 762:         if (
      +                          (*fmt)[0] == '.') {
  1206  001938  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1207  00193C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1208  001940  CFDE FFF6          	movff	postinc2,tblptrl
  1209  001944  CFDD FFF7          	movff	postdec2,tblptrh
  1210  001948                     	if	0	;tblptru may be non-zero
  1211  001948                     	endif
  1212  001948                     	if	0	;tblptru may be non-zero
  1213  001948                     	endif
  1214  001948  0008               	tblrd		*
  1215  00194A  50F5               	movf	tablat,w,c
  1216  00194C  0A2E               	xorlw	46
  1217  00194E  A4D8               	btfss	status,2,c
  1218  001950  EFAC  F00C         	goto	u4411
  1219  001954  EFAE  F00C         	goto	u4410
  1220  001958                     u4411:
  1221  001958  EF1E  F00D         	goto	l3708
  1222  00195C                     u4410:
  1223  00195C                     
  1224                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 763:             
      +                          prec = 0;
  1225  00195C  0E00               	movlw	0
  1226  00195E  6E5D               	movwf	(_prec+1)^0,c
  1227  001960  0E00               	movlw	0
  1228  001962  6E5C               	movwf	_prec^0,c
  1229  001964                     
  1230                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 764:             
      +                          ++*fmt;
  1231  001964  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1232  001968  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1233  00196C  2ADE               	incf	postinc2,f,c
  1234  00196E  0E00               	movlw	0
  1235  001970  22DD               	addwfc	postdec2,f,c
  1236  001972                     
  1237                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 765:             
      +                          if ((*fmt)[0] == '*') {
  1238  001972  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1239  001976  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1240  00197A  CFDE FFF6          	movff	postinc2,tblptrl
  1241  00197E  CFDD FFF7          	movff	postdec2,tblptrh
  1242  001982                     	if	0	;tblptru may be non-zero
  1243  001982                     	endif
  1244  001982                     	if	0	;tblptru may be non-zero
  1245  001982                     	endif
  1246  001982  0008               	tblrd		*
  1247  001984  50F5               	movf	tablat,w,c
  1248  001986  0A2A               	xorlw	42
  1249  001988  A4D8               	btfss	status,2,c
  1250  00198A  EFC9  F00C         	goto	u4421
  1251  00198E  EFCB  F00C         	goto	u4420
  1252  001992                     u4421:
  1253  001992  EFE8  F00C         	goto	l3700
  1254  001996                     u4420:
  1255  001996                     
  1256                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 766:             
      +                              ++*fmt;
  1257  001996  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1258  00199A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1259  00199E  2ADE               	incf	postinc2,f,c
  1260  0019A0  0E00               	movlw	0
  1261  0019A2  22DD               	addwfc	postdec2,f,c
  1262                           
  1263                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 767:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  1264  0019A4  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1265  0019A8  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1266  0019AC  CFDF F046          	movff	indf2,??_vfpfcnvrt
  1267  0019B0  0E02               	movlw	2
  1268  0019B2  26DE               	addwf	postinc2,f,c
  1269  0019B4  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  1270  0019B8  0E00               	movlw	0
  1271  0019BA  22DD               	addwfc	postdec2,f,c
  1272  0019BC  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1273  0019C0  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1274  0019C4  CFDE F05C          	movff	postinc2,_prec
  1275  0019C8  CFDD F05D          	movff	postdec2,_prec+1
  1276                           
  1277                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 768:             
      +                          } else {
  1278  0019CC  EF1E  F00D         	goto	l3708
  1279  0019D0                     l3700:
  1280                           
  1281                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 769:             
      +                              prec = atoi(*fmt);
  1282  0019D0  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1283  0019D4  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1284  0019D8  CFDE F008          	movff	postinc2,atoi@s
  1285  0019DC  CFDD F009          	movff	postdec2,atoi@s+1
  1286  0019E0  EC53  F014         	call	_atoi	;wreg free
  1287  0019E4  C008  F05C         	movff	?_atoi,_prec
  1288  0019E8  C009  F05D         	movff	?_atoi+1,_prec+1
  1289                           
  1290                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 770:             
      +                              while ((0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  1291  0019EC  EFFF  F00C         	goto	l3706
  1292  0019F0                     l3702:
  1293                           
  1294                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 771:             
      +                                  ++*fmt;
  1295  0019F0  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1296  0019F4  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1297  0019F8  2ADE               	incf	postinc2,f,c
  1298  0019FA  0E00               	movlw	0
  1299  0019FC  22DD               	addwfc	postdec2,f,c
  1300  0019FE                     l3706:
  1301  0019FE  0ED0               	movlw	208
  1302  001A00  6E46               	movwf	??_vfpfcnvrt^0,c
  1303  001A02  0EFF               	movlw	255
  1304  001A04  6E47               	movwf	(??_vfpfcnvrt+1)^0,c
  1305  001A06  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1306  001A0A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1307  001A0E  CFDE FFF6          	movff	postinc2,tblptrl
  1308  001A12  CFDD FFF7          	movff	postdec2,tblptrh
  1309  001A16                     	if	0	;tblptru may be non-zero
  1310  001A16                     	endif
  1311  001A16                     	if	0	;tblptru may be non-zero
  1312  001A16                     	endif
  1313  001A16  0008               	tblrd		*
  1314  001A18  50F5               	movf	tablat,w,c
  1315  001A1A  6E48               	movwf	(??_vfpfcnvrt+2)^0,c
  1316  001A1C  6A49               	clrf	(??_vfpfcnvrt+3)^0,c
  1317  001A1E  5046               	movf	??_vfpfcnvrt^0,w,c
  1318  001A20  2648               	addwf	(??_vfpfcnvrt+2)^0,f,c
  1319  001A22  5047               	movf	(??_vfpfcnvrt+1)^0,w,c
  1320  001A24  2249               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  1321  001A26  5049               	movf	(??_vfpfcnvrt+3)^0,w,c
  1322  001A28  E109               	bnz	u4430
  1323  001A2A  0E0A               	movlw	10
  1324  001A2C  5C48               	subwf	(??_vfpfcnvrt+2)^0,w,c
  1325  001A2E  A0D8               	btfss	status,0,c
  1326  001A30  EF1C  F00D         	goto	u4431
  1327  001A34  EF1E  F00D         	goto	u4430
  1328  001A38                     u4431:
  1329  001A38  EFF8  F00C         	goto	l3702
  1330  001A3C                     u4430:
  1331  001A3C                     l3708:
  1332                           
  1333                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 779:         ct[0
      +                          ] = (char)tolower((int)(*fmt)[0]);
  1334  001A3C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1335  001A40  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1336  001A44  CFDE FFF6          	movff	postinc2,tblptrl
  1337  001A48  CFDD FFF7          	movff	postdec2,tblptrh
  1338  001A4C                     	if	0	;tblptru may be non-zero
  1339  001A4C                     	endif
  1340  001A4C                     	if	0	;tblptru may be non-zero
  1341  001A4C                     	endif
  1342  001A4C  0008               	tblrd		*
  1343  001A4E  50F5               	movf	tablat,w,c
  1344  001A50  6E07               	movwf	tolower@c^0,c
  1345  001A52  6A08               	clrf	(tolower@c+1)^0,c
  1346  001A54  EC60  F01A         	call	_tolower	;wreg free
  1347  001A58  5007               	movf	?_tolower^0,w,c
  1348  001A5A  6E4E               	movwf	vfpfcnvrt@ct^0,c
  1349  001A5C                     
  1350                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 780:         if (
      +                          ct[0]) {
  1351  001A5C  504E               	movf	vfpfcnvrt@ct^0,w,c
  1352  001A5E  B4D8               	btfsc	status,2,c
  1353  001A60  EF34  F00D         	goto	u4441
  1354  001A64  EF36  F00D         	goto	u4440
  1355  001A68                     u4441:
  1356  001A68  EF6E  F00D         	goto	l3718
  1357  001A6C                     u4440:
  1358  001A6C                     
  1359                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 781:             
      +                          ct[1] = (char)tolower((int)(*fmt)[1]);
  1360  001A6C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1361  001A70  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1362  001A74  CFDE F046          	movff	postinc2,??_vfpfcnvrt
  1363  001A78  CFDD F047          	movff	postdec2,??_vfpfcnvrt+1
  1364  001A7C  0E01               	movlw	1
  1365  001A7E  2646               	addwf	??_vfpfcnvrt^0,f,c
  1366  001A80  0E00               	movlw	0
  1367  001A82  2247               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  1368  001A84  C046  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1369  001A88  C047  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1370  001A8C                     	if	0	;tblptru may be non-zero
  1371  001A8C                     	endif
  1372  001A8C                     	if	0	;tblptru may be non-zero
  1373  001A8C                     	endif
  1374  001A8C  0008               	tblrd		*
  1375  001A8E  50F5               	movf	tablat,w,c
  1376  001A90  6E07               	movwf	tolower@c^0,c
  1377  001A92  6A08               	clrf	(tolower@c+1)^0,c
  1378  001A94  EC60  F01A         	call	_tolower	;wreg free
  1379  001A98  5007               	movf	?_tolower^0,w,c
  1380  001A9A  6E4F               	movwf	(vfpfcnvrt@ct+1)^0,c
  1381  001A9C                     
  1382                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 782:             
      +                          if (ct[1]) {
  1383  001A9C  504F               	movf	(vfpfcnvrt@ct+1)^0,w,c
  1384  001A9E  B4D8               	btfsc	status,2,c
  1385  001AA0  EF54  F00D         	goto	u4451
  1386  001AA4  EF56  F00D         	goto	u4450
  1387  001AA8                     u4451:
  1388  001AA8  EF6E  F00D         	goto	l3718
  1389  001AAC                     u4450:
  1390  001AAC                     
  1391                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 783:             
      +                              ct[2] = (char)tolower((int)(*fmt)[2]);
  1392  001AAC  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1393  001AB0  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1394  001AB4  CFDE F046          	movff	postinc2,??_vfpfcnvrt
  1395  001AB8  CFDD F047          	movff	postdec2,??_vfpfcnvrt+1
  1396  001ABC  0E02               	movlw	2
  1397  001ABE  2646               	addwf	??_vfpfcnvrt^0,f,c
  1398  001AC0  0E00               	movlw	0
  1399  001AC2  2247               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  1400  001AC4  C046  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1401  001AC8  C047  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1402  001ACC                     	if	0	;tblptru may be non-zero
  1403  001ACC                     	endif
  1404  001ACC                     	if	0	;tblptru may be non-zero
  1405  001ACC                     	endif
  1406  001ACC  0008               	tblrd		*
  1407  001ACE  50F5               	movf	tablat,w,c
  1408  001AD0  6E07               	movwf	tolower@c^0,c
  1409  001AD2  6A08               	clrf	(tolower@c+1)^0,c
  1410  001AD4  EC60  F01A         	call	_tolower	;wreg free
  1411  001AD8  5007               	movf	?_tolower^0,w,c
  1412  001ADA  6E50               	movwf	(vfpfcnvrt@ct+2)^0,c
  1413  001ADC                     l3718:
  1414                           
  1415                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 942:         if (
      +                          ct[0] == 'f') {
  1416  001ADC  0E66               	movlw	102
  1417  001ADE  184E               	xorwf	vfpfcnvrt@ct^0,w,c
  1418  001AE0  A4D8               	btfss	status,2,c
  1419  001AE2  EF75  F00D         	goto	u4461
  1420  001AE6  EF77  F00D         	goto	u4460
  1421  001AEA                     u4461:
  1422  001AEA  EFB7  F00D         	goto	l3730
  1423  001AEE                     u4460:
  1424  001AEE                     
  1425                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 944:             
      +                          c = (*fmt)[0];
  1426  001AEE  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1427  001AF2  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1428  001AF6  CFDE FFF6          	movff	postinc2,tblptrl
  1429  001AFA  CFDD FFF7          	movff	postdec2,tblptrh
  1430  001AFE                     	if	0	;tblptru may be non-zero
  1431  001AFE                     	endif
  1432  001AFE                     	if	0	;tblptru may be non-zero
  1433  001AFE                     	endif
  1434  001AFE  0008               	tblrd		*
  1435  001B00  CFF5 F051          	movff	tablat,vfpfcnvrt@c
  1436  001B04                     
  1437                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 945:             
      +                          ++*fmt;
  1438  001B04  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1439  001B08  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1440  001B0C  2ADE               	incf	postinc2,f,c
  1441  001B0E  0E00               	movlw	0
  1442  001B10  22DD               	addwfc	postdec2,f,c
  1443  001B12                     
  1444                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 946:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  1445  001B12  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1446  001B16  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1447  001B1A  CFDF F046          	movff	indf2,??_vfpfcnvrt
  1448  001B1E  0E04               	movlw	4
  1449  001B20  26DE               	addwf	postinc2,f,c
  1450  001B22  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  1451  001B26  0E00               	movlw	0
  1452  001B28  22DD               	addwfc	postdec2,f,c
  1453  001B2A  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1454  001B2E  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1455  001B32  CFDE F04A          	movff	postinc2,vfpfcnvrt@f
  1456  001B36  CFDE F04B          	movff	postinc2,vfpfcnvrt@f+1
  1457  001B3A  CFDE F04C          	movff	postinc2,vfpfcnvrt@f+2
  1458  001B3E  CFDE F04D          	movff	postinc2,vfpfcnvrt@f+3
  1459  001B42                     l3726:
  1460                           
  1461                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 948:             
      +                          return efgtoa(fp, f, c);
  1462  001B42  C040  F034         	movff	vfpfcnvrt@fp,efgtoa@fp
  1463  001B46  C041  F035         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  1464  001B4A  C04A  F036         	movff	vfpfcnvrt@f,efgtoa@f
  1465  001B4E  C04B  F037         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  1466  001B52  C04C  F038         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  1467  001B56  C04D  F039         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  1468  001B5A  C051  F03A         	movff	vfpfcnvrt@c,efgtoa@c
  1469  001B5E  EC11  F004         	call	_efgtoa	;wreg free
  1470  001B62  C034  F040         	movff	?_efgtoa,?_vfpfcnvrt
  1471  001B66  C035  F041         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  1472  001B6A  EF8D  F00E         	goto	l924
  1473  001B6E                     l3730:
  1474                           
  1475                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 950:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  1476  001B6E  0E4E               	movlw	low vfpfcnvrt@ct
  1477  001B70  6E01               	movwf	strncmp@_l^0,c
  1478  001B72  0E00               	movlw	high vfpfcnvrt@ct
  1479  001B74  6E02               	movwf	(strncmp@_l+1)^0,c
  1480  001B76  0E1E               	movlw	low STR_10
  1481  001B78  6E03               	movwf	strncmp@_r^0,c
  1482  001B7A  0E08               	movlw	high STR_10
  1483  001B7C  6E04               	movwf	(strncmp@_r+1)^0,c
  1484  001B7E  0E00               	movlw	0
  1485  001B80  6E06               	movwf	(strncmp@n+1)^0,c
  1486  001B82  0E02               	movlw	2
  1487  001B84  6E05               	movwf	strncmp@n^0,c
  1488  001B86  EC82  F016         	call	_strncmp	;wreg free
  1489  001B8A  5001               	movf	?_strncmp^0,w,c
  1490  001B8C  1002               	iorwf	(?_strncmp+1)^0,w,c
  1491  001B8E  A4D8               	btfss	status,2,c
  1492  001B90  EFCC  F00D         	goto	u4471
  1493  001B94  EFCE  F00D         	goto	u4470
  1494  001B98                     u4471:
  1495  001B98  EF3C  F00E         	goto	l3746
  1496  001B9C                     u4470:
  1497  001B9C                     
  1498                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 952:             
      +                          c = (*fmt)[1];
  1499  001B9C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1500  001BA0  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1501  001BA4  CFDE F046          	movff	postinc2,??_vfpfcnvrt
  1502  001BA8  CFDD F047          	movff	postdec2,??_vfpfcnvrt+1
  1503  001BAC  0E01               	movlw	1
  1504  001BAE  2646               	addwf	??_vfpfcnvrt^0,f,c
  1505  001BB0  0E00               	movlw	0
  1506  001BB2  2247               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  1507  001BB4  C046  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1508  001BB8  C047  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1509  001BBC                     	if	0	;tblptru may be non-zero
  1510  001BBC                     	endif
  1511  001BBC                     	if	0	;tblptru may be non-zero
  1512  001BBC                     	endif
  1513  001BBC  0008               	tblrd		*
  1514  001BBE  CFF5 F051          	movff	tablat,vfpfcnvrt@c
  1515  001BC2  0EBF               	movlw	191
  1516  001BC4  6E46               	movwf	??_vfpfcnvrt^0,c
  1517  001BC6  0EFF               	movlw	255
  1518  001BC8  6E47               	movwf	(??_vfpfcnvrt+1)^0,c
  1519  001BCA  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1520  001BCE  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1521  001BD2  CFDE FFF6          	movff	postinc2,tblptrl
  1522  001BD6  CFDD FFF7          	movff	postdec2,tblptrh
  1523  001BDA                     	if	0	;tblptru may be non-zero
  1524  001BDA                     	endif
  1525  001BDA                     	if	0	;tblptru may be non-zero
  1526  001BDA                     	endif
  1527  001BDA  0008               	tblrd		*
  1528  001BDC  50F5               	movf	tablat,w,c
  1529  001BDE  6E48               	movwf	(??_vfpfcnvrt+2)^0,c
  1530  001BE0  6A49               	clrf	(??_vfpfcnvrt+3)^0,c
  1531  001BE2  5046               	movf	??_vfpfcnvrt^0,w,c
  1532  001BE4  2648               	addwf	(??_vfpfcnvrt+2)^0,f,c
  1533  001BE6  5047               	movf	(??_vfpfcnvrt+1)^0,w,c
  1534  001BE8  2249               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  1535  001BEA  5049               	movf	(??_vfpfcnvrt+3)^0,w,c
  1536  001BEC  E107               	bnz	u4481
  1537  001BEE  0E1A               	movlw	26
  1538  001BF0  5C48               	subwf	(??_vfpfcnvrt+2)^0,w,c
  1539  001BF2  B0D8               	btfsc	status,0,c
  1540  001BF4  EFFE  F00D         	goto	u4481
  1541  001BF8  EF00  F00E         	goto	u4480
  1542  001BFC                     u4481:
  1543  001BFC  EF1A  F00E         	goto	l3740
  1544  001C00                     u4480:
  1545  001C00                     
  1546                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 954:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  1547  001C00  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1548  001C04  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1549  001C08  CFDF F046          	movff	indf2,??_vfpfcnvrt
  1550  001C0C  0E04               	movlw	4
  1551  001C0E  26DE               	addwf	postinc2,f,c
  1552  001C10  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  1553  001C14  0E00               	movlw	0
  1554  001C16  22DD               	addwfc	postdec2,f,c
  1555  001C18  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1556  001C1C  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1557  001C20  CFDE F04A          	movff	postinc2,vfpfcnvrt@f
  1558  001C24  CFDE F04B          	movff	postinc2,vfpfcnvrt@f+1
  1559  001C28  CFDE F04C          	movff	postinc2,vfpfcnvrt@f+2
  1560  001C2C  CFDE F04D          	movff	postinc2,vfpfcnvrt@f+3
  1561                           
  1562                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 955:             
      +                          } else {
  1563  001C30  EF32  F00E         	goto	l929
  1564  001C34                     l3740:
  1565                           
  1566                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 956:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  1567  001C34  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1568  001C38  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1569  001C3C  CFDF F046          	movff	indf2,??_vfpfcnvrt
  1570  001C40  0E04               	movlw	4
  1571  001C42  26DE               	addwf	postinc2,f,c
  1572  001C44  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  1573  001C48  0E00               	movlw	0
  1574  001C4A  22DD               	addwfc	postdec2,f,c
  1575  001C4C  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1576  001C50  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1577  001C54  CFDE F04A          	movff	postinc2,vfpfcnvrt@f
  1578  001C58  CFDE F04B          	movff	postinc2,vfpfcnvrt@f+1
  1579  001C5C  CFDE F04C          	movff	postinc2,vfpfcnvrt@f+2
  1580  001C60  CFDE F04D          	movff	postinc2,vfpfcnvrt@f+3
  1581  001C64                     l929:
  1582                           
  1583                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 958:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  1584  001C64  0E02               	movlw	2
  1585  001C66  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1586  001C6A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1587  001C6E  26DE               	addwf	postinc2,f,c
  1588  001C70  0E00               	movlw	0
  1589  001C72  22DD               	addwfc	postdec2,f,c
  1590  001C74  EFA1  F00D         	goto	l3726
  1591  001C78                     l3746:
  1592                           
  1593                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  1594  001C78  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1595  001C7C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1596  001C80  CFDE FFF6          	movff	postinc2,tblptrl
  1597  001C84  CFDD FFF7          	movff	postdec2,tblptrh
  1598  001C88                     	if	0	;tblptru may be non-zero
  1599  001C88                     	endif
  1600  001C88                     	if	0	;tblptru may be non-zero
  1601  001C88                     	endif
  1602  001C88  0008               	tblrd		*
  1603  001C8A  50F5               	movf	tablat,w,c
  1604  001C8C  0A25               	xorlw	37
  1605  001C8E  A4D8               	btfss	status,2,c
  1606  001C90  EF4C  F00E         	goto	u4491
  1607  001C94  EF4E  F00E         	goto	u4490
  1608  001C98                     u4491:
  1609  001C98  EF65  F00E         	goto	l3756
  1610  001C9C                     u4490:
  1611  001C9C                     
  1612                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  1613  001C9C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1614  001CA0  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1615  001CA4  2ADE               	incf	postinc2,f,c
  1616  001CA6  0E00               	movlw	0
  1617  001CA8  22DD               	addwfc	postdec2,f,c
  1618  001CAA                     
  1619                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  1620  001CAA  0E00               	movlw	0
  1621  001CAC  6E02               	movwf	(fputc@c+1)^0,c
  1622  001CAE  0E25               	movlw	37
  1623  001CB0  6E01               	movwf	fputc@c^0,c
  1624  001CB2  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1625  001CB6  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1626  001CBA  ECED  F016         	call	_fputc	;wreg free
  1627  001CBE                     l3752:
  1628                           
  1629                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  1630  001CBE  0E00               	movlw	0
  1631  001CC0  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  1632  001CC2  0E01               	movlw	1
  1633  001CC4  6E40               	movwf	?_vfpfcnvrt^0,c
  1634  001CC6  EF8D  F00E         	goto	l924
  1635  001CCA                     l3756:
  1636                           
  1637                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  1638  001CCA  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1639  001CCE  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1640  001CD2  2ADE               	incf	postinc2,f,c
  1641  001CD4  0E00               	movlw	0
  1642  001CD6  22DD               	addwfc	postdec2,f,c
  1643  001CD8                     
  1644                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  1645  001CD8  0E00               	movlw	0
  1646  001CDA  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  1647  001CDC  0E00               	movlw	0
  1648  001CDE  6E40               	movwf	?_vfpfcnvrt^0,c
  1649  001CE0  EF8D  F00E         	goto	l924
  1650  001CE4                     l3762:
  1651                           
  1652                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  1653  001CE4  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1654  001CE8  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1655  001CEC  CFDE FFF6          	movff	postinc2,tblptrl
  1656  001CF0  CFDD FFF7          	movff	postdec2,tblptrh
  1657  001CF4                     	if	0	;tblptru may be non-zero
  1658  001CF4                     	endif
  1659  001CF4                     	if	0	;tblptru may be non-zero
  1660  001CF4                     	endif
  1661  001CF4  0008               	tblrd		*
  1662  001CF6  50F5               	movf	tablat,w,c
  1663  001CF8  6E01               	movwf	fputc@c^0,c
  1664  001CFA  6A02               	clrf	(fputc@c+1)^0,c
  1665  001CFC  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1666  001D00  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1667  001D04  ECED  F016         	call	_fputc	;wreg free
  1668  001D08                     
  1669                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  1670  001D08  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1671  001D0C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1672  001D10  2ADE               	incf	postinc2,f,c
  1673  001D12  0E00               	movlw	0
  1674  001D14  22DD               	addwfc	postdec2,f,c
  1675  001D16  EF5F  F00E         	goto	l3752
  1676  001D1A                     l924:
  1677  001D1A  0012               	return		;funcret
  1678  001D1C                     __end_of_vfpfcnvrt:
  1679                           	callstack 0
  1680                           
  1681 ;; *************** function _strncmp *****************
  1682 ;; Defined at:
  1683 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strncmp.c"
  1684 ;; Parameters:    Size  Location     Type
  1685 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  1686 ;;		 -> vfpfcnvrt@ct(3), 
  1687 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  1688 ;;		 -> STR_12(3), 
  1689 ;;  n               2    4[COMRAM] unsigned int 
  1690 ;; Auto vars:     Size  Location     Type
  1691 ;;  r               2    9[COMRAM] PTR const unsigned char 
  1692 ;;		 -> STR_12(3), 
  1693 ;;  l               2    7[COMRAM] PTR const unsigned char 
  1694 ;;		 -> vfpfcnvrt@ct(3), 
  1695 ;; Return value:  Size  Location     Type
  1696 ;;                  2    0[COMRAM] int 
  1697 ;; Registers used:
  1698 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  1699 ;; Tracked objects:
  1700 ;;		On entry : 0/0
  1701 ;;		On exit  : 0/0
  1702 ;;		Unchanged: 0/0
  1703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1704 ;;      Params:         6       0       0       0       0       0       0       0       0
  1705 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1706 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1707 ;;      Totals:        11       0       0       0       0       0       0       0       0
  1708 ;;Total ram usage:       11 bytes
  1709 ;; Hardware stack levels used: 1
  1710 ;; This function calls:
  1711 ;;		Nothing
  1712 ;; This function is called by:
  1713 ;;		_vfpfcnvrt
  1714 ;; This function uses a non-reentrant model
  1715 ;;
  1716                           
  1717                           	psect	text4
  1718  002D04                     __ptext4:
  1719                           	callstack 0
  1720  002D04                     _strncmp:
  1721                           	callstack 27
  1722  002D04  C001  F008         	movff	strncmp@_l,strncmp@l
  1723  002D08  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  1724  002D0C  C003  F00A         	movff	strncmp@_r,strncmp@r
  1725  002D10  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  1726  002D14  0605               	decf	strncmp@n^0,f,c
  1727  002D16  A0D8               	btfss	status,0,c
  1728  002D18  0606               	decf	(strncmp@n+1)^0,f,c
  1729  002D1A  2805               	incf	strncmp@n^0,w,c
  1730  002D1C  E106               	bnz	u4311
  1731  002D1E  2806               	incf	(strncmp@n+1)^0,w,c
  1732  002D20  A4D8               	btfss	status,2,c
  1733  002D22  EF95  F016         	goto	u4311
  1734  002D26  EF97  F016         	goto	u4310
  1735  002D2A                     u4311:
  1736  002D2A  EFA4  F016         	goto	l3654
  1737  002D2E                     u4310:
  1738  002D2E  0E00               	movlw	0
  1739  002D30  6E02               	movwf	(?_strncmp+1)^0,c
  1740  002D32  0E00               	movlw	0
  1741  002D34  6E01               	movwf	?_strncmp^0,c
  1742  002D36  EFEC  F016         	goto	l1044
  1743  002D3A                     l3652:
  1744  002D3A  4A08               	infsnz	strncmp@l^0,f,c
  1745  002D3C  2A09               	incf	(strncmp@l+1)^0,f,c
  1746  002D3E  4A0A               	infsnz	strncmp@r^0,f,c
  1747  002D40  2A0B               	incf	(strncmp@r+1)^0,f,c
  1748  002D42  0605               	decf	strncmp@n^0,f,c
  1749  002D44  A0D8               	btfss	status,0,c
  1750  002D46  0606               	decf	(strncmp@n+1)^0,f,c
  1751  002D48                     l3654:
  1752  002D48  C008  FFD9         	movff	strncmp@l,fsr2l
  1753  002D4C  C009  FFDA         	movff	strncmp@l+1,fsr2h
  1754  002D50  50DF               	movf	indf2,w,c
  1755  002D52  B4D8               	btfsc	status,2,c
  1756  002D54  EFAE  F016         	goto	u4321
  1757  002D58  EFB0  F016         	goto	u4320
  1758  002D5C                     u4321:
  1759  002D5C  EFDB  F016         	goto	l3662
  1760  002D60                     u4320:
  1761  002D60  C00A  FFF6         	movff	strncmp@r,tblptrl
  1762  002D64  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  1763  002D68                     	if	0	;tblptru may be non-zero
  1764  002D68                     	endif
  1765  002D68                     	if	0	;tblptru may be non-zero
  1766  002D68                     	endif
  1767  002D68  0008               	tblrd		*
  1768  002D6A  50F5               	movf	tablat,w,c
  1769  002D6C  0900               	iorlw	0
  1770  002D6E  B4D8               	btfsc	status,2,c
  1771  002D70  EFBC  F016         	goto	u4331
  1772  002D74  EFBE  F016         	goto	u4330
  1773  002D78                     u4331:
  1774  002D78  EFDB  F016         	goto	l3662
  1775  002D7C                     u4330:
  1776  002D7C  5005               	movf	strncmp@n^0,w,c
  1777  002D7E  1006               	iorwf	(strncmp@n+1)^0,w,c
  1778  002D80  B4D8               	btfsc	status,2,c
  1779  002D82  EFC5  F016         	goto	u4341
  1780  002D86  EFC7  F016         	goto	u4340
  1781  002D8A                     u4341:
  1782  002D8A  EFDB  F016         	goto	l3662
  1783  002D8E                     u4340:
  1784  002D8E  C008  FFD9         	movff	strncmp@l,fsr2l
  1785  002D92  C009  FFDA         	movff	strncmp@l+1,fsr2h
  1786  002D96  50DF               	movf	indf2,w,c
  1787  002D98  6E07               	movwf	??_strncmp^0,c
  1788  002D9A  C00A  FFF6         	movff	strncmp@r,tblptrl
  1789  002D9E  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  1790  002DA2                     	if	0	;tblptru may be non-zero
  1791  002DA2                     	endif
  1792  002DA2                     	if	0	;tblptru may be non-zero
  1793  002DA2                     	endif
  1794  002DA2  0008               	tblrd		*
  1795  002DA4  50F5               	movf	tablat,w,c
  1796  002DA6  1807               	xorwf	??_strncmp^0,w,c
  1797  002DA8  B4D8               	btfsc	status,2,c
  1798  002DAA  EFD9  F016         	goto	u4351
  1799  002DAE  EFDB  F016         	goto	u4350
  1800  002DB2                     u4351:
  1801  002DB2  EF9D  F016         	goto	l3652
  1802  002DB6                     u4350:
  1803  002DB6                     l3662:
  1804  002DB6  C008  FFD9         	movff	strncmp@l,fsr2l
  1805  002DBA  C009  FFDA         	movff	strncmp@l+1,fsr2h
  1806  002DBE  50DF               	movf	indf2,w,c
  1807  002DC0  6E07               	movwf	??_strncmp^0,c
  1808  002DC2  C00A  FFF6         	movff	strncmp@r,tblptrl
  1809  002DC6  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  1810  002DCA                     	if	0	;tblptru may be non-zero
  1811  002DCA                     	endif
  1812  002DCA                     	if	0	;tblptru may be non-zero
  1813  002DCA                     	endif
  1814  002DCA  0008               	tblrd		*
  1815  002DCC  50F5               	movf	tablat,w,c
  1816  002DCE  5C07               	subwf	??_strncmp^0,w,c
  1817  002DD0  6E01               	movwf	?_strncmp^0,c
  1818  002DD2  6A02               	clrf	(?_strncmp+1)^0,c
  1819  002DD4  A0D8               	btfss	status,0,c
  1820  002DD6  0602               	decf	(?_strncmp+1)^0,f,c
  1821  002DD8                     l1044:
  1822  002DD8  0012               	return		;funcret
  1823  002DDA                     __end_of_strncmp:
  1824                           	callstack 0
  1825                           
  1826 ;; *************** function _efgtoa *****************
  1827 ;; Defined at:
  1828 ;;		line 332 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  1829 ;; Parameters:    Size  Location     Type
  1830 ;;  fp              2   51[COMRAM] PTR struct _IO_FILE
  1831 ;;		 -> sprintf@f(11), 
  1832 ;;  f               4   53[COMRAM] PTR struct _IO_FILE
  1833 ;;  c               1   57[COMRAM] unsigned char 
  1834 ;; Auto vars:     Size  Location     Type
  1835 ;;  u               4   46[BANK0 ] unsigned char 
  1836 ;;  g               4   38[BANK0 ] unsigned char 
  1837 ;;  l               4   32[BANK0 ] unsigned char 
  1838 ;;  h               4   28[BANK0 ] unsigned char 
  1839 ;;  ou              4   14[BANK0 ] unsigned char 
  1840 ;;  n               2   44[BANK0 ] int 
  1841 ;;  e               2   42[BANK0 ] int 
  1842 ;;  i               2   36[BANK0 ] int 
  1843 ;;  w               2   24[BANK0 ] int 
  1844 ;;  p               2   22[BANK0 ] int 
  1845 ;;  sign            2   20[BANK0 ] int 
  1846 ;;  d               2   18[BANK0 ] int 
  1847 ;;  m               2   12[BANK0 ] int 
  1848 ;;  ne              2   10[BANK0 ] int 
  1849 ;;  pp              2    8[BANK0 ] int 
  1850 ;;  t               2    6[BANK0 ] int 
  1851 ;;  mode            1   27[BANK0 ] unsigned char 
  1852 ;;  nmode           1   26[BANK0 ] unsigned char 
  1853 ;; Return value:  Size  Location     Type
  1854 ;;                  2   51[COMRAM] int 
  1855 ;; Registers used:
  1856 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1857 ;; Tracked objects:
  1858 ;;		On entry : 0/0
  1859 ;;		On exit  : 0/0
  1860 ;;		Unchanged: 0/0
  1861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1862 ;;      Params:         7       0       0       0       0       0       0       0       0
  1863 ;;      Locals:         0      50       0       0       0       0       0       0       0
  1864 ;;      Temps:          5       0       0       0       0       0       0       0       0
  1865 ;;      Totals:        12      50       0       0       0       0       0       0       0
  1866 ;;Total ram usage:       62 bytes
  1867 ;; Hardware stack levels used: 1
  1868 ;; Hardware stack levels required when called: 4
  1869 ;; This function calls:
  1870 ;;		___awdiv
  1871 ;;		___awmod
  1872 ;;		___fladd
  1873 ;;		___fldiv
  1874 ;;		___fleq
  1875 ;;		___flge
  1876 ;;		___flmul
  1877 ;;		___flneg
  1878 ;;		___flsub
  1879 ;;		___fltol
  1880 ;;		___fpclassifyf
  1881 ;;		_floorf
  1882 ;;		_isupper
  1883 ;;		_pad
  1884 ;;		_strcpy
  1885 ;;		_tolower
  1886 ;; This function is called by:
  1887 ;;		_vfpfcnvrt
  1888 ;; This function uses a non-reentrant model
  1889 ;;
  1890                           
  1891                           	psect	text5
  1892  000822                     __ptext5:
  1893                           	callstack 0
  1894  000822                     _efgtoa:
  1895                           	callstack 23
  1896  000822                     
  1897                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 332: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.36\pic\sources\
      +                          c99\common\doprnt.c: 333: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\
      +                          doprnt.c: 334:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c9
      +                          9\common\doprnt.c: 335:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 336:     long double g, h, l, ou, u;
  1898  000822  0E00               	movlw	0
  1899  000824  0100               	movlb	0	; () banked
  1900  000826  6F75               	movwf	(efgtoa@sign+1)& (0+255),b
  1901  000828  0E00               	movlw	0
  1902  00082A  6F74               	movwf	efgtoa@sign& (0+255),b
  1903  00082C                     
  1904                           ; BSR set to: 0
  1905                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 340:     g = f;
  1906  00082C  C036  F086         	movff	efgtoa@f,efgtoa@g
  1907  000830  C037  F087         	movff	efgtoa@f+1,efgtoa@g+1
  1908  000834  C038  F088         	movff	efgtoa@f+2,efgtoa@g+2
  1909  000838  C039  F089         	movff	efgtoa@f+3,efgtoa@g+3
  1910  00083C                     
  1911                           ; BSR set to: 0
  1912                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 341:     if (g < 
      +                          0.0) {
  1913  00083C  BF89               	btfsc	(efgtoa@g+3)& (0+255),7,b
  1914  00083E  EF25  F004         	goto	u3790
  1915  000842  EF23  F004         	goto	u3791
  1916  000846                     u3791:
  1917  000846  EF3B  F004         	goto	l3318
  1918  00084A                     u3790:
  1919  00084A                     
  1920                           ; BSR set to: 0
  1921                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 342:         sign
      +                           = 1;
  1922  00084A  0E00               	movlw	0
  1923  00084C  6F75               	movwf	(efgtoa@sign+1)& (0+255),b
  1924  00084E  0E01               	movlw	1
  1925  000850  6F74               	movwf	efgtoa@sign& (0+255),b
  1926  000852                     
  1927                           ; BSR set to: 0
  1928                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 343:         g = 
      +                          -g;
  1929  000852  C086  F001         	movff	efgtoa@g,___flneg@f1
  1930  000856  C087  F002         	movff	efgtoa@g+1,___flneg@f1+1
  1931  00085A  C088  F003         	movff	efgtoa@g+2,___flneg@f1+2
  1932  00085E  C089  F004         	movff	efgtoa@g+3,___flneg@f1+3
  1933  000862  ECE4  F01A         	call	___flneg	;wreg free
  1934  000866  C001  F086         	movff	?___flneg,efgtoa@g
  1935  00086A  C002  F087         	movff	?___flneg+1,efgtoa@g+1
  1936  00086E  C003  F088         	movff	?___flneg+2,efgtoa@g+2
  1937  000872  C004  F089         	movff	?___flneg+3,efgtoa@g+3
  1938  000876                     l3318:
  1939                           
  1940                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 347:     n = 0;
  1941  000876  0E00               	movlw	0
  1942  000878  0100               	movlb	0	; () banked
  1943  00087A  6F8D               	movwf	(efgtoa@n+1)& (0+255),b
  1944  00087C  0E00               	movlw	0
  1945  00087E  6F8C               	movwf	efgtoa@n& (0+255),b
  1946  000880                     
  1947                           ; BSR set to: 0
  1948                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 348:     w = widt
      +                          h;
  1949  000880  C05A  F078         	movff	_width,efgtoa@w
  1950  000884  C05B  F079         	movff	_width+1,efgtoa@w+1
  1951  000888                     
  1952                           ; BSR set to: 0
  1953                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 349:     if (sign
      +                           || (flags & (1 << 2))) {
  1954  000888  5174               	movf	efgtoa@sign& (0+255),w,b
  1955  00088A  1175               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  1956  00088C  A4D8               	btfss	status,2,c
  1957  00088E  EF4B  F004         	goto	u3801
  1958  000892  EF4D  F004         	goto	u3800
  1959  000896                     u3801:
  1960  000896  EF54  F004         	goto	l3326
  1961  00089A                     u3800:
  1962  00089A                     
  1963                           ; BSR set to: 0
  1964  00089A  A45E               	btfss	_flags^0,2,c
  1965  00089C  EF52  F004         	goto	u3811
  1966  0008A0  EF54  F004         	goto	u3810
  1967  0008A4                     u3811:
  1968  0008A4  EF6E  F004         	goto	l3338
  1969  0008A8                     u3810:
  1970  0008A8                     l3326:
  1971                           
  1972                           ; BSR set to: 0
  1973                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 350:         dbuf
      +                          [n] = sign ? '-' : '+';
  1974  0008A8  5174               	movf	efgtoa@sign& (0+255),w,b
  1975  0008AA  1175               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  1976  0008AC  A4D8               	btfss	status,2,c
  1977  0008AE  EF5B  F004         	goto	u3821
  1978  0008B2  EF5D  F004         	goto	u3820
  1979  0008B6                     u3821:
  1980  0008B6  EF63  F004         	goto	l3330
  1981  0008BA                     u3820:
  1982  0008BA                     
  1983                           ; BSR set to: 0
  1984  0008BA  0E00               	movlw	0
  1985  0008BC  6F61               	movwf	(_efgtoa$1063+1)& (0+255),b
  1986  0008BE  0E2B               	movlw	43
  1987  0008C0  6F60               	movwf	_efgtoa$1063& (0+255),b
  1988  0008C2  EF67  F004         	goto	l3332
  1989  0008C6                     l3330:
  1990                           
  1991                           ; BSR set to: 0
  1992  0008C6  0E00               	movlw	0
  1993  0008C8  6F61               	movwf	(_efgtoa$1063+1)& (0+255),b
  1994  0008CA  0E2D               	movlw	45
  1995  0008CC  6F60               	movwf	_efgtoa$1063& (0+255),b
  1996  0008CE                     l3332:
  1997                           
  1998                           ; BSR set to: 0
  1999  0008CE  C060  F100         	movff	_efgtoa$1063,_dbuf
  2000  0008D2                     
  2001                           ; BSR set to: 0
  2002                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 351:         ++n;
  2003  0008D2  4B8C               	infsnz	efgtoa@n& (0+255),f,b
  2004  0008D4  2B8D               	incf	(efgtoa@n+1)& (0+255),f,b
  2005  0008D6                     
  2006                           ; BSR set to: 0
  2007                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 352:         --w;
  2008  0008D6  0778               	decf	efgtoa@w& (0+255),f,b
  2009  0008D8  A0D8               	btfss	status,0,c
  2010  0008DA  0779               	decf	(efgtoa@w+1)& (0+255),f,b
  2011  0008DC                     l3338:
  2012                           
  2013                           ; BSR set to: 0
  2014                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 356:     if (( __
      +                          fpclassifyf(g) == 1 )) {
  2015  0008DC  C086  F001         	movff	efgtoa@g,___fpclassifyf@x
  2016  0008E0  C087  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2017  0008E4  C088  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2018  0008E8  C089  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2019  0008EC  EC03  F016         	call	___fpclassifyf	;wreg free
  2020  0008F0  0401               	decf	?___fpclassifyf^0,w,c
  2021  0008F2  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2022  0008F4  A4D8               	btfss	status,2,c
  2023  0008F6  EF7F  F004         	goto	u3831
  2024  0008FA  EF81  F004         	goto	u3830
  2025  0008FE                     u3831:
  2026  0008FE  EFCC  F004         	goto	l3356
  2027  000902                     u3830:
  2028  000902  0EBF               	movlw	191
  2029  000904  6E3B               	movwf	??_efgtoa^0,c
  2030  000906  0EFF               	movlw	255
  2031  000908  6E3C               	movwf	(??_efgtoa+1)^0,c
  2032  00090A  503A               	movf	efgtoa@c^0,w,c
  2033  00090C  6E3D               	movwf	(??_efgtoa+2)^0,c
  2034  00090E  6A3E               	clrf	(??_efgtoa+3)^0,c
  2035  000910  503B               	movf	??_efgtoa^0,w,c
  2036  000912  263D               	addwf	(??_efgtoa+2)^0,f,c
  2037  000914  503C               	movf	(??_efgtoa+1)^0,w,c
  2038  000916  223E               	addwfc	(??_efgtoa+3)^0,f,c
  2039  000918  503E               	movf	(??_efgtoa+3)^0,w,c
  2040  00091A  E107               	bnz	u3841
  2041  00091C  0E1A               	movlw	26
  2042  00091E  5C3D               	subwf	(??_efgtoa+2)^0,w,c
  2043  000920  B0D8               	btfsc	status,0,c
  2044  000922  EF95  F004         	goto	u3841
  2045  000926  EF97  F004         	goto	u3840
  2046  00092A                     u3841:
  2047  00092A  EFA6  F004         	goto	l3348
  2048  00092E                     u3840:
  2049  00092E                     
  2050                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 358:             
      +                          strcpy(&dbuf[n], "INF");
  2051  00092E  0E00               	movlw	low _dbuf
  2052  000930  0100               	movlb	0	; () banked
  2053  000932  258C               	addwf	efgtoa@n& (0+255),w,b
  2054  000934  6E01               	movwf	strcpy@dest^0,c
  2055  000936  0E01               	movlw	high _dbuf
  2056  000938  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2057  00093A  6E02               	movwf	(strcpy@dest+1)^0,c
  2058  00093C  0E0E               	movlw	low STR_2
  2059  00093E  6E03               	movwf	strcpy@src^0,c
  2060  000940  0E08               	movlw	high STR_2
  2061  000942  6E04               	movwf	(strcpy@src+1)^0,c
  2062  000944  ECB7  F019         	call	_strcpy	;wreg free
  2063                           
  2064                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 359:         } el
      +                          se {
  2065  000948  EFB3  F004         	goto	l3350
  2066  00094C                     l3348:
  2067                           
  2068                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 360:             
      +                          strcpy(&dbuf[n], "inf");
  2069  00094C  0E00               	movlw	low _dbuf
  2070  00094E  0100               	movlb	0	; () banked
  2071  000950  258C               	addwf	efgtoa@n& (0+255),w,b
  2072  000952  6E01               	movwf	strcpy@dest^0,c
  2073  000954  0E01               	movlw	high _dbuf
  2074  000956  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2075  000958  6E02               	movwf	(strcpy@dest+1)^0,c
  2076  00095A  0E16               	movlw	low STR_3
  2077  00095C  6E03               	movwf	strcpy@src^0,c
  2078  00095E  0E08               	movlw	high STR_3
  2079  000960  6E04               	movwf	(strcpy@src+1)^0,c
  2080  000962  ECB7  F019         	call	_strcpy	;wreg free
  2081  000966                     l3350:
  2082                           
  2083                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 362:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  2084  000966  0100               	movlb	0	; () banked
  2085  000968  0EFD               	movlw	253
  2086  00096A  2778               	addwf	efgtoa@w& (0+255),f,b
  2087  00096C  0EFF               	movlw	255
  2088  00096E  2379               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2089  000970                     l3352:
  2090                           
  2091                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 363:         retu
      +                          rn pad(fp, &dbuf[0], w);
  2092  000970  C034  F011         	movff	efgtoa@fp,pad@fp
  2093  000974  C035  F012         	movff	efgtoa@fp+1,pad@fp+1
  2094  000978  0E00               	movlw	low _dbuf
  2095  00097A  6E13               	movwf	pad@buf^0,c
  2096  00097C  0E01               	movlw	high _dbuf
  2097  00097E  6E14               	movwf	(pad@buf+1)^0,c
  2098  000980  C078  F015         	movff	efgtoa@w,pad@p
  2099  000984  C079  F016         	movff	efgtoa@w+1,pad@p+1
  2100  000988  ECB4  F017         	call	_pad	;wreg free
  2101  00098C  C011  F034         	movff	?_pad,?_efgtoa
  2102  000990  C012  F035         	movff	?_pad+1,?_efgtoa+1
  2103  000994  EF18  F00A         	goto	l838
  2104  000998                     l3356:
  2105                           
  2106                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 365:     if (( __
      +                          fpclassifyf(g) == 0 )) {
  2107  000998  C086  F001         	movff	efgtoa@g,___fpclassifyf@x
  2108  00099C  C087  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2109  0009A0  C088  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2110  0009A4  C089  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2111  0009A8  EC03  F016         	call	___fpclassifyf	;wreg free
  2112  0009AC  5001               	movf	?___fpclassifyf^0,w,c
  2113  0009AE  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2114  0009B0  A4D8               	btfss	status,2,c
  2115  0009B2  EFDD  F004         	goto	u3851
  2116  0009B6  EFDF  F004         	goto	u3850
  2117  0009BA                     u3851:
  2118  0009BA  EF13  F005         	goto	l3374
  2119  0009BE                     u3850:
  2120  0009BE  0EBF               	movlw	191
  2121  0009C0  6E3B               	movwf	??_efgtoa^0,c
  2122  0009C2  0EFF               	movlw	255
  2123  0009C4  6E3C               	movwf	(??_efgtoa+1)^0,c
  2124  0009C6  503A               	movf	efgtoa@c^0,w,c
  2125  0009C8  6E3D               	movwf	(??_efgtoa+2)^0,c
  2126  0009CA  6A3E               	clrf	(??_efgtoa+3)^0,c
  2127  0009CC  503B               	movf	??_efgtoa^0,w,c
  2128  0009CE  263D               	addwf	(??_efgtoa+2)^0,f,c
  2129  0009D0  503C               	movf	(??_efgtoa+1)^0,w,c
  2130  0009D2  223E               	addwfc	(??_efgtoa+3)^0,f,c
  2131  0009D4  503E               	movf	(??_efgtoa+3)^0,w,c
  2132  0009D6  E107               	bnz	u3861
  2133  0009D8  0E1A               	movlw	26
  2134  0009DA  5C3D               	subwf	(??_efgtoa+2)^0,w,c
  2135  0009DC  B0D8               	btfsc	status,0,c
  2136  0009DE  EFF3  F004         	goto	u3861
  2137  0009E2  EFF5  F004         	goto	u3860
  2138  0009E6                     u3861:
  2139  0009E6  EF04  F005         	goto	l3366
  2140  0009EA                     u3860:
  2141  0009EA                     
  2142                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 367:             
      +                          strcpy(&dbuf[n], "NAN");
  2143  0009EA  0E00               	movlw	low _dbuf
  2144  0009EC  0100               	movlb	0	; () banked
  2145  0009EE  258C               	addwf	efgtoa@n& (0+255),w,b
  2146  0009F0  6E01               	movwf	strcpy@dest^0,c
  2147  0009F2  0E01               	movlw	high _dbuf
  2148  0009F4  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2149  0009F6  6E02               	movwf	(strcpy@dest+1)^0,c
  2150  0009F8  0E12               	movlw	low STR_6
  2151  0009FA  6E03               	movwf	strcpy@src^0,c
  2152  0009FC  0E08               	movlw	high STR_6
  2153  0009FE  6E04               	movwf	(strcpy@src+1)^0,c
  2154  000A00  ECB7  F019         	call	_strcpy	;wreg free
  2155                           
  2156                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 368:         } el
      +                          se {
  2157  000A04  EFB3  F004         	goto	l3350
  2158  000A08                     l3366:
  2159                           
  2160                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 369:             
      +                          strcpy(&dbuf[n], "nan");
  2161  000A08  0E00               	movlw	low _dbuf
  2162  000A0A  0100               	movlb	0	; () banked
  2163  000A0C  258C               	addwf	efgtoa@n& (0+255),w,b
  2164  000A0E  6E01               	movwf	strcpy@dest^0,c
  2165  000A10  0E01               	movlw	high _dbuf
  2166  000A12  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2167  000A14  6E02               	movwf	(strcpy@dest+1)^0,c
  2168  000A16  0E1A               	movlw	low STR_7
  2169  000A18  6E03               	movwf	strcpy@src^0,c
  2170  000A1A  0E08               	movlw	high STR_7
  2171  000A1C  6E04               	movwf	(strcpy@src+1)^0,c
  2172  000A1E  ECB7  F019         	call	_strcpy	;wreg free
  2173  000A22  EFB3  F004         	goto	l3350
  2174  000A26                     l3374:
  2175                           
  2176                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 376:     u = 1.0;
  2177  000A26  0E00               	movlw	0
  2178  000A28  0100               	movlb	0	; () banked
  2179  000A2A  6F8E               	movwf	efgtoa@u& (0+255),b
  2180  000A2C  0E00               	movlw	0
  2181  000A2E  6F8F               	movwf	(efgtoa@u+1)& (0+255),b
  2182  000A30  0E80               	movlw	128
  2183  000A32  6F90               	movwf	(efgtoa@u+2)& (0+255),b
  2184  000A34  0E3F               	movlw	63
  2185  000A36  6F91               	movwf	(efgtoa@u+3)& (0+255),b
  2186                           
  2187                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 377:     e = 0;
  2188  000A38  0E00               	movlw	0
  2189  000A3A  6F8B               	movwf	(efgtoa@e+1)& (0+255),b
  2190  000A3C  0E00               	movlw	0
  2191  000A3E  6F8A               	movwf	efgtoa@e& (0+255),b
  2192  000A40                     
  2193                           ; BSR set to: 0
  2194                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 378:     if (!(g 
      +                          == 0.0)) {
  2195  000A40  C086  F001         	movff	efgtoa@g,___fleq@ff1
  2196  000A44  C087  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  2197  000A48  C088  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  2198  000A4C  C089  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  2199  000A50  0E00               	movlw	0
  2200  000A52  6E05               	movwf	___fleq@ff2^0,c
  2201  000A54  0E00               	movlw	0
  2202  000A56  6E06               	movwf	(___fleq@ff2+1)^0,c
  2203  000A58  0E00               	movlw	0
  2204  000A5A  6E07               	movwf	(___fleq@ff2+2)^0,c
  2205  000A5C  0E00               	movlw	0
  2206  000A5E  6E08               	movwf	(___fleq@ff2+3)^0,c
  2207  000A60  EC6D  F018         	call	___fleq	;wreg free
  2208  000A64  B0D8               	btfsc	status,0,c
  2209  000A66  EF37  F005         	goto	u3871
  2210  000A6A  EF39  F005         	goto	u3870
  2211  000A6E                     u3871:
  2212  000A6E  EFBC  F005         	goto	l3392
  2213  000A72                     u3870:
  2214  000A72  EF58  F005         	goto	l3384
  2215  000A76                     l3380:
  2216                           
  2217                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 380:             
      +                          u = u*10.0;
  2218  000A76  C08E  F00F         	movff	efgtoa@u,___flmul@b
  2219  000A7A  C08F  F010         	movff	efgtoa@u+1,___flmul@b+1
  2220  000A7E  C090  F011         	movff	efgtoa@u+2,___flmul@b+2
  2221  000A82  C091  F012         	movff	efgtoa@u+3,___flmul@b+3
  2222  000A86  0E00               	movlw	0
  2223  000A88  6E13               	movwf	___flmul@a^0,c
  2224  000A8A  0E00               	movlw	0
  2225  000A8C  6E14               	movwf	(___flmul@a+1)^0,c
  2226  000A8E  0E20               	movlw	32
  2227  000A90  6E15               	movwf	(___flmul@a+2)^0,c
  2228  000A92  0E41               	movlw	65
  2229  000A94  6E16               	movwf	(___flmul@a+3)^0,c
  2230  000A96  EC8E  F00E         	call	___flmul	;wreg free
  2231  000A9A  C00F  F08E         	movff	?___flmul,efgtoa@u
  2232  000A9E  C010  F08F         	movff	?___flmul+1,efgtoa@u+1
  2233  000AA2  C011  F090         	movff	?___flmul+2,efgtoa@u+2
  2234  000AA6  C012  F091         	movff	?___flmul+3,efgtoa@u+3
  2235  000AAA                     
  2236                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 381:             
      +                          ++e;
  2237  000AAA  0100               	movlb	0	; () banked
  2238  000AAC  4B8A               	infsnz	efgtoa@e& (0+255),f,b
  2239  000AAE  2B8B               	incf	(efgtoa@e+1)& (0+255),f,b
  2240  000AB0                     l3384:
  2241                           
  2242                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 379:         whil
      +                          e (!(g < (u*10.0))) {
  2243  000AB0  C086  F028         	movff	efgtoa@g,___flge@ff1
  2244  000AB4  C087  F029         	movff	efgtoa@g+1,___flge@ff1+1
  2245  000AB8  C088  F02A         	movff	efgtoa@g+2,___flge@ff1+2
  2246  000ABC  C089  F02B         	movff	efgtoa@g+3,___flge@ff1+3
  2247  000AC0  0E00               	movlw	0
  2248  000AC2  6E13               	movwf	___flmul@a^0,c
  2249  000AC4  0E00               	movlw	0
  2250  000AC6  6E14               	movwf	(___flmul@a+1)^0,c
  2251  000AC8  0E20               	movlw	32
  2252  000ACA  6E15               	movwf	(___flmul@a+2)^0,c
  2253  000ACC  0E41               	movlw	65
  2254  000ACE  6E16               	movwf	(___flmul@a+3)^0,c
  2255  000AD0  C08E  F00F         	movff	efgtoa@u,___flmul@b
  2256  000AD4  C08F  F010         	movff	efgtoa@u+1,___flmul@b+1
  2257  000AD8  C090  F011         	movff	efgtoa@u+2,___flmul@b+2
  2258  000ADC  C091  F012         	movff	efgtoa@u+3,___flmul@b+3
  2259  000AE0  EC8E  F00E         	call	___flmul	;wreg free
  2260  000AE4  C00F  F02C         	movff	?___flmul,___flge@ff2
  2261  000AE8  C010  F02D         	movff	?___flmul+1,___flge@ff2+1
  2262  000AEC  C011  F02E         	movff	?___flmul+2,___flge@ff2+2
  2263  000AF0  C012  F02F         	movff	?___flmul+3,___flge@ff2+3
  2264  000AF4  EC81  F015         	call	___flge	;wreg free
  2265  000AF8  B0D8               	btfsc	status,0,c
  2266  000AFA  EF81  F005         	goto	u3881
  2267  000AFE  EF83  F005         	goto	u3880
  2268  000B02                     u3881:
  2269  000B02  EF3B  F005         	goto	l3380
  2270  000B06                     u3880:
  2271  000B06  EFA3  F005         	goto	l3390
  2272  000B0A                     l3386:
  2273                           
  2274                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 384:             
      +                          u = u/10.0;
  2275  000B0A  C08E  F001         	movff	efgtoa@u,___fldiv@b
  2276  000B0E  C08F  F002         	movff	efgtoa@u+1,___fldiv@b+1
  2277  000B12  C090  F003         	movff	efgtoa@u+2,___fldiv@b+2
  2278  000B16  C091  F004         	movff	efgtoa@u+3,___fldiv@b+3
  2279  000B1A  0E00               	movlw	0
  2280  000B1C  6E05               	movwf	___fldiv@a^0,c
  2281  000B1E  0E00               	movlw	0
  2282  000B20  6E06               	movwf	(___fldiv@a+1)^0,c
  2283  000B22  0E20               	movlw	32
  2284  000B24  6E07               	movwf	(___fldiv@a+2)^0,c
  2285  000B26  0E41               	movlw	65
  2286  000B28  6E08               	movwf	(___fldiv@a+3)^0,c
  2287  000B2A  ECA3  F010         	call	___fldiv	;wreg free
  2288  000B2E  C001  F08E         	movff	?___fldiv,efgtoa@u
  2289  000B32  C002  F08F         	movff	?___fldiv+1,efgtoa@u+1
  2290  000B36  C003  F090         	movff	?___fldiv+2,efgtoa@u+2
  2291  000B3A  C004  F091         	movff	?___fldiv+3,efgtoa@u+3
  2292  000B3E                     
  2293                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 385:             
      +                          --e;
  2294  000B3E  0100               	movlb	0	; () banked
  2295  000B40  078A               	decf	efgtoa@e& (0+255),f,b
  2296  000B42  A0D8               	btfss	status,0,c
  2297  000B44  078B               	decf	(efgtoa@e+1)& (0+255),f,b
  2298  000B46                     l3390:
  2299                           
  2300                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 383:         whil
      +                          e (g < u) {
  2301  000B46  C086  F028         	movff	efgtoa@g,___flge@ff1
  2302  000B4A  C087  F029         	movff	efgtoa@g+1,___flge@ff1+1
  2303  000B4E  C088  F02A         	movff	efgtoa@g+2,___flge@ff1+2
  2304  000B52  C089  F02B         	movff	efgtoa@g+3,___flge@ff1+3
  2305  000B56  C08E  F02C         	movff	efgtoa@u,___flge@ff2
  2306  000B5A  C08F  F02D         	movff	efgtoa@u+1,___flge@ff2+1
  2307  000B5E  C090  F02E         	movff	efgtoa@u+2,___flge@ff2+2
  2308  000B62  C091  F02F         	movff	efgtoa@u+3,___flge@ff2+3
  2309  000B66  EC81  F015         	call	___flge	;wreg free
  2310  000B6A  A0D8               	btfss	status,0,c
  2311  000B6C  EFBA  F005         	goto	u3891
  2312  000B70  EFBC  F005         	goto	u3890
  2313  000B74                     u3891:
  2314  000B74  EF85  F005         	goto	l3386
  2315  000B78                     u3890:
  2316  000B78                     l3392:
  2317                           
  2318                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 390:     mode = (
      +                          char)tolower((int)c);
  2319  000B78  C03A  F007         	movff	efgtoa@c,tolower@c
  2320  000B7C  6A08               	clrf	(tolower@c+1)^0,c
  2321  000B7E  EC60  F01A         	call	_tolower	;wreg free
  2322  000B82  5007               	movf	?_tolower^0,w,c
  2323  000B84  0100               	movlb	0	; () banked
  2324  000B86  6F7B               	movwf	efgtoa@mode& (0+255),b
  2325  000B88                     
  2326                           ; BSR set to: 0
  2327                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 391:     nmode = 
      +                          mode;
  2328  000B88  C07B  F07A         	movff	efgtoa@mode,efgtoa@nmode
  2329  000B8C                     
  2330                           ; BSR set to: 0
  2331                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 392:     if (mode
      +                           == 'g') {
  2332  000B8C  0E67               	movlw	103
  2333  000B8E  197B               	xorwf	efgtoa@mode& (0+255),w,b
  2334  000B90  A4D8               	btfss	status,2,c
  2335  000B92  EFCD  F005         	goto	u3901
  2336  000B96  EFCF  F005         	goto	u3900
  2337  000B9A                     u3901:
  2338  000B9A  EFF5  F005         	goto	l3406
  2339  000B9E                     u3900:
  2340  000B9E                     
  2341                           ; BSR set to: 0
  2342                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 393:   if (prec =
      +                          = 0) {
  2343  000B9E  505C               	movf	_prec^0,w,c
  2344  000BA0  105D               	iorwf	(_prec+1)^0,w,c
  2345  000BA2  A4D8               	btfss	status,2,c
  2346  000BA4  EFD6  F005         	goto	u3911
  2347  000BA8  EFD8  F005         	goto	u3910
  2348  000BAC                     u3911:
  2349  000BAC  EFDC  F005         	goto	l3402
  2350  000BB0                     u3910:
  2351  000BB0                     
  2352                           ; BSR set to: 0
  2353                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 394:    prec = 1;
  2354  000BB0  0E00               	movlw	0
  2355  000BB2  6E5D               	movwf	(_prec+1)^0,c
  2356  000BB4  0E01               	movlw	1
  2357  000BB6  6E5C               	movwf	_prec^0,c
  2358  000BB8                     l3402:
  2359                           
  2360                           ; BSR set to: 0
  2361                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 396:         p = 
      +                          (0 < prec) ? prec : 6;
  2362  000BB8  BE5D               	btfsc	(_prec+1)^0,7,c
  2363  000BBA  EFE9  F005         	goto	u3920
  2364  000BBE  505D               	movf	(_prec+1)^0,w,c
  2365  000BC0  E106               	bnz	u3921
  2366  000BC2  045C               	decf	_prec^0,w,c
  2367  000BC4  B0D8               	btfsc	status,0,c
  2368  000BC6  EFE7  F005         	goto	u3921
  2369  000BCA  EFE9  F005         	goto	u3920
  2370  000BCE                     u3921:
  2371  000BCE  EFEF  F005         	goto	l854
  2372  000BD2                     u3920:
  2373  000BD2                     l3404:
  2374                           
  2375                           ; BSR set to: 0
  2376  000BD2  0E00               	movlw	0
  2377  000BD4  6F77               	movwf	(efgtoa@p+1)& (0+255),b
  2378  000BD6  0E06               	movlw	6
  2379  000BD8  6F76               	movwf	efgtoa@p& (0+255),b
  2380  000BDA  EFFE  F005         	goto	l3412
  2381  000BDE                     l854:
  2382                           
  2383                           ; BSR set to: 0
  2384  000BDE  C05C  F076         	movff	_prec,efgtoa@p
  2385  000BE2  C05D  F077         	movff	_prec+1,efgtoa@p+1
  2386  000BE6  EFFE  F005         	goto	l3412
  2387  000BEA                     l3406:
  2388                           
  2389                           ; BSR set to: 0
  2390                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 398:         p = 
      +                          (prec < 0) ? 6 : prec;
  2391  000BEA  BE5D               	btfsc	(_prec+1)^0,7,c
  2392  000BEC  EFFA  F005         	goto	u3931
  2393  000BF0  EFFC  F005         	goto	u3930
  2394  000BF4                     u3931:
  2395  000BF4  EFE9  F005         	goto	l3404
  2396  000BF8                     u3930:
  2397  000BF8  EFEF  F005         	goto	l854
  2398  000BFC                     l3412:
  2399                           
  2400                           ; BSR set to: 0
  2401                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 402:     if (mode
      +                           == 'g') {
  2402  000BFC  0E67               	movlw	103
  2403  000BFE  197B               	xorwf	efgtoa@mode& (0+255),w,b
  2404  000C00  A4D8               	btfss	status,2,c
  2405  000C02  EF05  F006         	goto	u3941
  2406  000C06  EF07  F006         	goto	u3940
  2407  000C0A                     u3941:
  2408  000C0A  EF36  F006         	goto	l3422
  2409  000C0E                     u3940:
  2410  000C0E                     
  2411                           ; BSR set to: 0
  2412                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 403:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  2413  000C0E  AF8B               	btfss	(efgtoa@e+1)& (0+255),7,b
  2414  000C10  EF15  F006         	goto	u3950
  2415  000C14  0EFC               	movlw	252
  2416  000C16  5D8A               	subwf	efgtoa@e& (0+255),w,b
  2417  000C18  0EFF               	movlw	255
  2418  000C1A  598B               	subwfb	(efgtoa@e+1)& (0+255),w,b
  2419  000C1C  A0D8               	btfss	status,0,c
  2420  000C1E  EF13  F006         	goto	u3951
  2421  000C22  EF15  F006         	goto	u3950
  2422  000C26                     u3951:
  2423  000C26  EF34  F006         	goto	l3420
  2424  000C2A                     u3950:
  2425  000C2A                     
  2426                           ; BSR set to: 0
  2427  000C2A  0EFF               	movlw	255
  2428  000C2C  6E3B               	movwf	??_efgtoa^0,c
  2429  000C2E  0EFF               	movlw	255
  2430  000C30  6E3C               	movwf	(??_efgtoa+1)^0,c
  2431  000C32  C076  F03D         	movff	efgtoa@p,??_efgtoa+2
  2432  000C36  C077  F03E         	movff	efgtoa@p+1,??_efgtoa+3
  2433  000C3A  503B               	movf	??_efgtoa^0,w,c
  2434  000C3C  263D               	addwf	(??_efgtoa+2)^0,f,c
  2435  000C3E  503C               	movf	(??_efgtoa+1)^0,w,c
  2436  000C40  223E               	addwfc	(??_efgtoa+3)^0,f,c
  2437  000C42  518A               	movf	efgtoa@e& (0+255),w,b
  2438  000C44  5C3D               	subwf	(??_efgtoa+2)^0,w,c
  2439  000C46  503E               	movf	(??_efgtoa+3)^0,w,c
  2440  000C48  0A80               	xorlw	128
  2441  000C4A  6E3F               	movwf	(??_efgtoa+4)^0,c
  2442  000C4C  518B               	movf	(efgtoa@e+1)& (0+255),w,b
  2443  000C4E  0A80               	xorlw	128
  2444  000C50  583F               	subwfb	(??_efgtoa+4)^0,w,c
  2445  000C52  A0D8               	btfss	status,0,c
  2446  000C54  EF2E  F006         	goto	u3961
  2447  000C58  EF30  F006         	goto	u3960
  2448  000C5C                     u3961:
  2449  000C5C  EF34  F006         	goto	l3420
  2450  000C60                     u3960:
  2451  000C60                     
  2452                           ; BSR set to: 0
  2453                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 404:             
      +                          nmode = 'f';
  2454  000C60  0E66               	movlw	102
  2455  000C62  6F7A               	movwf	efgtoa@nmode& (0+255),b
  2456                           
  2457                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 405:         } el
      +                          se {
  2458  000C64  EF36  F006         	goto	l3422
  2459  000C68                     l3420:
  2460                           
  2461                           ; BSR set to: 0
  2462                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 406:             
      +                          nmode = 'e';
  2463  000C68  0E65               	movlw	101
  2464  000C6A  6F7A               	movwf	efgtoa@nmode& (0+255),b
  2465  000C6C                     l3422:
  2466                           
  2467                           ; BSR set to: 0
  2468                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 411:     m = p;
  2469  000C6C  C076  F06C         	movff	efgtoa@p,efgtoa@m
  2470  000C70  C077  F06D         	movff	efgtoa@p+1,efgtoa@m+1
  2471  000C74                     
  2472                           ; BSR set to: 0
  2473                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 412:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  2474  000C74  0E67               	movlw	103
  2475  000C76  197B               	xorwf	efgtoa@mode& (0+255),w,b
  2476  000C78  A4D8               	btfss	status,2,c
  2477  000C7A  EF41  F006         	goto	u3971
  2478  000C7E  EF43  F006         	goto	u3970
  2479  000C82                     u3971:
  2480  000C82  EF53  F006         	goto	l3430
  2481  000C86                     u3970:
  2482  000C86                     
  2483                           ; BSR set to: 0
  2484  000C86  0E66               	movlw	102
  2485  000C88  197A               	xorwf	efgtoa@nmode& (0+255),w,b
  2486  000C8A  A4D8               	btfss	status,2,c
  2487  000C8C  EF4A  F006         	goto	u3981
  2488  000C90  EF4C  F006         	goto	u3980
  2489  000C94                     u3981:
  2490  000C94  EF55  F006         	goto	l3432
  2491  000C98                     u3980:
  2492  000C98                     
  2493                           ; BSR set to: 0
  2494  000C98  BF8B               	btfsc	(efgtoa@e+1)& (0+255),7,b
  2495  000C9A  EF53  F006         	goto	u3990
  2496  000C9E  EF51  F006         	goto	u3991
  2497  000CA2                     u3991:
  2498  000CA2  EF55  F006         	goto	l3432
  2499  000CA6                     u3990:
  2500  000CA6                     l3430:
  2501                           
  2502                           ; BSR set to: 0
  2503                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 413:         ++m;
  2504  000CA6  4B6C               	infsnz	efgtoa@m& (0+255),f,b
  2505  000CA8  2B6D               	incf	(efgtoa@m+1)& (0+255),f,b
  2506  000CAA                     l3432:
  2507                           
  2508                           ; BSR set to: 0
  2509                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 417:     if (nmod
      +                          e == 'f') {
  2510  000CAA  0E66               	movlw	102
  2511  000CAC  197A               	xorwf	efgtoa@nmode& (0+255),w,b
  2512  000CAE  A4D8               	btfss	status,2,c
  2513  000CB0  EF5C  F006         	goto	u4001
  2514  000CB4  EF5E  F006         	goto	u4000
  2515  000CB8                     u4001:
  2516  000CB8  EF7E  F006         	goto	l3442
  2517  000CBC                     u4000:
  2518  000CBC                     
  2519                           ; BSR set to: 0
  2520                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 418:         if (
      +                          e < 0) {
  2521  000CBC  BF8B               	btfsc	(efgtoa@e+1)& (0+255),7,b
  2522  000CBE  EF65  F006         	goto	u4010
  2523  000CC2  EF63  F006         	goto	u4011
  2524  000CC6                     u4011:
  2525  000CC6  EF71  F006         	goto	l3438
  2526  000CCA                     u4010:
  2527  000CCA                     
  2528                           ; BSR set to: 0
  2529                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 419:             
      +                          u = 1.0;
  2530  000CCA  0E00               	movlw	0
  2531  000CCC  6F8E               	movwf	efgtoa@u& (0+255),b
  2532  000CCE  0E00               	movlw	0
  2533  000CD0  6F8F               	movwf	(efgtoa@u+1)& (0+255),b
  2534  000CD2  0E80               	movlw	128
  2535  000CD4  6F90               	movwf	(efgtoa@u+2)& (0+255),b
  2536  000CD6  0E3F               	movlw	63
  2537  000CD8  6F91               	movwf	(efgtoa@u+3)& (0+255),b
  2538                           
  2539                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 420:             
      +                          e = 0;
  2540  000CDA  0E00               	movlw	0
  2541  000CDC  6F8B               	movwf	(efgtoa@e+1)& (0+255),b
  2542  000CDE  0E00               	movlw	0
  2543  000CE0  6F8A               	movwf	efgtoa@e& (0+255),b
  2544  000CE2                     l3438:
  2545                           
  2546                           ; BSR set to: 0
  2547                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 422:         if (
      +                          !(mode == 'g')) {
  2548  000CE2  0E67               	movlw	103
  2549  000CE4  197B               	xorwf	efgtoa@mode& (0+255),w,b
  2550  000CE6  B4D8               	btfsc	status,2,c
  2551  000CE8  EF78  F006         	goto	u4021
  2552  000CEC  EF7A  F006         	goto	u4020
  2553  000CF0                     u4021:
  2554  000CF0  EF7E  F006         	goto	l3442
  2555  000CF4                     u4020:
  2556  000CF4                     
  2557                           ; BSR set to: 0
  2558                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 423:             
      +                          m += e;
  2559  000CF4  518A               	movf	efgtoa@e& (0+255),w,b
  2560  000CF6  276C               	addwf	efgtoa@m& (0+255),f,b
  2561  000CF8  518B               	movf	(efgtoa@e+1)& (0+255),w,b
  2562  000CFA  236D               	addwfc	(efgtoa@m+1)& (0+255),f,b
  2563  000CFC                     l3442:
  2564                           
  2565                           ; BSR set to: 0
  2566                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 428:     i = 0;
  2567  000CFC  0E00               	movlw	0
  2568  000CFE  6F85               	movwf	(efgtoa@i+1)& (0+255),b
  2569  000D00  0E00               	movlw	0
  2570  000D02  6F84               	movwf	efgtoa@i& (0+255),b
  2571  000D04                     
  2572                           ; BSR set to: 0
  2573                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 429:     h = g;
  2574  000D04  C086  F07C         	movff	efgtoa@g,efgtoa@h
  2575  000D08  C087  F07D         	movff	efgtoa@g+1,efgtoa@h+1
  2576  000D0C  C088  F07E         	movff	efgtoa@g+2,efgtoa@h+2
  2577  000D10  C089  F07F         	movff	efgtoa@g+3,efgtoa@h+3
  2578  000D14                     
  2579                           ; BSR set to: 0
  2580                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 430:     ou = u;
  2581  000D14  C08E  F06E         	movff	efgtoa@u,efgtoa@ou
  2582  000D18  C08F  F06F         	movff	efgtoa@u+1,efgtoa@ou+1
  2583  000D1C  C090  F070         	movff	efgtoa@u+2,efgtoa@ou+2
  2584  000D20  C091  F071         	movff	efgtoa@u+3,efgtoa@ou+3
  2585                           
  2586                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  2587  000D24  EF0F  F007         	goto	l3456
  2588  000D28                     l3448:
  2589                           
  2590                           ; BSR set to: 0
  2591                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 432:         l = 
      +                          floorf(h/u);
  2592  000D28  C07C  F001         	movff	efgtoa@h,___fldiv@b
  2593  000D2C  C07D  F002         	movff	efgtoa@h+1,___fldiv@b+1
  2594  000D30  C07E  F003         	movff	efgtoa@h+2,___fldiv@b+2
  2595  000D34  C07F  F004         	movff	efgtoa@h+3,___fldiv@b+3
  2596  000D38  C08E  F005         	movff	efgtoa@u,___fldiv@a
  2597  000D3C  C08F  F006         	movff	efgtoa@u+1,___fldiv@a+1
  2598  000D40  C090  F007         	movff	efgtoa@u+2,___fldiv@a+2
  2599  000D44  C091  F008         	movff	efgtoa@u+3,___fldiv@a+3
  2600  000D48  ECA3  F010         	call	___fldiv	;wreg free
  2601  000D4C  C001  F01A         	movff	?___fldiv,floorf@x
  2602  000D50  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  2603  000D54  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  2604  000D58  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  2605  000D5C  EC70  F012         	call	_floorf	;wreg free
  2606  000D60  C01A  F080         	movff	?_floorf,efgtoa@l
  2607  000D64  C01B  F081         	movff	?_floorf+1,efgtoa@l+1
  2608  000D68  C01C  F082         	movff	?_floorf+2,efgtoa@l+2
  2609  000D6C  C01D  F083         	movff	?_floorf+3,efgtoa@l+3
  2610                           
  2611                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 433:         d = 
      +                          (int)l;
  2612  000D70  C080  F001         	movff	efgtoa@l,___fltol@f1
  2613  000D74  C081  F002         	movff	efgtoa@l+1,___fltol@f1+1
  2614  000D78  C082  F003         	movff	efgtoa@l+2,___fltol@f1+2
  2615  000D7C  C083  F004         	movff	efgtoa@l+3,___fltol@f1+3
  2616  000D80  ECFE  F014         	call	___fltol	;wreg free
  2617  000D84  C001  F072         	movff	?___fltol,efgtoa@d
  2618  000D88  C002  F073         	movff	?___fltol+1,efgtoa@d+1
  2619  000D8C                     
  2620                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 434:         h -=
      +                           l*u;
  2621  000D8C  C07C  F028         	movff	efgtoa@h,___flsub@b
  2622  000D90  C07D  F029         	movff	efgtoa@h+1,___flsub@b+1
  2623  000D94  C07E  F02A         	movff	efgtoa@h+2,___flsub@b+2
  2624  000D98  C07F  F02B         	movff	efgtoa@h+3,___flsub@b+3
  2625  000D9C  C08E  F013         	movff	efgtoa@u,___flmul@a
  2626  000DA0  C08F  F014         	movff	efgtoa@u+1,___flmul@a+1
  2627  000DA4  C090  F015         	movff	efgtoa@u+2,___flmul@a+2
  2628  000DA8  C091  F016         	movff	efgtoa@u+3,___flmul@a+3
  2629  000DAC  C080  F00F         	movff	efgtoa@l,___flmul@b
  2630  000DB0  C081  F010         	movff	efgtoa@l+1,___flmul@b+1
  2631  000DB4  C082  F011         	movff	efgtoa@l+2,___flmul@b+2
  2632  000DB8  C083  F012         	movff	efgtoa@l+3,___flmul@b+3
  2633  000DBC  EC8E  F00E         	call	___flmul	;wreg free
  2634  000DC0  C00F  F02C         	movff	?___flmul,___flsub@a
  2635  000DC4  C010  F02D         	movff	?___flmul+1,___flsub@a+1
  2636  000DC8  C011  F02E         	movff	?___flmul+2,___flsub@a+2
  2637  000DCC  C012  F02F         	movff	?___flmul+3,___flsub@a+3
  2638  000DD0  EC83  F01A         	call	___flsub	;wreg free
  2639  000DD4  C028  F07C         	movff	?___flsub,efgtoa@h
  2640  000DD8  C029  F07D         	movff	?___flsub+1,efgtoa@h+1
  2641  000DDC  C02A  F07E         	movff	?___flsub+2,efgtoa@h+2
  2642  000DE0  C02B  F07F         	movff	?___flsub+3,efgtoa@h+3
  2643  000DE4                     
  2644                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 435:         u = 
      +                          u/10.0;
  2645  000DE4  C08E  F001         	movff	efgtoa@u,___fldiv@b
  2646  000DE8  C08F  F002         	movff	efgtoa@u+1,___fldiv@b+1
  2647  000DEC  C090  F003         	movff	efgtoa@u+2,___fldiv@b+2
  2648  000DF0  C091  F004         	movff	efgtoa@u+3,___fldiv@b+3
  2649  000DF4  0E00               	movlw	0
  2650  000DF6  6E05               	movwf	___fldiv@a^0,c
  2651  000DF8  0E00               	movlw	0
  2652  000DFA  6E06               	movwf	(___fldiv@a+1)^0,c
  2653  000DFC  0E20               	movlw	32
  2654  000DFE  6E07               	movwf	(___fldiv@a+2)^0,c
  2655  000E00  0E41               	movlw	65
  2656  000E02  6E08               	movwf	(___fldiv@a+3)^0,c
  2657  000E04  ECA3  F010         	call	___fldiv	;wreg free
  2658  000E08  C001  F08E         	movff	?___fldiv,efgtoa@u
  2659  000E0C  C002  F08F         	movff	?___fldiv+1,efgtoa@u+1
  2660  000E10  C003  F090         	movff	?___fldiv+2,efgtoa@u+2
  2661  000E14  C004  F091         	movff	?___fldiv+3,efgtoa@u+3
  2662  000E18                     
  2663                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 436:         ++i;
  2664  000E18  0100               	movlb	0	; () banked
  2665  000E1A  4B84               	infsnz	efgtoa@i& (0+255),f,b
  2666  000E1C  2B85               	incf	(efgtoa@i+1)& (0+255),f,b
  2667  000E1E                     l3456:
  2668                           
  2669                           ; BSR set to: 0
  2670                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  2671  000E1E  516C               	movf	efgtoa@m& (0+255),w,b
  2672  000E20  5D84               	subwf	efgtoa@i& (0+255),w,b
  2673  000E22  5185               	movf	(efgtoa@i+1)& (0+255),w,b
  2674  000E24  0A80               	xorlw	128
  2675  000E26  6E3B               	movwf	??_efgtoa^0,c
  2676  000E28  516D               	movf	(efgtoa@m+1)& (0+255),w,b
  2677  000E2A  0A80               	xorlw	128
  2678  000E2C  583B               	subwfb	??_efgtoa^0,w,c
  2679  000E2E  A0D8               	btfss	status,0,c
  2680  000E30  EF1C  F007         	goto	u4031
  2681  000E34  EF1E  F007         	goto	u4030
  2682  000E38                     u4031:
  2683  000E38  EF94  F006         	goto	l3448
  2684  000E3C                     u4030:
  2685  000E3C                     
  2686                           ; BSR set to: 0
  2687                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 440:     l = u*5.
      +                          0;
  2688  000E3C  C08E  F00F         	movff	efgtoa@u,___flmul@b
  2689  000E40  C08F  F010         	movff	efgtoa@u+1,___flmul@b+1
  2690  000E44  C090  F011         	movff	efgtoa@u+2,___flmul@b+2
  2691  000E48  C091  F012         	movff	efgtoa@u+3,___flmul@b+3
  2692  000E4C  0E00               	movlw	0
  2693  000E4E  6E13               	movwf	___flmul@a^0,c
  2694  000E50  0E00               	movlw	0
  2695  000E52  6E14               	movwf	(___flmul@a+1)^0,c
  2696  000E54  0EA0               	movlw	160
  2697  000E56  6E15               	movwf	(___flmul@a+2)^0,c
  2698  000E58  0E40               	movlw	64
  2699  000E5A  6E16               	movwf	(___flmul@a+3)^0,c
  2700  000E5C  EC8E  F00E         	call	___flmul	;wreg free
  2701  000E60  C00F  F080         	movff	?___flmul,efgtoa@l
  2702  000E64  C010  F081         	movff	?___flmul+1,efgtoa@l+1
  2703  000E68  C011  F082         	movff	?___flmul+2,efgtoa@l+2
  2704  000E6C  C012  F083         	movff	?___flmul+3,efgtoa@l+3
  2705  000E70                     
  2706                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 441:     if (h < 
      +                          l) {
  2707  000E70  C07C  F028         	movff	efgtoa@h,___flge@ff1
  2708  000E74  C07D  F029         	movff	efgtoa@h+1,___flge@ff1+1
  2709  000E78  C07E  F02A         	movff	efgtoa@h+2,___flge@ff1+2
  2710  000E7C  C07F  F02B         	movff	efgtoa@h+3,___flge@ff1+3
  2711  000E80  C080  F02C         	movff	efgtoa@l,___flge@ff2
  2712  000E84  C081  F02D         	movff	efgtoa@l+1,___flge@ff2+1
  2713  000E88  C082  F02E         	movff	efgtoa@l+2,___flge@ff2+2
  2714  000E8C  C083  F02F         	movff	efgtoa@l+3,___flge@ff2+3
  2715  000E90  EC81  F015         	call	___flge	;wreg free
  2716  000E94  B0D8               	btfsc	status,0,c
  2717  000E96  EF4F  F007         	goto	u4041
  2718  000E9A  EF51  F007         	goto	u4040
  2719  000E9E                     u4041:
  2720  000E9E  EF5C  F007         	goto	l3464
  2721  000EA2                     u4040:
  2722  000EA2                     
  2723                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 442:         l = 
      +                          0.0;
  2724  000EA2  0E00               	movlw	0
  2725  000EA4  0100               	movlb	0	; () banked
  2726  000EA6  6F80               	movwf	efgtoa@l& (0+255),b
  2727  000EA8  0E00               	movlw	0
  2728  000EAA  6F81               	movwf	(efgtoa@l+1)& (0+255),b
  2729  000EAC  0E00               	movlw	0
  2730  000EAE  6F82               	movwf	(efgtoa@l+2)& (0+255),b
  2731  000EB0  0E00               	movlw	0
  2732  000EB2  6F83               	movwf	(efgtoa@l+3)& (0+255),b
  2733                           
  2734                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 443:     } else {
  2735  000EB4  EF85  F007         	goto	l3470
  2736  000EB8                     l3464:
  2737                           
  2738                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 445:         if (
      +                          (h == l) && !(d % 2)) {
  2739  000EB8  C07C  F001         	movff	efgtoa@h,___fleq@ff1
  2740  000EBC  C07D  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  2741  000EC0  C07E  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  2742  000EC4  C07F  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  2743  000EC8  C080  F005         	movff	efgtoa@l,___fleq@ff2
  2744  000ECC  C081  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  2745  000ED0  C082  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  2746  000ED4  C083  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  2747  000ED8  EC6D  F018         	call	___fleq	;wreg free
  2748  000EDC  A0D8               	btfss	status,0,c
  2749  000EDE  EF73  F007         	goto	u4051
  2750  000EE2  EF75  F007         	goto	u4050
  2751  000EE6                     u4051:
  2752  000EE6  EF85  F007         	goto	l3470
  2753  000EEA                     u4050:
  2754  000EEA  0100               	movlb	0	; () banked
  2755  000EEC  B172               	btfsc	efgtoa@d& (0+255),0,b
  2756  000EEE  EF7B  F007         	goto	u4061
  2757  000EF2  EF7D  F007         	goto	u4060
  2758  000EF6                     u4061:
  2759  000EF6  EF85  F007         	goto	l3470
  2760  000EFA                     u4060:
  2761  000EFA                     
  2762                           ; BSR set to: 0
  2763                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 446:             
      +                          l = 0.0;
  2764  000EFA  0E00               	movlw	0
  2765  000EFC  6F80               	movwf	efgtoa@l& (0+255),b
  2766  000EFE  0E00               	movlw	0
  2767  000F00  6F81               	movwf	(efgtoa@l+1)& (0+255),b
  2768  000F02  0E00               	movlw	0
  2769  000F04  6F82               	movwf	(efgtoa@l+2)& (0+255),b
  2770  000F06  0E00               	movlw	0
  2771  000F08  6F83               	movwf	(efgtoa@l+3)& (0+255),b
  2772  000F0A                     l3470:
  2773                           
  2774                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 451:     h = g + 
      +                          l;
  2775  000F0A  C086  F001         	movff	efgtoa@g,___fladd@b
  2776  000F0E  C087  F002         	movff	efgtoa@g+1,___fladd@b+1
  2777  000F12  C088  F003         	movff	efgtoa@g+2,___fladd@b+2
  2778  000F16  C089  F004         	movff	efgtoa@g+3,___fladd@b+3
  2779  000F1A  C080  F005         	movff	efgtoa@l,___fladd@a
  2780  000F1E  C081  F006         	movff	efgtoa@l+1,___fladd@a+1
  2781  000F22  C082  F007         	movff	efgtoa@l+2,___fladd@a+2
  2782  000F26  C083  F008         	movff	efgtoa@l+3,___fladd@a+3
  2783  000F2A  EC19  F00A         	call	___fladd	;wreg free
  2784  000F2E  C001  F07C         	movff	?___fladd,efgtoa@h
  2785  000F32  C002  F07D         	movff	?___fladd+1,efgtoa@h+1
  2786  000F36  C003  F07E         	movff	?___fladd+2,efgtoa@h+2
  2787  000F3A  C004  F07F         	movff	?___fladd+3,efgtoa@h+3
  2788  000F3E                     
  2789                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 453:  if (h >= (o
      +                          u*10.0)) {
  2790  000F3E  C07C  F028         	movff	efgtoa@h,___flge@ff1
  2791  000F42  C07D  F029         	movff	efgtoa@h+1,___flge@ff1+1
  2792  000F46  C07E  F02A         	movff	efgtoa@h+2,___flge@ff1+2
  2793  000F4A  C07F  F02B         	movff	efgtoa@h+3,___flge@ff1+3
  2794  000F4E  0E00               	movlw	0
  2795  000F50  6E13               	movwf	___flmul@a^0,c
  2796  000F52  0E00               	movlw	0
  2797  000F54  6E14               	movwf	(___flmul@a+1)^0,c
  2798  000F56  0E20               	movlw	32
  2799  000F58  6E15               	movwf	(___flmul@a+2)^0,c
  2800  000F5A  0E41               	movlw	65
  2801  000F5C  6E16               	movwf	(___flmul@a+3)^0,c
  2802  000F5E  C06E  F00F         	movff	efgtoa@ou,___flmul@b
  2803  000F62  C06F  F010         	movff	efgtoa@ou+1,___flmul@b+1
  2804  000F66  C070  F011         	movff	efgtoa@ou+2,___flmul@b+2
  2805  000F6A  C071  F012         	movff	efgtoa@ou+3,___flmul@b+3
  2806  000F6E  EC8E  F00E         	call	___flmul	;wreg free
  2807  000F72  C00F  F02C         	movff	?___flmul,___flge@ff2
  2808  000F76  C010  F02D         	movff	?___flmul+1,___flge@ff2+1
  2809  000F7A  C011  F02E         	movff	?___flmul+2,___flge@ff2+2
  2810  000F7E  C012  F02F         	movff	?___flmul+3,___flge@ff2+3
  2811  000F82  EC81  F015         	call	___flge	;wreg free
  2812  000F86  A0D8               	btfss	status,0,c
  2813  000F88  EFC8  F007         	goto	u4071
  2814  000F8C  EFCA  F007         	goto	u4070
  2815  000F90                     u4071:
  2816  000F90  EFF3  F007         	goto	l3482
  2817  000F94                     u4070:
  2818  000F94                     
  2819                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 454:   e++;
  2820  000F94  0100               	movlb	0	; () banked
  2821  000F96  4B8A               	infsnz	efgtoa@e& (0+255),f,b
  2822  000F98  2B8B               	incf	(efgtoa@e+1)& (0+255),f,b
  2823  000F9A                     
  2824                           ; BSR set to: 0
  2825                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 455:   ou *= 10.0
      +                          ;
  2826  000F9A  C06E  F00F         	movff	efgtoa@ou,___flmul@b
  2827  000F9E  C06F  F010         	movff	efgtoa@ou+1,___flmul@b+1
  2828  000FA2  C070  F011         	movff	efgtoa@ou+2,___flmul@b+2
  2829  000FA6  C071  F012         	movff	efgtoa@ou+3,___flmul@b+3
  2830  000FAA  0E00               	movlw	0
  2831  000FAC  6E13               	movwf	___flmul@a^0,c
  2832  000FAE  0E00               	movlw	0
  2833  000FB0  6E14               	movwf	(___flmul@a+1)^0,c
  2834  000FB2  0E20               	movlw	32
  2835  000FB4  6E15               	movwf	(___flmul@a+2)^0,c
  2836  000FB6  0E41               	movlw	65
  2837  000FB8  6E16               	movwf	(___flmul@a+3)^0,c
  2838  000FBA  EC8E  F00E         	call	___flmul	;wreg free
  2839  000FBE  C00F  F06E         	movff	?___flmul,efgtoa@ou
  2840  000FC2  C010  F06F         	movff	?___flmul+1,efgtoa@ou+1
  2841  000FC6  C011  F070         	movff	?___flmul+2,efgtoa@ou+2
  2842  000FCA  C012  F071         	movff	?___flmul+3,efgtoa@ou+3
  2843  000FCE                     
  2844                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 456:   if (nmode 
      +                          == 'f') {
  2845  000FCE  0E66               	movlw	102
  2846  000FD0  0100               	movlb	0	; () banked
  2847  000FD2  197A               	xorwf	efgtoa@nmode& (0+255),w,b
  2848  000FD4  A4D8               	btfss	status,2,c
  2849  000FD6  EFEF  F007         	goto	u4081
  2850  000FDA  EFF1  F007         	goto	u4080
  2851  000FDE                     u4081:
  2852  000FDE  EFF3  F007         	goto	l3482
  2853  000FE2                     u4080:
  2854  000FE2                     
  2855                           ; BSR set to: 0
  2856                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 458:    m++;
  2857  000FE2  4B6C               	infsnz	efgtoa@m& (0+255),f,b
  2858  000FE4  2B6D               	incf	(efgtoa@m+1)& (0+255),f,b
  2859  000FE6                     l3482:
  2860                           
  2861                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 463:     u = ou;
  2862  000FE6  C06E  F08E         	movff	efgtoa@ou,efgtoa@u
  2863  000FEA  C06F  F08F         	movff	efgtoa@ou+1,efgtoa@u+1
  2864  000FEE  C070  F090         	movff	efgtoa@ou+2,efgtoa@u+2
  2865  000FF2  C071  F091         	movff	efgtoa@ou+3,efgtoa@u+3
  2866  000FF6                     
  2867                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 464:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  2868  000FF6  0E65               	movlw	101
  2869  000FF8  0100               	movlb	0	; () banked
  2870  000FFA  197A               	xorwf	efgtoa@nmode& (0+255),w,b
  2871  000FFC  B4D8               	btfsc	status,2,c
  2872  000FFE  EF03  F008         	goto	u4091
  2873  001002  EF05  F008         	goto	u4090
  2874  001006                     u4091:
  2875  001006  EF0B  F008         	goto	l3488
  2876  00100A                     u4090:
  2877  00100A                     
  2878                           ; BSR set to: 0
  2879  00100A  C08A  F06A         	movff	efgtoa@e,efgtoa@ne
  2880  00100E  C08B  F06B         	movff	efgtoa@e+1,efgtoa@ne+1
  2881  001012  EF0F  F008         	goto	l882
  2882  001016                     l3488:
  2883                           
  2884                           ; BSR set to: 0
  2885  001016  0E00               	movlw	0
  2886  001018  6F6B               	movwf	(efgtoa@ne+1)& (0+255),b
  2887  00101A  0E00               	movlw	0
  2888  00101C  6F6A               	movwf	efgtoa@ne& (0+255),b
  2889  00101E                     l882:
  2890                           
  2891                           ; BSR set to: 0
  2892                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 465:     pp = 0;
  2893  00101E  0E00               	movlw	0
  2894  001020  6F69               	movwf	(efgtoa@pp+1)& (0+255),b
  2895  001022  0E00               	movlw	0
  2896  001024  6F68               	movwf	efgtoa@pp& (0+255),b
  2897                           
  2898                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 466:     t = 0;
  2899  001026  0E00               	movlw	0
  2900  001028  6F67               	movwf	(efgtoa@t+1)& (0+255),b
  2901  00102A  0E00               	movlw	0
  2902  00102C  6F66               	movwf	efgtoa@t& (0+255),b
  2903                           
  2904                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 467:     i = 0;
  2905  00102E  0E00               	movlw	0
  2906  001030  6F85               	movwf	(efgtoa@i+1)& (0+255),b
  2907  001032  0E00               	movlw	0
  2908  001034  6F84               	movwf	efgtoa@i& (0+255),b
  2909                           
  2910                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  2911  001036  EF0B  F009         	goto	l3538
  2912  00103A                     l3490:
  2913                           
  2914                           ; BSR set to: 0
  2915                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 469:         l = 
      +                          floorf(h/u);
  2916  00103A  C07C  F001         	movff	efgtoa@h,___fldiv@b
  2917  00103E  C07D  F002         	movff	efgtoa@h+1,___fldiv@b+1
  2918  001042  C07E  F003         	movff	efgtoa@h+2,___fldiv@b+2
  2919  001046  C07F  F004         	movff	efgtoa@h+3,___fldiv@b+3
  2920  00104A  C08E  F005         	movff	efgtoa@u,___fldiv@a
  2921  00104E  C08F  F006         	movff	efgtoa@u+1,___fldiv@a+1
  2922  001052  C090  F007         	movff	efgtoa@u+2,___fldiv@a+2
  2923  001056  C091  F008         	movff	efgtoa@u+3,___fldiv@a+3
  2924  00105A  ECA3  F010         	call	___fldiv	;wreg free
  2925  00105E  C001  F01A         	movff	?___fldiv,floorf@x
  2926  001062  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  2927  001066  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  2928  00106A  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  2929  00106E  EC70  F012         	call	_floorf	;wreg free
  2930  001072  C01A  F080         	movff	?_floorf,efgtoa@l
  2931  001076  C01B  F081         	movff	?_floorf+1,efgtoa@l+1
  2932  00107A  C01C  F082         	movff	?_floorf+2,efgtoa@l+2
  2933  00107E  C01D  F083         	movff	?_floorf+3,efgtoa@l+3
  2934                           
  2935                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 470:         d = 
      +                          (int)l;
  2936  001082  C080  F001         	movff	efgtoa@l,___fltol@f1
  2937  001086  C081  F002         	movff	efgtoa@l+1,___fltol@f1+1
  2938  00108A  C082  F003         	movff	efgtoa@l+2,___fltol@f1+2
  2939  00108E  C083  F004         	movff	efgtoa@l+3,___fltol@f1+3
  2940  001092  ECFE  F014         	call	___fltol	;wreg free
  2941  001096  C001  F072         	movff	?___fltol,efgtoa@d
  2942  00109A  C002  F073         	movff	?___fltol+1,efgtoa@d+1
  2943  00109E                     
  2944                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 471:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  2945  00109E  B85E               	btfsc	_flags^0,4,c
  2946  0010A0  EF54  F008         	goto	u4101
  2947  0010A4  EF56  F008         	goto	u4100
  2948  0010A8                     u4101:
  2949  0010A8  EF74  F008         	goto	l3502
  2950  0010AC                     u4100:
  2951  0010AC  0100               	movlb	0	; () banked
  2952  0010AE  5172               	movf	efgtoa@d& (0+255),w,b
  2953  0010B0  1173               	iorwf	(efgtoa@d+1)& (0+255),w,b
  2954  0010B2  A4D8               	btfss	status,2,c
  2955  0010B4  EF5E  F008         	goto	u4111
  2956  0010B8  EF60  F008         	goto	u4110
  2957  0010BC                     u4111:
  2958  0010BC  EF74  F008         	goto	l3502
  2959  0010C0                     u4110:
  2960  0010C0                     
  2961                           ; BSR set to: 0
  2962  0010C0  0E67               	movlw	103
  2963  0010C2  197B               	xorwf	efgtoa@mode& (0+255),w,b
  2964  0010C4  A4D8               	btfss	status,2,c
  2965  0010C6  EF67  F008         	goto	u4121
  2966  0010CA  EF69  F008         	goto	u4120
  2967  0010CE                     u4121:
  2968  0010CE  EF74  F008         	goto	l3502
  2969  0010D2                     u4120:
  2970  0010D2                     
  2971                           ; BSR set to: 0
  2972  0010D2  BF6B               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  2973  0010D4  EF70  F008         	goto	u4130
  2974  0010D8  EF6E  F008         	goto	u4131
  2975  0010DC                     u4131:
  2976  0010DC  EF74  F008         	goto	l3502
  2977  0010E0                     u4130:
  2978  0010E0                     
  2979                           ; BSR set to: 0
  2980                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 472:             
      +                          ++t;
  2981  0010E0  4B66               	infsnz	efgtoa@t& (0+255),f,b
  2982  0010E2  2B67               	incf	(efgtoa@t+1)& (0+255),f,b
  2983                           
  2984                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 473:         } el
      +                          se {
  2985  0010E4  EFBF  F008         	goto	l3530
  2986  0010E8                     l3502:
  2987                           
  2988                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 474:             
      +                          if (!pp && (ne < 0)) {
  2989  0010E8  0100               	movlb	0	; () banked
  2990  0010EA  5168               	movf	efgtoa@pp& (0+255),w,b
  2991  0010EC  1169               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  2992  0010EE  A4D8               	btfss	status,2,c
  2993  0010F0  EF7C  F008         	goto	u4141
  2994  0010F4  EF7E  F008         	goto	u4140
  2995  0010F8                     u4141:
  2996  0010F8  EFA8  F008         	goto	l3522
  2997  0010FC                     u4140:
  2998  0010FC                     
  2999                           ; BSR set to: 0
  3000  0010FC  BF6B               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3001  0010FE  EF85  F008         	goto	u4150
  3002  001102  EF83  F008         	goto	u4151
  3003  001106                     u4151:
  3004  001106  EFA8  F008         	goto	l3522
  3005  00110A                     u4150:
  3006  00110A                     
  3007                           ; BSR set to: 0
  3008                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 475:             
      +                              dbuf[n++] = '.';
  3009  00110A  0E00               	movlw	low _dbuf
  3010  00110C  258C               	addwf	efgtoa@n& (0+255),w,b
  3011  00110E  6ED9               	movwf	fsr2l,c
  3012  001110  0E01               	movlw	high _dbuf
  3013  001112  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3014  001114  6EDA               	movwf	fsr2h,c
  3015  001116  0E2E               	movlw	46
  3016  001118  6EDF               	movwf	indf2,c
  3017  00111A                     
  3018                           ; BSR set to: 0
  3019  00111A  4B8C               	infsnz	efgtoa@n& (0+255),f,b
  3020  00111C  2B8D               	incf	(efgtoa@n+1)& (0+255),f,b
  3021  00111E                     
  3022                           ; BSR set to: 0
  3023                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 476:             
      +                              --w;
  3024  00111E  0778               	decf	efgtoa@w& (0+255),f,b
  3025  001120  A0D8               	btfss	status,0,c
  3026  001122  0779               	decf	(efgtoa@w+1)& (0+255),f,b
  3027  001124                     
  3028                           ; BSR set to: 0
  3029                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 477:             
      +                              pp = 1;
  3030  001124  0E00               	movlw	0
  3031  001126  6F69               	movwf	(efgtoa@pp+1)& (0+255),b
  3032  001128  0E01               	movlw	1
  3033  00112A  6F68               	movwf	efgtoa@pp& (0+255),b
  3034  00112C  EFA8  F008         	goto	l3522
  3035  001130                     l3514:
  3036                           
  3037                           ; BSR set to: 0
  3038                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 480:             
      +                              dbuf[n++] = '0';
  3039  001130  0E00               	movlw	low _dbuf
  3040  001132  258C               	addwf	efgtoa@n& (0+255),w,b
  3041  001134  6ED9               	movwf	fsr2l,c
  3042  001136  0E01               	movlw	high _dbuf
  3043  001138  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3044  00113A  6EDA               	movwf	fsr2h,c
  3045  00113C  0E30               	movlw	48
  3046  00113E  6EDF               	movwf	indf2,c
  3047  001140                     
  3048                           ; BSR set to: 0
  3049  001140  4B8C               	infsnz	efgtoa@n& (0+255),f,b
  3050  001142  2B8D               	incf	(efgtoa@n+1)& (0+255),f,b
  3051  001144                     
  3052                           ; BSR set to: 0
  3053                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 481:             
      +                              --w;
  3054  001144  0778               	decf	efgtoa@w& (0+255),f,b
  3055  001146  A0D8               	btfss	status,0,c
  3056  001148  0779               	decf	(efgtoa@w+1)& (0+255),f,b
  3057  00114A                     
  3058                           ; BSR set to: 0
  3059                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 482:             
      +                              --t;
  3060  00114A  0766               	decf	efgtoa@t& (0+255),f,b
  3061  00114C  A0D8               	btfss	status,0,c
  3062  00114E  0767               	decf	(efgtoa@t+1)& (0+255),f,b
  3063  001150                     l3522:
  3064                           
  3065                           ; BSR set to: 0
  3066                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 479:             
      +                          while (t) {
  3067  001150  5166               	movf	efgtoa@t& (0+255),w,b
  3068  001152  1167               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3069  001154  A4D8               	btfss	status,2,c
  3070  001156  EFAF  F008         	goto	u4161
  3071  00115A  EFB1  F008         	goto	u4160
  3072  00115E                     u4161:
  3073  00115E  EF98  F008         	goto	l3514
  3074  001162                     u4160:
  3075  001162                     
  3076                           ; BSR set to: 0
  3077                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 484:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  3078  001162  0E00               	movlw	low _dbuf
  3079  001164  258C               	addwf	efgtoa@n& (0+255),w,b
  3080  001166  6ED9               	movwf	fsr2l,c
  3081  001168  0E01               	movlw	high _dbuf
  3082  00116A  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3083  00116C  6EDA               	movwf	fsr2h,c
  3084  00116E  5172               	movf	efgtoa@d& (0+255),w,b
  3085  001170  0F30               	addlw	48
  3086  001172  6EDF               	movwf	indf2,c
  3087  001174                     
  3088                           ; BSR set to: 0
  3089  001174  4B8C               	infsnz	efgtoa@n& (0+255),f,b
  3090  001176  2B8D               	incf	(efgtoa@n+1)& (0+255),f,b
  3091  001178                     
  3092                           ; BSR set to: 0
  3093                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 485:             
      +                          --w;
  3094  001178  0778               	decf	efgtoa@w& (0+255),f,b
  3095  00117A  A0D8               	btfss	status,0,c
  3096  00117C  0779               	decf	(efgtoa@w+1)& (0+255),f,b
  3097  00117E                     l3530:
  3098                           
  3099                           ; BSR set to: 0
  3100                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 487:         h -=
      +                           l*u;
  3101  00117E  C07C  F028         	movff	efgtoa@h,___flsub@b
  3102  001182  C07D  F029         	movff	efgtoa@h+1,___flsub@b+1
  3103  001186  C07E  F02A         	movff	efgtoa@h+2,___flsub@b+2
  3104  00118A  C07F  F02B         	movff	efgtoa@h+3,___flsub@b+3
  3105  00118E  C08E  F013         	movff	efgtoa@u,___flmul@a
  3106  001192  C08F  F014         	movff	efgtoa@u+1,___flmul@a+1
  3107  001196  C090  F015         	movff	efgtoa@u+2,___flmul@a+2
  3108  00119A  C091  F016         	movff	efgtoa@u+3,___flmul@a+3
  3109  00119E  C080  F00F         	movff	efgtoa@l,___flmul@b
  3110  0011A2  C081  F010         	movff	efgtoa@l+1,___flmul@b+1
  3111  0011A6  C082  F011         	movff	efgtoa@l+2,___flmul@b+2
  3112  0011AA  C083  F012         	movff	efgtoa@l+3,___flmul@b+3
  3113  0011AE  EC8E  F00E         	call	___flmul	;wreg free
  3114  0011B2  C00F  F02C         	movff	?___flmul,___flsub@a
  3115  0011B6  C010  F02D         	movff	?___flmul+1,___flsub@a+1
  3116  0011BA  C011  F02E         	movff	?___flmul+2,___flsub@a+2
  3117  0011BE  C012  F02F         	movff	?___flmul+3,___flsub@a+3
  3118  0011C2  EC83  F01A         	call	___flsub	;wreg free
  3119  0011C6  C028  F07C         	movff	?___flsub,efgtoa@h
  3120  0011CA  C029  F07D         	movff	?___flsub+1,efgtoa@h+1
  3121  0011CE  C02A  F07E         	movff	?___flsub+2,efgtoa@h+2
  3122  0011D2  C02B  F07F         	movff	?___flsub+3,efgtoa@h+3
  3123  0011D6                     
  3124                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 488:         u = 
      +                          u/10.0;
  3125  0011D6  C08E  F001         	movff	efgtoa@u,___fldiv@b
  3126  0011DA  C08F  F002         	movff	efgtoa@u+1,___fldiv@b+1
  3127  0011DE  C090  F003         	movff	efgtoa@u+2,___fldiv@b+2
  3128  0011E2  C091  F004         	movff	efgtoa@u+3,___fldiv@b+3
  3129  0011E6  0E00               	movlw	0
  3130  0011E8  6E05               	movwf	___fldiv@a^0,c
  3131  0011EA  0E00               	movlw	0
  3132  0011EC  6E06               	movwf	(___fldiv@a+1)^0,c
  3133  0011EE  0E20               	movlw	32
  3134  0011F0  6E07               	movwf	(___fldiv@a+2)^0,c
  3135  0011F2  0E41               	movlw	65
  3136  0011F4  6E08               	movwf	(___fldiv@a+3)^0,c
  3137  0011F6  ECA3  F010         	call	___fldiv	;wreg free
  3138  0011FA  C001  F08E         	movff	?___fldiv,efgtoa@u
  3139  0011FE  C002  F08F         	movff	?___fldiv+1,efgtoa@u+1
  3140  001202  C003  F090         	movff	?___fldiv+2,efgtoa@u+2
  3141  001206  C004  F091         	movff	?___fldiv+3,efgtoa@u+3
  3142  00120A                     
  3143                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 489:         --ne
      +                          ;
  3144  00120A  0100               	movlb	0	; () banked
  3145  00120C  076A               	decf	efgtoa@ne& (0+255),f,b
  3146  00120E  A0D8               	btfss	status,0,c
  3147  001210  076B               	decf	(efgtoa@ne+1)& (0+255),f,b
  3148  001212                     
  3149                           ; BSR set to: 0
  3150                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 490:         ++i;
  3151  001212  4B84               	infsnz	efgtoa@i& (0+255),f,b
  3152  001214  2B85               	incf	(efgtoa@i+1)& (0+255),f,b
  3153  001216                     l3538:
  3154                           
  3155                           ; BSR set to: 0
  3156                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3157  001216  516C               	movf	efgtoa@m& (0+255),w,b
  3158  001218  5D84               	subwf	efgtoa@i& (0+255),w,b
  3159  00121A  5185               	movf	(efgtoa@i+1)& (0+255),w,b
  3160  00121C  0A80               	xorlw	128
  3161  00121E  6E3B               	movwf	??_efgtoa^0,c
  3162  001220  516D               	movf	(efgtoa@m+1)& (0+255),w,b
  3163  001222  0A80               	xorlw	128
  3164  001224  583B               	subwfb	??_efgtoa^0,w,c
  3165  001226  B0D8               	btfsc	status,0,c
  3166  001228  EF18  F009         	goto	u4171
  3167  00122C  EF1A  F009         	goto	u4170
  3168  001230                     u4171:
  3169  001230  EF28  F009         	goto	l3542
  3170  001234                     u4170:
  3171  001234                     
  3172                           ; BSR set to: 0
  3173  001234  BF8D               	btfsc	(efgtoa@n+1)& (0+255),7,b
  3174  001236  EF26  F009         	goto	u4181
  3175  00123A  518D               	movf	(efgtoa@n+1)& (0+255),w,b
  3176  00123C  E109               	bnz	u4180
  3177  00123E  0E4B               	movlw	75
  3178  001240  5D8C               	subwf	efgtoa@n& (0+255),w,b
  3179  001242  A0D8               	btfss	status,0,c
  3180  001244  EF26  F009         	goto	u4181
  3181  001248  EF28  F009         	goto	u4180
  3182  00124C                     u4181:
  3183  00124C  EF1D  F008         	goto	l3490
  3184  001250                     u4180:
  3185  001250                     l3542:
  3186                           
  3187                           ; BSR set to: 0
  3188                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 492:     if (!pp 
      +                          && (flags & (1 << 4))) {
  3189  001250  5168               	movf	efgtoa@pp& (0+255),w,b
  3190  001252  1169               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3191  001254  A4D8               	btfss	status,2,c
  3192  001256  EF2F  F009         	goto	u4191
  3193  00125A  EF31  F009         	goto	u4190
  3194  00125E                     u4191:
  3195  00125E  EF42  F009         	goto	l3550
  3196  001262                     u4190:
  3197  001262                     
  3198                           ; BSR set to: 0
  3199  001262  A85E               	btfss	_flags^0,4,c
  3200  001264  EF36  F009         	goto	u4201
  3201  001268  EF38  F009         	goto	u4200
  3202  00126C                     u4201:
  3203  00126C  EF42  F009         	goto	l3550
  3204  001270                     u4200:
  3205  001270                     
  3206                           ; BSR set to: 0
  3207                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [n++] = '.';
  3208  001270  0E00               	movlw	low _dbuf
  3209  001272  258C               	addwf	efgtoa@n& (0+255),w,b
  3210  001274  6ED9               	movwf	fsr2l,c
  3211  001276  0E01               	movlw	high _dbuf
  3212  001278  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3213  00127A  6EDA               	movwf	fsr2h,c
  3214  00127C  0E2E               	movlw	46
  3215  00127E  6EDF               	movwf	indf2,c
  3216  001280                     
  3217                           ; BSR set to: 0
  3218  001280  4B8C               	infsnz	efgtoa@n& (0+255),f,b
  3219  001282  2B8D               	incf	(efgtoa@n+1)& (0+255),f,b
  3220  001284                     l3550:
  3221                           
  3222                           ; BSR set to: 0
  3223                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 495:     dbuf[n] 
      +                          = '\0';
  3224  001284  0E00               	movlw	low _dbuf
  3225  001286  258C               	addwf	efgtoa@n& (0+255),w,b
  3226  001288  6ED9               	movwf	fsr2l,c
  3227  00128A  0E01               	movlw	high _dbuf
  3228  00128C  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3229  00128E  6EDA               	movwf	fsr2h,c
  3230  001290  0E00               	movlw	0
  3231  001292  6EDF               	movwf	indf2,c
  3232  001294                     
  3233                           ; BSR set to: 0
  3234                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 498:     if (nmod
      +                          e == 'e') {
  3235  001294  0E65               	movlw	101
  3236  001296  197A               	xorwf	efgtoa@nmode& (0+255),w,b
  3237  001298  A4D8               	btfss	status,2,c
  3238  00129A  EF51  F009         	goto	u4211
  3239  00129E  EF53  F009         	goto	u4210
  3240  0012A2                     u4211:
  3241  0012A2  EFB8  F004         	goto	l3352
  3242  0012A6                     u4210:
  3243  0012A6                     
  3244                           ; BSR set to: 0
  3245                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 499:         i = 
      +                          sizeof(dbuf) - 1;
  3246  0012A6  0E00               	movlw	0
  3247  0012A8  6F85               	movwf	(efgtoa@i+1)& (0+255),b
  3248  0012AA  0E4F               	movlw	79
  3249  0012AC  6F84               	movwf	efgtoa@i& (0+255),b
  3250  0012AE                     
  3251                           ; BSR set to: 0
  3252                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 500:         dbuf
      +                          [i] = '\0';
  3253  0012AE  0E00               	movlw	low _dbuf
  3254  0012B0  2584               	addwf	efgtoa@i& (0+255),w,b
  3255  0012B2  6ED9               	movwf	fsr2l,c
  3256  0012B4  0E01               	movlw	high _dbuf
  3257  0012B6  2185               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3258  0012B8  6EDA               	movwf	fsr2h,c
  3259  0012BA  0E00               	movlw	0
  3260  0012BC  6EDF               	movwf	indf2,c
  3261  0012BE                     
  3262                           ; BSR set to: 0
  3263                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 501:         sign
      +                           = 0;
  3264  0012BE  0E00               	movlw	0
  3265  0012C0  6F75               	movwf	(efgtoa@sign+1)& (0+255),b
  3266  0012C2  0E00               	movlw	0
  3267  0012C4  6F74               	movwf	efgtoa@sign& (0+255),b
  3268  0012C6                     
  3269                           ; BSR set to: 0
  3270                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 502:         if (
      +                          e < 0) {
  3271  0012C6  BF8B               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3272  0012C8  EF6A  F009         	goto	u4220
  3273  0012CC  EF68  F009         	goto	u4221
  3274  0012D0                     u4221:
  3275  0012D0  EF72  F009         	goto	l3566
  3276  0012D4                     u4220:
  3277  0012D4                     
  3278                           ; BSR set to: 0
  3279                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 503:             
      +                          sign = 1;
  3280  0012D4  0E00               	movlw	0
  3281  0012D6  6F75               	movwf	(efgtoa@sign+1)& (0+255),b
  3282  0012D8  0E01               	movlw	1
  3283  0012DA  6F74               	movwf	efgtoa@sign& (0+255),b
  3284  0012DC                     
  3285                           ; BSR set to: 0
  3286                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 504:             
      +                          e = -e;
  3287  0012DC  6D8A               	negf	efgtoa@e& (0+255),b
  3288  0012DE  1F8B               	comf	(efgtoa@e+1)& (0+255),f,b
  3289  0012E0  B0D8               	btfsc	status,0,c
  3290  0012E2  2B8B               	incf	(efgtoa@e+1)& (0+255),f,b
  3291  0012E4                     l3566:
  3292                           
  3293                           ; BSR set to: 0
  3294                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 506:         p = 
      +                          2;
  3295  0012E4  0E00               	movlw	0
  3296  0012E6  6F77               	movwf	(efgtoa@p+1)& (0+255),b
  3297  0012E8  0E02               	movlw	2
  3298  0012EA  6F76               	movwf	efgtoa@p& (0+255),b
  3299                           
  3300                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  3301  0012EC  EFA3  F009         	goto	l3578
  3302  0012F0                     l3568:
  3303                           
  3304                           ; BSR set to: 0
  3305                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 508:             
      +                          --i;
  3306  0012F0  0784               	decf	efgtoa@i& (0+255),f,b
  3307  0012F2  A0D8               	btfss	status,0,c
  3308  0012F4  0785               	decf	(efgtoa@i+1)& (0+255),f,b
  3309  0012F6                     
  3310                           ; BSR set to: 0
  3311                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 509:             
      +                          dbuf[i] = '0' + (e % 10);
  3312  0012F6  0E00               	movlw	low _dbuf
  3313  0012F8  2584               	addwf	efgtoa@i& (0+255),w,b
  3314  0012FA  6ED9               	movwf	fsr2l,c
  3315  0012FC  0E01               	movlw	high _dbuf
  3316  0012FE  2185               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3317  001300  6EDA               	movwf	fsr2h,c
  3318  001302  C08A  F001         	movff	efgtoa@e,___awmod@dividend
  3319  001306  C08B  F002         	movff	efgtoa@e+1,___awmod@dividend+1
  3320  00130A  0E00               	movlw	0
  3321  00130C  6E04               	movwf	(___awmod@divisor+1)^0,c
  3322  00130E  0E0A               	movlw	10
  3323  001310  6E03               	movwf	___awmod@divisor^0,c
  3324  001312  EC15  F018         	call	___awmod	;wreg free
  3325  001316  5001               	movf	?___awmod^0,w,c
  3326  001318  0F30               	addlw	48
  3327  00131A  6EDF               	movwf	indf2,c
  3328  00131C                     
  3329                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 510:             
      +                          e = e / 10;
  3330  00131C  C08A  F001         	movff	efgtoa@e,___awdiv@dividend
  3331  001320  C08B  F002         	movff	efgtoa@e+1,___awdiv@dividend+1
  3332  001324  0E00               	movlw	0
  3333  001326  6E04               	movwf	(___awdiv@divisor+1)^0,c
  3334  001328  0E0A               	movlw	10
  3335  00132A  6E03               	movwf	___awdiv@divisor^0,c
  3336  00132C  EC52  F017         	call	___awdiv	;wreg free
  3337  001330  C001  F08A         	movff	?___awdiv,efgtoa@e
  3338  001334  C002  F08B         	movff	?___awdiv+1,efgtoa@e+1
  3339  001338                     
  3340                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 511:             
      +                          --p;
  3341  001338  0100               	movlb	0	; () banked
  3342  00133A  0776               	decf	efgtoa@p& (0+255),f,b
  3343  00133C  A0D8               	btfss	status,0,c
  3344  00133E  0777               	decf	(efgtoa@p+1)& (0+255),f,b
  3345  001340                     
  3346                           ; BSR set to: 0
  3347                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 512:             
      +                          --w;
  3348  001340  0778               	decf	efgtoa@w& (0+255),f,b
  3349  001342  A0D8               	btfss	status,0,c
  3350  001344  0779               	decf	(efgtoa@w+1)& (0+255),f,b
  3351  001346                     l3578:
  3352                           
  3353                           ; BSR set to: 0
  3354                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  3355  001346  518A               	movf	efgtoa@e& (0+255),w,b
  3356  001348  118B               	iorwf	(efgtoa@e+1)& (0+255),w,b
  3357  00134A  A4D8               	btfss	status,2,c
  3358  00134C  EFAA  F009         	goto	u4231
  3359  001350  EFAC  F009         	goto	u4230
  3360  001354                     u4231:
  3361  001354  EF78  F009         	goto	l3568
  3362  001358                     u4230:
  3363  001358                     
  3364                           ; BSR set to: 0
  3365  001358  BF77               	btfsc	(efgtoa@p+1)& (0+255),7,b
  3366  00135A  EFB9  F009         	goto	u4240
  3367  00135E  5177               	movf	(efgtoa@p+1)& (0+255),w,b
  3368  001360  E106               	bnz	u4241
  3369  001362  0576               	decf	efgtoa@p& (0+255),w,b
  3370  001364  B0D8               	btfsc	status,0,c
  3371  001366  EFB7  F009         	goto	u4241
  3372  00136A  EFB9  F009         	goto	u4240
  3373  00136E                     u4241:
  3374  00136E  EF78  F009         	goto	l3568
  3375  001372                     u4240:
  3376  001372                     
  3377                           ; BSR set to: 0
  3378                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 514:         --i;
  3379  001372  0784               	decf	efgtoa@i& (0+255),f,b
  3380  001374  A0D8               	btfss	status,0,c
  3381  001376  0785               	decf	(efgtoa@i+1)& (0+255),f,b
  3382  001378                     
  3383                           ; BSR set to: 0
  3384                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 515:         dbuf
      +                          [i] = sign ? '-' : '+';
  3385  001378  5174               	movf	efgtoa@sign& (0+255),w,b
  3386  00137A  1175               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3387  00137C  A4D8               	btfss	status,2,c
  3388  00137E  EFC3  F009         	goto	u4251
  3389  001382  EFC5  F009         	goto	u4250
  3390  001386                     u4251:
  3391  001386  EFCB  F009         	goto	l3588
  3392  00138A                     u4250:
  3393  00138A                     
  3394                           ; BSR set to: 0
  3395  00138A  0E00               	movlw	0
  3396  00138C  6F63               	movwf	(_efgtoa$1071+1)& (0+255),b
  3397  00138E  0E2B               	movlw	43
  3398  001390  6F62               	movwf	_efgtoa$1071& (0+255),b
  3399  001392  EFCF  F009         	goto	l3590
  3400  001396                     l3588:
  3401                           
  3402                           ; BSR set to: 0
  3403  001396  0E00               	movlw	0
  3404  001398  6F63               	movwf	(_efgtoa$1071+1)& (0+255),b
  3405  00139A  0E2D               	movlw	45
  3406  00139C  6F62               	movwf	_efgtoa$1071& (0+255),b
  3407  00139E                     l3590:
  3408                           
  3409                           ; BSR set to: 0
  3410  00139E  0E00               	movlw	low _dbuf
  3411  0013A0  2584               	addwf	efgtoa@i& (0+255),w,b
  3412  0013A2  6ED9               	movwf	fsr2l,c
  3413  0013A4  0E01               	movlw	high _dbuf
  3414  0013A6  2185               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3415  0013A8  6EDA               	movwf	fsr2h,c
  3416  0013AA  C062  FFDF         	movff	_efgtoa$1071,indf2
  3417  0013AE                     
  3418                           ; BSR set to: 0
  3419                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 516:         --w;
  3420  0013AE  0778               	decf	efgtoa@w& (0+255),f,b
  3421  0013B0  A0D8               	btfss	status,0,c
  3422  0013B2  0779               	decf	(efgtoa@w+1)& (0+255),f,b
  3423  0013B4                     
  3424                           ; BSR set to: 0
  3425                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 517:         --i;
  3426  0013B4  0784               	decf	efgtoa@i& (0+255),f,b
  3427  0013B6  A0D8               	btfss	status,0,c
  3428  0013B8  0785               	decf	(efgtoa@i+1)& (0+255),f,b
  3429  0013BA                     
  3430                           ; BSR set to: 0
  3431  0013BA  0EBF               	movlw	191
  3432  0013BC  6E3B               	movwf	??_efgtoa^0,c
  3433  0013BE  0EFF               	movlw	255
  3434  0013C0  6E3C               	movwf	(??_efgtoa+1)^0,c
  3435  0013C2  503A               	movf	efgtoa@c^0,w,c
  3436  0013C4  6E3D               	movwf	(??_efgtoa+2)^0,c
  3437  0013C6  6A3E               	clrf	(??_efgtoa+3)^0,c
  3438  0013C8  503B               	movf	??_efgtoa^0,w,c
  3439  0013CA  263D               	addwf	(??_efgtoa+2)^0,f,c
  3440  0013CC  503C               	movf	(??_efgtoa+1)^0,w,c
  3441  0013CE  223E               	addwfc	(??_efgtoa+3)^0,f,c
  3442  0013D0  503E               	movf	(??_efgtoa+3)^0,w,c
  3443  0013D2  E109               	bnz	u4260
  3444  0013D4  0E1A               	movlw	26
  3445  0013D6  5C3D               	subwf	(??_efgtoa+2)^0,w,c
  3446  0013D8  A0D8               	btfss	status,0,c
  3447  0013DA  EFF1  F009         	goto	u4261
  3448  0013DE  EFF3  F009         	goto	u4260
  3449  0013E2                     u4261:
  3450  0013E2  EFF9  F009         	goto	l3602
  3451  0013E6                     u4260:
  3452  0013E6                     
  3453                           ; BSR set to: 0
  3454  0013E6  0E00               	movlw	0
  3455  0013E8  6F65               	movwf	(_efgtoa$1072+1)& (0+255),b
  3456  0013EA  0E65               	movlw	101
  3457  0013EC  6F64               	movwf	_efgtoa$1072& (0+255),b
  3458  0013EE  EFFD  F009         	goto	l3604
  3459  0013F2                     l3602:
  3460                           
  3461                           ; BSR set to: 0
  3462  0013F2  0E00               	movlw	0
  3463  0013F4  6F65               	movwf	(_efgtoa$1072+1)& (0+255),b
  3464  0013F6  0E45               	movlw	69
  3465  0013F8  6F64               	movwf	_efgtoa$1072& (0+255),b
  3466  0013FA                     l3604:
  3467                           
  3468                           ; BSR set to: 0
  3469  0013FA  0E00               	movlw	low _dbuf
  3470  0013FC  2584               	addwf	efgtoa@i& (0+255),w,b
  3471  0013FE  6ED9               	movwf	fsr2l,c
  3472  001400  0E01               	movlw	high _dbuf
  3473  001402  2185               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3474  001404  6EDA               	movwf	fsr2h,c
  3475  001406  C064  FFDF         	movff	_efgtoa$1072,indf2
  3476  00140A                     
  3477                           ; BSR set to: 0
  3478                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 519:         --w;
  3479  00140A  0778               	decf	efgtoa@w& (0+255),f,b
  3480  00140C  A0D8               	btfss	status,0,c
  3481  00140E  0779               	decf	(efgtoa@w+1)& (0+255),f,b
  3482  001410                     
  3483                           ; BSR set to: 0
  3484                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 520:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  3485  001410  0E00               	movlw	low _dbuf
  3486  001412  258C               	addwf	efgtoa@n& (0+255),w,b
  3487  001414  6E01               	movwf	strcpy@dest^0,c
  3488  001416  0E01               	movlw	high _dbuf
  3489  001418  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3490  00141A  6E02               	movwf	(strcpy@dest+1)^0,c
  3491  00141C  0E00               	movlw	low _dbuf
  3492  00141E  2584               	addwf	efgtoa@i& (0+255),w,b
  3493  001420  6E03               	movwf	strcpy@src^0,c
  3494  001422  0E01               	movlw	high _dbuf
  3495  001424  2185               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3496  001426  6E04               	movwf	(strcpy@src+1)^0,c
  3497  001428  ECB7  F019         	call	_strcpy	;wreg free
  3498  00142C  EFB8  F004         	goto	l3352
  3499  001430                     l838:
  3500  001430  0012               	return		;funcret
  3501  001432                     __end_of_efgtoa:
  3502                           	callstack 0
  3503                           
  3504 ;; *************** function _tolower *****************
  3505 ;; Defined at:
  3506 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\tolower.c"
  3507 ;; Parameters:    Size  Location     Type
  3508 ;;  c               2    6[COMRAM] int 
  3509 ;; Auto vars:     Size  Location     Type
  3510 ;;		None
  3511 ;; Return value:  Size  Location     Type
  3512 ;;                  2    6[COMRAM] int 
  3513 ;; Registers used:
  3514 ;;		wreg, status,2, status,0
  3515 ;; Tracked objects:
  3516 ;;		On entry : 0/0
  3517 ;;		On exit  : 0/0
  3518 ;;		Unchanged: 0/0
  3519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3520 ;;      Params:         2       0       0       0       0       0       0       0       0
  3521 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3522 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3523 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3524 ;;Total ram usage:        6 bytes
  3525 ;; Hardware stack levels used: 1
  3526 ;; Hardware stack levels required when called: 1
  3527 ;; This function calls:
  3528 ;;		_isupper
  3529 ;; This function is called by:
  3530 ;;		_efgtoa
  3531 ;;		_vfpfcnvrt
  3532 ;; This function uses a non-reentrant model
  3533 ;;
  3534                           
  3535                           	psect	text6
  3536  0034C0                     __ptext6:
  3537                           	callstack 0
  3538  0034C0                     _tolower:
  3539                           	callstack 26
  3540  0034C0  0EBF               	movlw	191
  3541  0034C2  6E09               	movwf	??_tolower^0,c
  3542  0034C4  0EFF               	movlw	255
  3543  0034C6  6E0A               	movwf	(??_tolower+1)^0,c
  3544  0034C8  C007  F00B         	movff	tolower@c,??_tolower+2
  3545  0034CC  C008  F00C         	movff	tolower@c+1,??_tolower+3
  3546  0034D0  5009               	movf	??_tolower^0,w,c
  3547  0034D2  260B               	addwf	(??_tolower+2)^0,f,c
  3548  0034D4  500A               	movf	(??_tolower+1)^0,w,c
  3549  0034D6  220C               	addwfc	(??_tolower+3)^0,f,c
  3550  0034D8  500C               	movf	(??_tolower+3)^0,w,c
  3551  0034DA  E107               	bnz	u3641
  3552  0034DC  0E1A               	movlw	26
  3553  0034DE  5C0B               	subwf	(??_tolower+2)^0,w,c
  3554  0034E0  B0D8               	btfsc	status,0,c
  3555  0034E2  EF75  F01A         	goto	u3641
  3556  0034E6  EF77  F01A         	goto	u3640
  3557  0034EA                     u3641:
  3558  0034EA  EF7E  F01A         	goto	l1054
  3559  0034EE                     u3640:
  3560  0034EE  0E20               	movlw	32
  3561  0034F0  1007               	iorwf	tolower@c^0,w,c
  3562  0034F2  6E07               	movwf	?_tolower^0,c
  3563  0034F4  5008               	movf	(tolower@c+1)^0,w,c
  3564  0034F6  6E08               	movwf	(?_tolower+1)^0,c
  3565  0034F8  EF82  F01A         	goto	l1057
  3566  0034FC                     l1054:
  3567  0034FC  C007  F007         	movff	tolower@c,?_tolower
  3568  003500  C008  F008         	movff	tolower@c+1,?_tolower+1
  3569  003504                     l1057:
  3570  003504  0012               	return		;funcret
  3571  003506                     __end_of_tolower:
  3572                           	callstack 0
  3573                           
  3574 ;; *************** function _isupper *****************
  3575 ;; Defined at:
  3576 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\isupper.c"
  3577 ;; Parameters:    Size  Location     Type
  3578 ;;  c               2    0[COMRAM] int 
  3579 ;; Auto vars:     Size  Location     Type
  3580 ;;		None
  3581 ;; Return value:  Size  Location     Type
  3582 ;;                  2    0[COMRAM] int 
  3583 ;; Registers used:
  3584 ;;		wreg, status,2, status,0
  3585 ;; Tracked objects:
  3586 ;;		On entry : 0/0
  3587 ;;		On exit  : 0/0
  3588 ;;		Unchanged: 0/0
  3589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3590 ;;      Params:         2       0       0       0       0       0       0       0       0
  3591 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3592 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3593 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3594 ;;Total ram usage:        6 bytes
  3595 ;; Hardware stack levels used: 1
  3596 ;; This function calls:
  3597 ;;		Nothing
  3598 ;; This function is called by:
  3599 ;;		_efgtoa
  3600 ;;		_vfpfcnvrt
  3601 ;;		_tolower
  3602 ;; This function uses a non-reentrant model
  3603 ;;
  3604                           
  3605                           	psect	text7
  3606  003590                     __ptext7:
  3607                           	callstack 0
  3608  003590                     _isupper:
  3609                           	callstack 26
  3610  003590  0EBF               	movlw	191
  3611  003592  6E03               	movwf	??_isupper^0,c
  3612  003594  0EFF               	movlw	255
  3613  003596  6E04               	movwf	(??_isupper+1)^0,c
  3614  003598  C001  F005         	movff	isupper@c,??_isupper+2
  3615  00359C  C002  F006         	movff	isupper@c+1,??_isupper+3
  3616  0035A0  5003               	movf	??_isupper^0,w,c
  3617  0035A2  2605               	addwf	(??_isupper+2)^0,f,c
  3618  0035A4  5004               	movf	(??_isupper+1)^0,w,c
  3619  0035A6  2206               	addwfc	(??_isupper+3)^0,f,c
  3620  0035A8  5006               	movf	(??_isupper+3)^0,w,c
  3621  0035AA  E10A               	bnz	u2790
  3622  0035AC  0E1A               	movlw	26
  3623  0035AE  5C05               	subwf	(??_isupper+2)^0,w,c
  3624  0035B0  A0D8               	btfss	status,0,c
  3625  0035B2  EFDD  F01A         	goto	u2791
  3626  0035B6  EFE0  F01A         	goto	u2790
  3627  0035BA                     u2791:
  3628  0035BA  0E01               	movlw	1
  3629  0035BC  EFE1  F01A         	goto	u2800
  3630  0035C0                     u2790:
  3631  0035C0  0E00               	movlw	0
  3632  0035C2                     u2800:
  3633  0035C2  6E01               	movwf	?_isupper^0,c
  3634  0035C4  6A02               	clrf	(?_isupper+1)^0,c
  3635  0035C6  0012               	return		;funcret
  3636  0035C8                     __end_of_isupper:
  3637                           	callstack 0
  3638                           
  3639 ;; *************** function _strcpy *****************
  3640 ;; Defined at:
  3641 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strcpy.c"
  3642 ;; Parameters:    Size  Location     Type
  3643 ;;  dest            2    0[COMRAM] PTR unsigned char 
  3644 ;;		 -> dbuf(80), 
  3645 ;;  src             2    2[COMRAM] PTR const unsigned char 
  3646 ;;		 -> STR_7(4), STR_6(4), STR_3(4), STR_2(4), 
  3647 ;;		 -> dbuf(80), 
  3648 ;; Auto vars:     Size  Location     Type
  3649 ;;  d               2    8[COMRAM] PTR unsigned char 
  3650 ;;		 -> dbuf(80), 
  3651 ;;  s               2    6[COMRAM] PTR const unsigned char 
  3652 ;;		 -> STR_7(4), STR_6(4), STR_3(4), STR_2(4), 
  3653 ;;		 -> dbuf(80), 
  3654 ;; Return value:  Size  Location     Type
  3655 ;;                  2    0[COMRAM] PTR unsigned char 
  3656 ;; Registers used:
  3657 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3658 ;; Tracked objects:
  3659 ;;		On entry : 0/0
  3660 ;;		On exit  : 0/0
  3661 ;;		Unchanged: 0/0
  3662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3663 ;;      Params:         4       0       0       0       0       0       0       0       0
  3664 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3665 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3666 ;;      Totals:        10       0       0       0       0       0       0       0       0
  3667 ;;Total ram usage:       10 bytes
  3668 ;; Hardware stack levels used: 1
  3669 ;; This function calls:
  3670 ;;		Nothing
  3671 ;; This function is called by:
  3672 ;;		_efgtoa
  3673 ;; This function uses a non-reentrant model
  3674 ;;
  3675                           
  3676                           	psect	text8
  3677  00336E                     __ptext8:
  3678                           	callstack 0
  3679  00336E                     _strcpy:
  3680                           	callstack 26
  3681  00336E  C003  F007         	movff	strcpy@src,strcpy@s
  3682  003372  C004  F008         	movff	strcpy@src+1,strcpy@s+1
  3683  003376  C001  F009         	movff	strcpy@dest,strcpy@d
  3684  00337A  C002  F00A         	movff	strcpy@dest+1,strcpy@d+1
  3685  00337E                     l3252:
  3686  00337E  5007               	movf	strcpy@s^0,w,c
  3687  003380  6E05               	movwf	??_strcpy^0,c
  3688  003382  5008               	movf	(strcpy@s+1)^0,w,c
  3689  003384  6E06               	movwf	(??_strcpy+1)^0,c
  3690  003386  4A07               	infsnz	strcpy@s^0,f,c
  3691  003388  2A08               	incf	(strcpy@s+1)^0,f,c
  3692  00338A  C005  FFF6         	movff	??_strcpy,tblptrl
  3693  00338E  C006  FFF7         	movff	??_strcpy+1,tblptrh
  3694  003392  6AF8               	clrf	tblptru,c
  3695  003394  C009  FFD9         	movff	strcpy@d,fsr2l
  3696  003398  C00A  FFDA         	movff	strcpy@d+1,fsr2h
  3697  00339C  4A09               	infsnz	strcpy@d^0,f,c
  3698  00339E  2A0A               	incf	(strcpy@d+1)^0,f,c
  3699  0033A0  0E07               	movlw	(high __ramtop+-1)
  3700  0033A2  64F7               	cpfsgt	tblptrh,c
  3701  0033A4  D003               	bra	u3627
  3702  0033A6  0008               	tblrd		*
  3703  0033A8  50F5               	movf	tablat,w,c
  3704  0033AA  D005               	bra	u3620
  3705  0033AC                     u3627:
  3706  0033AC  CFF6 FFE1          	movff	tblptrl,fsr1l
  3707  0033B0  CFF7 FFE2          	movff	tblptrh,fsr1h
  3708  0033B4  50E7               	movf	indf1,w,c
  3709  0033B6                     u3620:
  3710  0033B6  6EDF               	movwf	indf2,c
  3711  0033B8  50DF               	movf	indf2,w,c
  3712  0033BA  A4D8               	btfss	status,2,c
  3713  0033BC  EFE2  F019         	goto	u3631
  3714  0033C0  EFE4  F019         	goto	u3630
  3715  0033C4                     u3631:
  3716  0033C4  EFBF  F019         	goto	l3252
  3717  0033C8                     u3630:
  3718  0033C8  0012               	return		;funcret
  3719  0033CA                     __end_of_strcpy:
  3720                           	callstack 0
  3721                           
  3722 ;; *************** function _pad *****************
  3723 ;; Defined at:
  3724 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  3725 ;; Parameters:    Size  Location     Type
  3726 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  3727 ;;		 -> sprintf@f(11), 
  3728 ;;  buf             2   18[COMRAM] PTR unsigned char 
  3729 ;;		 -> dbuf(80), 
  3730 ;;  p               2   20[COMRAM] int 
  3731 ;; Auto vars:     Size  Location     Type
  3732 ;;  w               2   25[COMRAM] int 
  3733 ;;  i               2   23[COMRAM] int 
  3734 ;; Return value:  Size  Location     Type
  3735 ;;                  2   16[COMRAM] int 
  3736 ;; Registers used:
  3737 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3738 ;; Tracked objects:
  3739 ;;		On entry : 0/0
  3740 ;;		On exit  : 0/0
  3741 ;;		Unchanged: 0/0
  3742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3743 ;;      Params:         6       0       0       0       0       0       0       0       0
  3744 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3745 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3746 ;;      Totals:        11       0       0       0       0       0       0       0       0
  3747 ;;Total ram usage:       11 bytes
  3748 ;; Hardware stack levels used: 1
  3749 ;; Hardware stack levels required when called: 3
  3750 ;; This function calls:
  3751 ;;		_fputc
  3752 ;;		_fputs
  3753 ;;		_strlen
  3754 ;; This function is called by:
  3755 ;;		_efgtoa
  3756 ;; This function uses a non-reentrant model
  3757 ;;
  3758                           
  3759                           	psect	text9
  3760  002F68                     __ptext9:
  3761                           	callstack 0
  3762  002F68                     _pad:
  3763                           	callstack 23
  3764  002F68                     
  3765                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  3766  002F68  A05E               	btfss	_flags^0,0,c
  3767  002F6A  EFB9  F017         	goto	u3511
  3768  002F6E  EFBB  F017         	goto	u3510
  3769  002F72                     u3511:
  3770  002F72  EFC5  F017         	goto	l3210
  3771  002F76                     u3510:
  3772  002F76                     
  3773                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  3774  002F76  C013  F00A         	movff	pad@buf,fputs@s
  3775  002F7A  C014  F00B         	movff	pad@buf+1,fputs@s+1
  3776  002F7E  C011  F00C         	movff	pad@fp,fputs@fp
  3777  002F82  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  3778  002F86  ECA6  F01A         	call	_fputs	;wreg free
  3779  002F8A                     l3210:
  3780                           
  3781                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  3782  002F8A  BE16               	btfsc	(pad@p+1)^0,7,c
  3783  002F8C  EFCA  F017         	goto	u3521
  3784  002F90  EFCC  F017         	goto	u3520
  3785  002F94                     u3521:
  3786  002F94  EFD2  F017         	goto	l3214
  3787  002F98                     u3520:
  3788  002F98  C015  F01A         	movff	pad@p,pad@w
  3789  002F9C  C016  F01B         	movff	pad@p+1,pad@w+1
  3790  002FA0  EFD6  F017         	goto	l817
  3791  002FA4                     l3214:
  3792  002FA4  0E00               	movlw	0
  3793  002FA6  6E1B               	movwf	(pad@w+1)^0,c
  3794  002FA8  0E00               	movlw	0
  3795  002FAA  6E1A               	movwf	pad@w^0,c
  3796  002FAC                     l817:
  3797                           
  3798                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  3799  002FAC  0E00               	movlw	0
  3800  002FAE  6E19               	movwf	(pad@i+1)^0,c
  3801  002FB0  0E00               	movlw	0
  3802  002FB2  6E18               	movwf	pad@i^0,c
  3803                           
  3804                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  3805  002FB4  EFE8  F017         	goto	l3220
  3806  002FB8                     l3216:
  3807                           
  3808                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  3809  002FB8  0E00               	movlw	0
  3810  002FBA  6E02               	movwf	(fputc@c+1)^0,c
  3811  002FBC  0E20               	movlw	32
  3812  002FBE  6E01               	movwf	fputc@c^0,c
  3813  002FC0  C011  F003         	movff	pad@fp,fputc@fp
  3814  002FC4  C012  F004         	movff	pad@fp+1,fputc@fp+1
  3815  002FC8  ECED  F016         	call	_fputc	;wreg free
  3816  002FCC                     
  3817                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 86:         ++i;
  3818  002FCC  4A18               	infsnz	pad@i^0,f,c
  3819  002FCE  2A19               	incf	(pad@i+1)^0,f,c
  3820  002FD0                     l3220:
  3821                           
  3822                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  3823  002FD0  501A               	movf	pad@w^0,w,c
  3824  002FD2  5C18               	subwf	pad@i^0,w,c
  3825  002FD4  5019               	movf	(pad@i+1)^0,w,c
  3826  002FD6  0A80               	xorlw	128
  3827  002FD8  6E17               	movwf	??_pad^0,c
  3828  002FDA  501B               	movf	(pad@w+1)^0,w,c
  3829  002FDC  0A80               	xorlw	128
  3830  002FDE  5817               	subwfb	??_pad^0,w,c
  3831  002FE0  A0D8               	btfss	status,0,c
  3832  002FE2  EFF5  F017         	goto	u3531
  3833  002FE6  EFF7  F017         	goto	u3530
  3834  002FEA                     u3531:
  3835  002FEA  EFDC  F017         	goto	l3216
  3836  002FEE                     u3530:
  3837  002FEE                     
  3838                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  3839  002FEE  B05E               	btfsc	_flags^0,0,c
  3840  002FF0  EFFC  F017         	goto	u3541
  3841  002FF4  EFFE  F017         	goto	u3540
  3842  002FF8                     u3541:
  3843  002FF8  EF08  F018         	goto	l3224
  3844  002FFC                     u3540:
  3845  002FFC                     
  3846                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  3847  002FFC  C013  F00A         	movff	pad@buf,fputs@s
  3848  003000  C014  F00B         	movff	pad@buf+1,fputs@s+1
  3849  003004  C011  F00C         	movff	pad@fp,fputs@fp
  3850  003008  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  3851  00300C  ECA6  F01A         	call	_fputs	;wreg free
  3852  003010                     l3224:
  3853                           
  3854                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  3855  003010  C013  F001         	movff	pad@buf,strlen@s
  3856  003014  C014  F002         	movff	pad@buf+1,strlen@s+1
  3857  003018  EC38  F01B         	call	_strlen	;wreg free
  3858  00301C  501A               	movf	pad@w^0,w,c
  3859  00301E  2401               	addwf	?_strlen^0,w,c
  3860  003020  6E11               	movwf	?_pad^0,c
  3861  003022  501B               	movf	(pad@w+1)^0,w,c
  3862  003024  2002               	addwfc	(?_strlen+1)^0,w,c
  3863  003026  6E12               	movwf	(?_pad+1)^0,c
  3864  003028  0012               	return		;funcret
  3865  00302A                     __end_of_pad:
  3866                           	callstack 0
  3867                           
  3868 ;; *************** function _strlen *****************
  3869 ;; Defined at:
  3870 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strlen.c"
  3871 ;; Parameters:    Size  Location     Type
  3872 ;;  s               2    0[COMRAM] PTR const unsigned char 
  3873 ;;		 -> dbuf(80), 
  3874 ;; Auto vars:     Size  Location     Type
  3875 ;;  a               2    2[COMRAM] PTR const unsigned char 
  3876 ;;		 -> dbuf(80), 
  3877 ;; Return value:  Size  Location     Type
  3878 ;;                  2    0[COMRAM] unsigned int 
  3879 ;; Registers used:
  3880 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3881 ;; Tracked objects:
  3882 ;;		On entry : 0/0
  3883 ;;		On exit  : 0/0
  3884 ;;		Unchanged: 0/0
  3885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3886 ;;      Params:         2       0       0       0       0       0       0       0       0
  3887 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3888 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3889 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3890 ;;Total ram usage:        4 bytes
  3891 ;; Hardware stack levels used: 1
  3892 ;; This function calls:
  3893 ;;		Nothing
  3894 ;; This function is called by:
  3895 ;;		_pad
  3896 ;; This function uses a non-reentrant model
  3897 ;;
  3898                           
  3899                           	psect	text10
  3900  003670                     __ptext10:
  3901                           	callstack 0
  3902  003670                     _strlen:
  3903                           	callstack 25
  3904  003670  C001  F003         	movff	strlen@s,strlen@a
  3905  003674  C002  F004         	movff	strlen@s+1,strlen@a+1
  3906  003678  EF40  F01B         	goto	l2746
  3907  00367C                     l2744:
  3908  00367C  4A01               	infsnz	strlen@s^0,f,c
  3909  00367E  2A02               	incf	(strlen@s+1)^0,f,c
  3910  003680                     l2746:
  3911  003680  C001  FFD9         	movff	strlen@s,fsr2l
  3912  003684  C002  FFDA         	movff	strlen@s+1,fsr2h
  3913  003688  50DF               	movf	indf2,w,c
  3914  00368A  A4D8               	btfss	status,2,c
  3915  00368C  EF4A  F01B         	goto	u2781
  3916  003690  EF4C  F01B         	goto	u2780
  3917  003694                     u2781:
  3918  003694  EF3E  F01B         	goto	l2744
  3919  003698                     u2780:
  3920  003698  5003               	movf	strlen@a^0,w,c
  3921  00369A  5C01               	subwf	strlen@s^0,w,c
  3922  00369C  6E01               	movwf	?_strlen^0,c
  3923  00369E  5004               	movf	(strlen@a+1)^0,w,c
  3924  0036A0  5802               	subwfb	(strlen@s+1)^0,w,c
  3925  0036A2  6E02               	movwf	(?_strlen+1)^0,c
  3926  0036A4  0012               	return		;funcret
  3927  0036A6                     __end_of_strlen:
  3928                           	callstack 0
  3929                           
  3930 ;; *************** function _fputs *****************
  3931 ;; Defined at:
  3932 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputs.c"
  3933 ;; Parameters:    Size  Location     Type
  3934 ;;  s               2    9[COMRAM] PTR const unsigned char 
  3935 ;;		 -> dbuf(80), 
  3936 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  3937 ;;		 -> sprintf@f(11), 
  3938 ;; Auto vars:     Size  Location     Type
  3939 ;;  i               2   14[COMRAM] int 
  3940 ;;  c               1   13[COMRAM] unsigned char 
  3941 ;; Return value:  Size  Location     Type
  3942 ;;                  2    9[COMRAM] int 
  3943 ;; Registers used:
  3944 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3945 ;; Tracked objects:
  3946 ;;		On entry : 0/0
  3947 ;;		On exit  : 0/0
  3948 ;;		Unchanged: 0/0
  3949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3950 ;;      Params:         4       0       0       0       0       0       0       0       0
  3951 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3952 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3953 ;;      Totals:         7       0       0       0       0       0       0       0       0
  3954 ;;Total ram usage:        7 bytes
  3955 ;; Hardware stack levels used: 1
  3956 ;; Hardware stack levels required when called: 2
  3957 ;; This function calls:
  3958 ;;		_fputc
  3959 ;; This function is called by:
  3960 ;;		_pad
  3961 ;; This function uses a non-reentrant model
  3962 ;;
  3963                           
  3964                           	psect	text11
  3965  00354C                     __ptext11:
  3966                           	callstack 0
  3967  00354C                     _fputs:
  3968                           	callstack 23
  3969  00354C  0E00               	movlw	0
  3970  00354E  6E10               	movwf	(fputs@i+1)^0,c
  3971  003550  0E00               	movlw	0
  3972  003552  6E0F               	movwf	fputs@i^0,c
  3973  003554  EFB7  F01A         	goto	l2740
  3974  003558                     l2736:
  3975  003558  C00E  F001         	movff	fputs@c,fputc@c
  3976  00355C  6A02               	clrf	(fputc@c+1)^0,c
  3977  00355E  C00C  F003         	movff	fputs@fp,fputc@fp
  3978  003562  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  3979  003566  ECED  F016         	call	_fputc	;wreg free
  3980  00356A  4A0F               	infsnz	fputs@i^0,f,c
  3981  00356C  2A10               	incf	(fputs@i+1)^0,f,c
  3982  00356E                     l2740:
  3983  00356E  500F               	movf	fputs@i^0,w,c
  3984  003570  240A               	addwf	fputs@s^0,w,c
  3985  003572  6ED9               	movwf	fsr2l,c
  3986  003574  5010               	movf	(fputs@i+1)^0,w,c
  3987  003576  200B               	addwfc	(fputs@s+1)^0,w,c
  3988  003578  6EDA               	movwf	fsr2h,c
  3989  00357A  50DF               	movf	indf2,w,c
  3990  00357C  6E0E               	movwf	fputs@c^0,c
  3991  00357E  500E               	movf	fputs@c^0,w,c
  3992  003580  A4D8               	btfss	status,2,c
  3993  003582  EFC5  F01A         	goto	u2771
  3994  003586  EFC7  F01A         	goto	u2770
  3995  00358A                     u2771:
  3996  00358A  EFAC  F01A         	goto	l2736
  3997  00358E                     u2770:
  3998  00358E  0012               	return		;funcret
  3999  003590                     __end_of_fputs:
  4000                           	callstack 0
  4001                           
  4002 ;; *************** function _fputc *****************
  4003 ;; Defined at:
  4004 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputc.c"
  4005 ;; Parameters:    Size  Location     Type
  4006 ;;  c               2    0[COMRAM] int 
  4007 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  4008 ;;		 -> sprintf@f(11), 
  4009 ;; Auto vars:     Size  Location     Type
  4010 ;;		None
  4011 ;; Return value:  Size  Location     Type
  4012 ;;                  2    0[COMRAM] int 
  4013 ;; Registers used:
  4014 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4015 ;; Tracked objects:
  4016 ;;		On entry : 0/0
  4017 ;;		On exit  : 0/0
  4018 ;;		Unchanged: 0/0
  4019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4020 ;;      Params:         4       0       0       0       0       0       0       0       0
  4021 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4022 ;;      Temps:          5       0       0       0       0       0       0       0       0
  4023 ;;      Totals:         9       0       0       0       0       0       0       0       0
  4024 ;;Total ram usage:        9 bytes
  4025 ;; Hardware stack levels used: 1
  4026 ;; Hardware stack levels required when called: 1
  4027 ;; This function calls:
  4028 ;;		_putch
  4029 ;; This function is called by:
  4030 ;;		_pad
  4031 ;;		_vfpfcnvrt
  4032 ;;		_fputs
  4033 ;; This function uses a non-reentrant model
  4034 ;;
  4035                           
  4036                           	psect	text12
  4037  002DDA                     __ptext12:
  4038                           	callstack 0
  4039  002DDA                     _fputc:
  4040                           	callstack 26
  4041  002DDA  5003               	movf	fputc@fp^0,w,c
  4042  002DDC  1004               	iorwf	(fputc@fp+1)^0,w,c
  4043  002DDE  B4D8               	btfsc	status,2,c
  4044  002DE0  EFF4  F016         	goto	u2341
  4045  002DE4  EFF6  F016         	goto	u2340
  4046  002DE8                     u2341:
  4047  002DE8  EFFF  F016         	goto	l2522
  4048  002DEC                     u2340:
  4049  002DEC  5003               	movf	fputc@fp^0,w,c
  4050  002DEE  1004               	iorwf	(fputc@fp+1)^0,w,c
  4051  002DF0  A4D8               	btfss	status,2,c
  4052  002DF2  EFFD  F016         	goto	u2351
  4053  002DF6  EFFF  F016         	goto	u2350
  4054  002DFA                     u2351:
  4055  002DFA  EF04  F017         	goto	l2524
  4056  002DFE                     u2350:
  4057  002DFE                     l2522:
  4058  002DFE  5001               	movf	fputc@c^0,w,c
  4059  002E00  ECB5  F01B         	call	_putch
  4060  002E04  EF51  F017         	goto	l1017
  4061  002E08                     l2524:
  4062  002E08  EE20 F009          	lfsr	2,9
  4063  002E0C  5003               	movf	fputc@fp^0,w,c
  4064  002E0E  26D9               	addwf	fsr2l,f,c
  4065  002E10  5004               	movf	(fputc@fp+1)^0,w,c
  4066  002E12  22DA               	addwfc	fsr2h,f,c
  4067  002E14  50DE               	movf	postinc2,w,c
  4068  002E16  10DE               	iorwf	postinc2,w,c
  4069  002E18  B4D8               	btfsc	status,2,c
  4070  002E1A  EF11  F017         	goto	u2361
  4071  002E1E  EF13  F017         	goto	u2360
  4072  002E22                     u2361:
  4073  002E22  EF2E  F017         	goto	l2528
  4074  002E26                     u2360:
  4075  002E26  EE20 F009          	lfsr	2,9
  4076  002E2A  5003               	movf	fputc@fp^0,w,c
  4077  002E2C  26D9               	addwf	fsr2l,f,c
  4078  002E2E  5004               	movf	(fputc@fp+1)^0,w,c
  4079  002E30  22DA               	addwfc	fsr2h,f,c
  4080  002E32  EE10 F003          	lfsr	1,3
  4081  002E36  5003               	movf	fputc@fp^0,w,c
  4082  002E38  26E1               	addwf	fsr1l,f,c
  4083  002E3A  5004               	movf	(fputc@fp+1)^0,w,c
  4084  002E3C  22E2               	addwfc	fsr1h,f,c
  4085  002E3E  50DE               	movf	postinc2,w,c
  4086  002E40  5CE6               	subwf	postinc1,w,c
  4087  002E42  50E6               	movf	postinc1,w,c
  4088  002E44  0A80               	xorlw	128
  4089  002E46  6E09               	movwf	(??_fputc+4)^0,c
  4090  002E48  50DE               	movf	postinc2,w,c
  4091  002E4A  0A80               	xorlw	128
  4092  002E4C  5809               	subwfb	(??_fputc+4)^0,w,c
  4093  002E4E  B0D8               	btfsc	status,0,c
  4094  002E50  EF2C  F017         	goto	u2371
  4095  002E54  EF2E  F017         	goto	u2370
  4096  002E58                     u2371:
  4097  002E58  EF51  F017         	goto	l1017
  4098  002E5C                     u2370:
  4099  002E5C                     l2528:
  4100  002E5C  EE20 F003          	lfsr	2,3
  4101  002E60  5003               	movf	fputc@fp^0,w,c
  4102  002E62  26D9               	addwf	fsr2l,f,c
  4103  002E64  5004               	movf	(fputc@fp+1)^0,w,c
  4104  002E66  22DA               	addwfc	fsr2h,f,c
  4105  002E68  CFDE F005          	movff	postinc2,??_fputc
  4106  002E6C  CFDD F006          	movff	postdec2,??_fputc+1
  4107  002E70  C003  FFD9         	movff	fputc@fp,fsr2l
  4108  002E74  C004  FFDA         	movff	fputc@fp+1,fsr2h
  4109  002E78  CFDE F007          	movff	postinc2,??_fputc+2
  4110  002E7C  CFDD F008          	movff	postdec2,??_fputc+3
  4111  002E80  5005               	movf	??_fputc^0,w,c
  4112  002E82  2407               	addwf	(??_fputc+2)^0,w,c
  4113  002E84  6ED9               	movwf	fsr2l,c
  4114  002E86  5006               	movf	(??_fputc+1)^0,w,c
  4115  002E88  2008               	addwfc	(??_fputc+3)^0,w,c
  4116  002E8A  6EDA               	movwf	fsr2h,c
  4117  002E8C  C001  FFDF         	movff	fputc@c,indf2
  4118  002E90  EE20 F003          	lfsr	2,3
  4119  002E94  5003               	movf	fputc@fp^0,w,c
  4120  002E96  26D9               	addwf	fsr2l,f,c
  4121  002E98  5004               	movf	(fputc@fp+1)^0,w,c
  4122  002E9A  22DA               	addwfc	fsr2h,f,c
  4123  002E9C  2ADE               	incf	postinc2,f,c
  4124  002E9E  0E00               	movlw	0
  4125  002EA0  22DD               	addwfc	postdec2,f,c
  4126  002EA2                     l1017:
  4127  002EA2  0012               	return		;funcret
  4128  002EA4                     __end_of_fputc:
  4129                           	callstack 0
  4130                           
  4131 ;; *************** function _putch *****************
  4132 ;; Defined at:
  4133 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\putch.c"
  4134 ;; Parameters:    Size  Location     Type
  4135 ;;  c               1    wreg     unsigned char 
  4136 ;; Auto vars:     Size  Location     Type
  4137 ;;  c               1    0[COMRAM] unsigned char 
  4138 ;; Return value:  Size  Location     Type
  4139 ;;                  1    wreg      void 
  4140 ;; Registers used:
  4141 ;;		wreg
  4142 ;; Tracked objects:
  4143 ;;		On entry : 0/0
  4144 ;;		On exit  : 0/0
  4145 ;;		Unchanged: 0/0
  4146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4147 ;;      Params:         0       0       0       0       0       0       0       0       0
  4148 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4149 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4150 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4151 ;;Total ram usage:        0 bytes
  4152 ;; Hardware stack levels used: 1
  4153 ;; This function calls:
  4154 ;;		Nothing
  4155 ;; This function is called by:
  4156 ;;		_fputc
  4157 ;; This function uses a non-reentrant model
  4158 ;;
  4159                           
  4160                           	psect	text13
  4161  00376A                     __ptext13:
  4162                           	callstack 0
  4163  00376A                     _putch:
  4164                           	callstack 26
  4165  00376A  0012               	return		;funcret
  4166  00376C                     __end_of_putch:
  4167                           	callstack 0
  4168                           
  4169 ;; *************** function _floorf *****************
  4170 ;; Defined at:
  4171 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\floorf.c"
  4172 ;; Parameters:    Size  Location     Type
  4173 ;;  x               4   25[COMRAM] float 
  4174 ;; Auto vars:     Size  Location     Type
  4175 ;;  u               4   41[COMRAM] struct .
  4176 ;;  m               4   35[COMRAM] unsigned long 
  4177 ;;  e               2   39[COMRAM] int 
  4178 ;; Return value:  Size  Location     Type
  4179 ;;                  4   25[COMRAM] float 
  4180 ;; Registers used:
  4181 ;;		wreg, status,2, status,0
  4182 ;; Tracked objects:
  4183 ;;		On entry : 0/0
  4184 ;;		On exit  : 0/0
  4185 ;;		Unchanged: 0/0
  4186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4187 ;;      Params:         4       0       0       0       0       0       0       0       0
  4188 ;;      Locals:        10       0       0       0       0       0       0       0       0
  4189 ;;      Temps:          6       0       0       0       0       0       0       0       0
  4190 ;;      Totals:        20       0       0       0       0       0       0       0       0
  4191 ;;Total ram usage:       20 bytes
  4192 ;; Hardware stack levels used: 1
  4193 ;; This function calls:
  4194 ;;		Nothing
  4195 ;; This function is called by:
  4196 ;;		_efgtoa
  4197 ;; This function uses a non-reentrant model
  4198 ;;
  4199                           
  4200                           	psect	text14
  4201  0024E0                     __ptext14:
  4202                           	callstack 0
  4203  0024E0                     _floorf:
  4204                           	callstack 26
  4205  0024E0  C0B7  F02A         	movff	floorf@F526,floorf@u
  4206  0024E4  C0B8  F02B         	movff	floorf@F526+1,floorf@u+1
  4207  0024E8  C0B9  F02C         	movff	floorf@F526+2,floorf@u+2
  4208  0024EC  C0BA  F02D         	movff	floorf@F526+3,floorf@u+3
  4209  0024F0  C01A  F02A         	movff	floorf@x,floorf@u
  4210  0024F4  C01B  F02B         	movff	floorf@x+1,floorf@u+1
  4211  0024F8  C01C  F02C         	movff	floorf@x+2,floorf@u+2
  4212  0024FC  C01D  F02D         	movff	floorf@x+3,floorf@u+3
  4213  002500  0E81               	movlw	129
  4214  002502  6E1E               	movwf	??_floorf^0,c
  4215  002504  0EFF               	movlw	255
  4216  002506  6E1F               	movwf	(??_floorf+1)^0,c
  4217  002508  C02A  F020         	movff	floorf@u,??_floorf+2
  4218  00250C  C02B  F021         	movff	floorf@u+1,??_floorf+3
  4219  002510  C02C  F022         	movff	floorf@u+2,??_floorf+4
  4220  002514  C02D  F023         	movff	floorf@u+3,??_floorf+5
  4221  002518  0E18               	movlw	24
  4222  00251A  EF94  F012         	goto	u3650
  4223  00251E                     u3655:
  4224  00251E  90D8               	bcf	status,0,c
  4225  002520  3223               	rrcf	(??_floorf+5)^0,f,c
  4226  002522  3222               	rrcf	(??_floorf+4)^0,f,c
  4227  002524  3221               	rrcf	(??_floorf+3)^0,f,c
  4228  002526  3220               	rrcf	(??_floorf+2)^0,f,c
  4229  002528                     u3650:
  4230  002528  2EE8               	decfsz	wreg,f,c
  4231  00252A  EF8F  F012         	goto	u3655
  4232  00252E  5020               	movf	(??_floorf+2)^0,w,c
  4233  002530  241E               	addwf	??_floorf^0,w,c
  4234  002532  6E28               	movwf	floorf@e^0,c
  4235  002534  0E00               	movlw	0
  4236  002536  201F               	addwfc	(??_floorf+1)^0,w,c
  4237  002538  6E29               	movwf	(floorf@e+1)^0,c
  4238  00253A  BE29               	btfsc	(floorf@e+1)^0,7,c
  4239  00253C  EFA9  F012         	goto	u3661
  4240  002540  5029               	movf	(floorf@e+1)^0,w,c
  4241  002542  E109               	bnz	u3660
  4242  002544  0E17               	movlw	23
  4243  002546  5C28               	subwf	floorf@e^0,w,c
  4244  002548  A0D8               	btfss	status,0,c
  4245  00254A  EFA9  F012         	goto	u3661
  4246  00254E  EFAB  F012         	goto	u3660
  4247  002552                     u3661:
  4248  002552  EFB5  F012         	goto	l3270
  4249  002556                     u3660:
  4250  002556                     l3268:
  4251  002556  C01A  F01A         	movff	floorf@x,?_floorf
  4252  00255A  C01B  F01B         	movff	floorf@x+1,?_floorf+1
  4253  00255E  C01C  F01C         	movff	floorf@x+2,?_floorf+2
  4254  002562  C01D  F01D         	movff	floorf@x+3,?_floorf+3
  4255  002566  EF78  F013         	goto	l978
  4256  00256A                     l3270:
  4257  00256A  BE29               	btfsc	(floorf@e+1)^0,7,c
  4258  00256C  EFBA  F012         	goto	u3671
  4259  002570  EFBC  F012         	goto	u3670
  4260  002574                     u3671:
  4261  002574  EF2C  F013         	goto	l3280
  4262  002578                     u3670:
  4263  002578  C028  F01E         	movff	floorf@e,??_floorf
  4264  00257C  0EFF               	movlw	255
  4265  00257E  6E1F               	movwf	(??_floorf+1)^0,c
  4266  002580  0EFF               	movlw	255
  4267  002582  6E20               	movwf	(??_floorf+2)^0,c
  4268  002584  0E7F               	movlw	127
  4269  002586  6E21               	movwf	(??_floorf+3)^0,c
  4270  002588  0E00               	movlw	0
  4271  00258A  6E22               	movwf	(??_floorf+4)^0,c
  4272  00258C                     u3685:
  4273  00258C  661E               	tstfsz	??_floorf^0,c
  4274  00258E  EFCB  F012         	goto	u3686
  4275  002592  EFD3  F012         	goto	u3687
  4276  002596                     u3686:
  4277  002596  3422               	rlcf	(??_floorf+4)^0,w,c
  4278  002598  3222               	rrcf	(??_floorf+4)^0,f,c
  4279  00259A  3221               	rrcf	(??_floorf+3)^0,f,c
  4280  00259C  3220               	rrcf	(??_floorf+2)^0,f,c
  4281  00259E  321F               	rrcf	(??_floorf+1)^0,f,c
  4282  0025A0  2E1E               	decfsz	??_floorf^0,f,c
  4283  0025A2  EFC6  F012         	goto	u3685
  4284  0025A6                     u3687:
  4285  0025A6  C01F  F024         	movff	??_floorf+1,floorf@m
  4286  0025AA  C020  F025         	movff	??_floorf+2,floorf@m+1
  4287  0025AE  C021  F026         	movff	??_floorf+3,floorf@m+2
  4288  0025B2  C022  F027         	movff	??_floorf+4,floorf@m+3
  4289  0025B6  5024               	movf	floorf@m^0,w,c
  4290  0025B8  142A               	andwf	floorf@u^0,w,c
  4291  0025BA  6E1E               	movwf	??_floorf^0,c
  4292  0025BC  5025               	movf	(floorf@m+1)^0,w,c
  4293  0025BE  142B               	andwf	(floorf@u+1)^0,w,c
  4294  0025C0  6E1F               	movwf	(??_floorf+1)^0,c
  4295  0025C2  5026               	movf	(floorf@m+2)^0,w,c
  4296  0025C4  142C               	andwf	(floorf@u+2)^0,w,c
  4297  0025C6  6E20               	movwf	(??_floorf+2)^0,c
  4298  0025C8  5027               	movf	(floorf@m+3)^0,w,c
  4299  0025CA  142D               	andwf	(floorf@u+3)^0,w,c
  4300  0025CC  6E21               	movwf	(??_floorf+3)^0,c
  4301  0025CE  501E               	movf	??_floorf^0,w,c
  4302  0025D0  101F               	iorwf	(??_floorf+1)^0,w,c
  4303  0025D2  1020               	iorwf	(??_floorf+2)^0,w,c
  4304  0025D4  1021               	iorwf	(??_floorf+3)^0,w,c
  4305  0025D6  A4D8               	btfss	status,2,c
  4306  0025D8  EFF0  F012         	goto	u3691
  4307  0025DC  EFF2  F012         	goto	u3690
  4308  0025E0                     u3691:
  4309  0025E0  EFF4  F012         	goto	l3276
  4310  0025E4                     u3690:
  4311  0025E4  EFAB  F012         	goto	l3268
  4312  0025E8                     l3276:
  4313  0025E8  C02A  F01E         	movff	floorf@u,??_floorf
  4314  0025EC  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  4315  0025F0  C02C  F020         	movff	floorf@u+2,??_floorf+2
  4316  0025F4  C02D  F021         	movff	floorf@u+3,??_floorf+3
  4317  0025F8  0E20               	movlw	32
  4318  0025FA  EF04  F013         	goto	u3700
  4319  0025FE                     u3705:
  4320  0025FE  90D8               	bcf	status,0,c
  4321  002600  3221               	rrcf	(??_floorf+3)^0,f,c
  4322  002602  3220               	rrcf	(??_floorf+2)^0,f,c
  4323  002604  321F               	rrcf	(??_floorf+1)^0,f,c
  4324  002606  321E               	rrcf	??_floorf^0,f,c
  4325  002608                     u3700:
  4326  002608  2EE8               	decfsz	wreg,f,c
  4327  00260A  EFFF  F012         	goto	u3705
  4328  00260E  501E               	movf	??_floorf^0,w,c
  4329  002610  101F               	iorwf	(??_floorf+1)^0,w,c
  4330  002612  1020               	iorwf	(??_floorf+2)^0,w,c
  4331  002614  1021               	iorwf	(??_floorf+3)^0,w,c
  4332  002616  B4D8               	btfsc	status,2,c
  4333  002618  EF10  F013         	goto	u3711
  4334  00261C  EF12  F013         	goto	u3710
  4335  002620                     u3711:
  4336  002620  EF1A  F013         	goto	l981
  4337  002624                     u3710:
  4338  002624  5024               	movf	floorf@m^0,w,c
  4339  002626  262A               	addwf	floorf@u^0,f,c
  4340  002628  5025               	movf	(floorf@m+1)^0,w,c
  4341  00262A  222B               	addwfc	(floorf@u+1)^0,f,c
  4342  00262C  5026               	movf	(floorf@m+2)^0,w,c
  4343  00262E  222C               	addwfc	(floorf@u+2)^0,f,c
  4344  002630  5027               	movf	(floorf@m+3)^0,w,c
  4345  002632  222D               	addwfc	(floorf@u+3)^0,f,c
  4346  002634                     l981:
  4347  002634  1C24               	comf	floorf@m^0,w,c
  4348  002636  6E1E               	movwf	??_floorf^0,c
  4349  002638  1C25               	comf	(floorf@m+1)^0,w,c
  4350  00263A  6E1F               	movwf	(??_floorf+1)^0,c
  4351  00263C  1C26               	comf	(floorf@m+2)^0,w,c
  4352  00263E  6E20               	movwf	(??_floorf+2)^0,c
  4353  002640  1C27               	comf	(floorf@m+3)^0,w,c
  4354  002642  6E21               	movwf	(??_floorf+3)^0,c
  4355  002644  501E               	movf	??_floorf^0,w,c
  4356  002646  162A               	andwf	floorf@u^0,f,c
  4357  002648  501F               	movf	(??_floorf+1)^0,w,c
  4358  00264A  162B               	andwf	(floorf@u+1)^0,f,c
  4359  00264C  5020               	movf	(??_floorf+2)^0,w,c
  4360  00264E  162C               	andwf	(floorf@u+2)^0,f,c
  4361  002650  5021               	movf	(??_floorf+3)^0,w,c
  4362  002652  162D               	andwf	(floorf@u+3)^0,f,c
  4363  002654  EF70  F013         	goto	l3288
  4364  002658                     l3280:
  4365  002658  C02A  F01E         	movff	floorf@u,??_floorf
  4366  00265C  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  4367  002660  C02C  F020         	movff	floorf@u+2,??_floorf+2
  4368  002664  C02D  F021         	movff	floorf@u+3,??_floorf+3
  4369  002668  0E20               	movlw	32
  4370  00266A  EF3C  F013         	goto	u3720
  4371  00266E                     u3725:
  4372  00266E  90D8               	bcf	status,0,c
  4373  002670  3221               	rrcf	(??_floorf+3)^0,f,c
  4374  002672  3220               	rrcf	(??_floorf+2)^0,f,c
  4375  002674  321F               	rrcf	(??_floorf+1)^0,f,c
  4376  002676  321E               	rrcf	??_floorf^0,f,c
  4377  002678                     u3720:
  4378  002678  2EE8               	decfsz	wreg,f,c
  4379  00267A  EF37  F013         	goto	u3725
  4380  00267E  501E               	movf	??_floorf^0,w,c
  4381  002680  101F               	iorwf	(??_floorf+1)^0,w,c
  4382  002682  1020               	iorwf	(??_floorf+2)^0,w,c
  4383  002684  1021               	iorwf	(??_floorf+3)^0,w,c
  4384  002686  A4D8               	btfss	status,2,c
  4385  002688  EF48  F013         	goto	u3731
  4386  00268C  EF4A  F013         	goto	u3730
  4387  002690                     u3731:
  4388  002690  EF54  F013         	goto	l3284
  4389  002694                     u3730:
  4390  002694  0E00               	movlw	0
  4391  002696  6E2A               	movwf	floorf@u^0,c
  4392  002698  0E00               	movlw	0
  4393  00269A  6E2B               	movwf	(floorf@u+1)^0,c
  4394  00269C  0E00               	movlw	0
  4395  00269E  6E2C               	movwf	(floorf@u+2)^0,c
  4396  0026A0  0E00               	movlw	0
  4397  0026A2  6E2D               	movwf	(floorf@u+3)^0,c
  4398  0026A4  EF70  F013         	goto	l3288
  4399  0026A8                     l3284:
  4400  0026A8  90D8               	bcf	status,0,c
  4401  0026AA  342A               	rlcf	floorf@u^0,w,c
  4402  0026AC  6E1E               	movwf	??_floorf^0,c
  4403  0026AE  342B               	rlcf	(floorf@u+1)^0,w,c
  4404  0026B0  6E1F               	movwf	(??_floorf+1)^0,c
  4405  0026B2  342C               	rlcf	(floorf@u+2)^0,w,c
  4406  0026B4  6E20               	movwf	(??_floorf+2)^0,c
  4407  0026B6  342D               	rlcf	(floorf@u+3)^0,w,c
  4408  0026B8  6E21               	movwf	(??_floorf+3)^0,c
  4409  0026BA  501E               	movf	??_floorf^0,w,c
  4410  0026BC  101F               	iorwf	(??_floorf+1)^0,w,c
  4411  0026BE  1020               	iorwf	(??_floorf+2)^0,w,c
  4412  0026C0  1021               	iorwf	(??_floorf+3)^0,w,c
  4413  0026C2  B4D8               	btfsc	status,2,c
  4414  0026C4  EF66  F013         	goto	u3741
  4415  0026C8  EF68  F013         	goto	u3740
  4416  0026CC                     u3741:
  4417  0026CC  EF70  F013         	goto	l3288
  4418  0026D0                     u3740:
  4419  0026D0  0E00               	movlw	0
  4420  0026D2  6E2A               	movwf	floorf@u^0,c
  4421  0026D4  0E00               	movlw	0
  4422  0026D6  6E2B               	movwf	(floorf@u+1)^0,c
  4423  0026D8  0E80               	movlw	128
  4424  0026DA  6E2C               	movwf	(floorf@u+2)^0,c
  4425  0026DC  0EBF               	movlw	191
  4426  0026DE  6E2D               	movwf	(floorf@u+3)^0,c
  4427  0026E0                     l3288:
  4428  0026E0  C02A  F01A         	movff	floorf@u,?_floorf
  4429  0026E4  C02B  F01B         	movff	floorf@u+1,?_floorf+1
  4430  0026E8  C02C  F01C         	movff	floorf@u+2,?_floorf+2
  4431  0026EC  C02D  F01D         	movff	floorf@u+3,?_floorf+3
  4432  0026F0                     l978:
  4433  0026F0  0012               	return		;funcret
  4434  0026F2                     __end_of_floorf:
  4435                           	callstack 0
  4436                           
  4437 ;; *************** function ___fpclassifyf *****************
  4438 ;; Defined at:
  4439 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\__fpclassifyf.c"
  4440 ;; Parameters:    Size  Location     Type
  4441 ;;  x               4    0[COMRAM] float 
  4442 ;; Auto vars:     Size  Location     Type
  4443 ;;  u               4   10[COMRAM] struct .
  4444 ;;  e               2    8[COMRAM] int 
  4445 ;; Return value:  Size  Location     Type
  4446 ;;                  2    0[COMRAM] int 
  4447 ;; Registers used:
  4448 ;;		wreg, status,2, status,0
  4449 ;; Tracked objects:
  4450 ;;		On entry : 0/0
  4451 ;;		On exit  : 0/0
  4452 ;;		Unchanged: 0/0
  4453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4454 ;;      Params:         4       0       0       0       0       0       0       0       0
  4455 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4456 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4457 ;;      Totals:        14       0       0       0       0       0       0       0       0
  4458 ;;Total ram usage:       14 bytes
  4459 ;; Hardware stack levels used: 1
  4460 ;; This function calls:
  4461 ;;		Nothing
  4462 ;; This function is called by:
  4463 ;;		_efgtoa
  4464 ;; This function uses a non-reentrant model
  4465 ;;
  4466                           
  4467                           	psect	text15
  4468  002C06                     __ptext15:
  4469                           	callstack 0
  4470  002C06                     ___fpclassifyf:
  4471                           	callstack 26
  4472  002C06  C0BB  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  4473  002C0A  C0BC  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  4474  002C0E  C0BD  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  4475  002C12  C0BE  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  4476  002C16  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  4477  002C1A  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  4478  002C1E  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  4479  002C22  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  4480  002C26  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4481  002C2A  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4482  002C2E  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4483  002C32  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4484  002C36  0E18               	movlw	24
  4485  002C38  EF23  F016         	goto	u3550
  4486  002C3C                     u3555:
  4487  002C3C  90D8               	bcf	status,0,c
  4488  002C3E  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  4489  002C40  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  4490  002C42  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  4491  002C44  3205               	rrcf	??___fpclassifyf^0,f,c
  4492  002C46                     u3550:
  4493  002C46  2EE8               	decfsz	wreg,f,c
  4494  002C48  EF1E  F016         	goto	u3555
  4495  002C4C  5005               	movf	??___fpclassifyf^0,w,c
  4496  002C4E  6E09               	movwf	___fpclassifyf@e^0,c
  4497  002C50  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  4498  002C52  5009               	movf	___fpclassifyf@e^0,w,c
  4499  002C54  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4500  002C56  A4D8               	btfss	status,2,c
  4501  002C58  EF30  F016         	goto	u3561
  4502  002C5C  EF32  F016         	goto	u3560
  4503  002C60                     u3561:
  4504  002C60  EF52  F016         	goto	l3240
  4505  002C64                     u3560:
  4506  002C64  90D8               	bcf	status,0,c
  4507  002C66  340B               	rlcf	___fpclassifyf@u^0,w,c
  4508  002C68  6E05               	movwf	??___fpclassifyf^0,c
  4509  002C6A  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  4510  002C6C  6E06               	movwf	(??___fpclassifyf+1)^0,c
  4511  002C6E  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  4512  002C70  6E07               	movwf	(??___fpclassifyf+2)^0,c
  4513  002C72  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  4514  002C74  6E08               	movwf	(??___fpclassifyf+3)^0,c
  4515  002C76  5005               	movf	??___fpclassifyf^0,w,c
  4516  002C78  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  4517  002C7A  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  4518  002C7C  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  4519  002C7E  A4D8               	btfss	status,2,c
  4520  002C80  EF44  F016         	goto	u3571
  4521  002C84  EF46  F016         	goto	u3570
  4522  002C88                     u3571:
  4523  002C88  EF4C  F016         	goto	l3236
  4524  002C8C                     u3570:
  4525  002C8C  0E00               	movlw	0
  4526  002C8E  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4527  002C90  0E02               	movlw	2
  4528  002C92  6E01               	movwf	?___fpclassifyf^0,c
  4529  002C94  EF81  F016         	goto	l946
  4530  002C98                     l3236:
  4531  002C98  0E00               	movlw	0
  4532  002C9A  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4533  002C9C  0E03               	movlw	3
  4534  002C9E  6E01               	movwf	?___fpclassifyf^0,c
  4535  002CA0  EF81  F016         	goto	l946
  4536  002CA4                     l3240:
  4537  002CA4  2809               	incf	___fpclassifyf@e^0,w,c
  4538  002CA6  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4539  002CA8  A4D8               	btfss	status,2,c
  4540  002CAA  EF59  F016         	goto	u3581
  4541  002CAE  EF5B  F016         	goto	u3580
  4542  002CB2                     u3581:
  4543  002CB2  EF7D  F016         	goto	l3246
  4544  002CB6                     u3580:
  4545  002CB6  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4546  002CBA  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4547  002CBE  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4548  002CC2  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4549  002CC6  0E09               	movlw	9
  4550  002CC8                     u3595:
  4551  002CC8  90D8               	bcf	status,0,c
  4552  002CCA  3605               	rlcf	??___fpclassifyf^0,f,c
  4553  002CCC  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  4554  002CCE  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  4555  002CD0  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  4556  002CD2  2EE8               	decfsz	wreg,f,c
  4557  002CD4  EF64  F016         	goto	u3595
  4558  002CD8  5005               	movf	??___fpclassifyf^0,w,c
  4559  002CDA  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  4560  002CDC  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  4561  002CDE  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  4562  002CE0  B4D8               	btfsc	status,2,c
  4563  002CE2  EF75  F016         	goto	u3601
  4564  002CE6  EF78  F016         	goto	u3600
  4565  002CEA                     u3601:
  4566  002CEA  0E01               	movlw	1
  4567  002CEC  EF79  F016         	goto	u3610
  4568  002CF0                     u3600:
  4569  002CF0  0E00               	movlw	0
  4570  002CF2                     u3610:
  4571  002CF2  6E01               	movwf	?___fpclassifyf^0,c
  4572  002CF4  6A02               	clrf	(?___fpclassifyf+1)^0,c
  4573  002CF6  EF81  F016         	goto	l946
  4574  002CFA                     l3246:
  4575  002CFA  0E00               	movlw	0
  4576  002CFC  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4577  002CFE  0E04               	movlw	4
  4578  002D00  6E01               	movwf	?___fpclassifyf^0,c
  4579  002D02                     l946:
  4580  002D02  0012               	return		;funcret
  4581  002D04                     __end_of___fpclassifyf:
  4582                           	callstack 0
  4583                           
  4584 ;; *************** function ___fltol *****************
  4585 ;; Defined at:
  4586 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\fltol.c"
  4587 ;; Parameters:    Size  Location     Type
  4588 ;;  f1              4    0[COMRAM] int 
  4589 ;; Auto vars:     Size  Location     Type
  4590 ;;  exp1            1    9[COMRAM] unsigned char 
  4591 ;;  sign1           1    8[COMRAM] unsigned char 
  4592 ;; Return value:  Size  Location     Type
  4593 ;;                  4    0[COMRAM] long 
  4594 ;; Registers used:
  4595 ;;		wreg, status,2, status,0
  4596 ;; Tracked objects:
  4597 ;;		On entry : 0/0
  4598 ;;		On exit  : 0/0
  4599 ;;		Unchanged: 0/0
  4600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4601 ;;      Params:         4       0       0       0       0       0       0       0       0
  4602 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4603 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4604 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4605 ;;Total ram usage:       10 bytes
  4606 ;; Hardware stack levels used: 1
  4607 ;; This function calls:
  4608 ;;		Nothing
  4609 ;; This function is called by:
  4610 ;;		_efgtoa
  4611 ;; This function uses a non-reentrant model
  4612 ;;
  4613                           
  4614                           	psect	text16
  4615  0029FC                     __ptext16:
  4616                           	callstack 0
  4617  0029FC                     ___fltol:
  4618                           	callstack 26
  4619  0029FC  3403               	rlcf	(___fltol@f1+2)^0,w,c
  4620  0029FE  3404               	rlcf	(___fltol@f1+3)^0,w,c
  4621  002A00  6E0A               	movwf	___fltol@exp1^0,c
  4622  002A02  500A               	movf	___fltol@exp1^0,w,c
  4623  002A04  A4D8               	btfss	status,2,c
  4624  002A06  EF07  F015         	goto	u3441
  4625  002A0A  EF09  F015         	goto	u3440
  4626  002A0E                     u3441:
  4627  002A0E  EF13  F015         	goto	l3168
  4628  002A12                     u3440:
  4629  002A12                     l3164:
  4630  002A12  0E00               	movlw	0
  4631  002A14  6E01               	movwf	?___fltol^0,c
  4632  002A16  0E00               	movlw	0
  4633  002A18  6E02               	movwf	(?___fltol+1)^0,c
  4634  002A1A  0E00               	movlw	0
  4635  002A1C  6E03               	movwf	(?___fltol+2)^0,c
  4636  002A1E  0E00               	movlw	0
  4637  002A20  6E04               	movwf	(?___fltol+3)^0,c
  4638  002A22  EF80  F015         	goto	l395
  4639  002A26                     l3168:
  4640  002A26  C001  F005         	movff	___fltol@f1,??___fltol
  4641  002A2A  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  4642  002A2E  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  4643  002A32  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  4644  002A36  0E20               	movlw	32
  4645  002A38  EF23  F015         	goto	u3450
  4646  002A3C                     u3455:
  4647  002A3C  90D8               	bcf	status,0,c
  4648  002A3E  3208               	rrcf	(??___fltol+3)^0,f,c
  4649  002A40  3207               	rrcf	(??___fltol+2)^0,f,c
  4650  002A42  3206               	rrcf	(??___fltol+1)^0,f,c
  4651  002A44  3205               	rrcf	??___fltol^0,f,c
  4652  002A46                     u3450:
  4653  002A46  2EE8               	decfsz	wreg,f,c
  4654  002A48  EF1E  F015         	goto	u3455
  4655  002A4C  5005               	movf	??___fltol^0,w,c
  4656  002A4E  6E09               	movwf	___fltol@sign1^0,c
  4657  002A50  8E03               	bsf	(___fltol@f1+2)^0,7,c
  4658  002A52  0EFF               	movlw	255
  4659  002A54  1601               	andwf	___fltol@f1^0,f,c
  4660  002A56  0EFF               	movlw	255
  4661  002A58  1602               	andwf	(___fltol@f1+1)^0,f,c
  4662  002A5A  0EFF               	movlw	255
  4663  002A5C  1603               	andwf	(___fltol@f1+2)^0,f,c
  4664  002A5E  0E00               	movlw	0
  4665  002A60  1604               	andwf	(___fltol@f1+3)^0,f,c
  4666  002A62  0E96               	movlw	150
  4667  002A64  5E0A               	subwf	___fltol@exp1^0,f,c
  4668  002A66  BE0A               	btfsc	___fltol@exp1^0,7,c
  4669  002A68  EF3A  F015         	goto	u3460
  4670  002A6C  EF38  F015         	goto	u3461
  4671  002A70                     u3461:
  4672  002A70  EF50  F015         	goto	l3188
  4673  002A74                     u3460:
  4674  002A74  500A               	movf	___fltol@exp1^0,w,c
  4675  002A76  0A80               	xorlw	128
  4676  002A78  0F97               	addlw	151
  4677  002A7A  B0D8               	btfsc	status,0,c
  4678  002A7C  EF42  F015         	goto	u3471
  4679  002A80  EF44  F015         	goto	u3470
  4680  002A84                     u3471:
  4681  002A84  EF46  F015         	goto	l3184
  4682  002A88                     u3470:
  4683  002A88  EF09  F015         	goto	l3164
  4684  002A8C                     l3184:
  4685  002A8C  90D8               	bcf	status,0,c
  4686  002A8E  3204               	rrcf	(___fltol@f1+3)^0,f,c
  4687  002A90  3203               	rrcf	(___fltol@f1+2)^0,f,c
  4688  002A92  3202               	rrcf	(___fltol@f1+1)^0,f,c
  4689  002A94  3201               	rrcf	___fltol@f1^0,f,c
  4690  002A96  3E0A               	incfsz	___fltol@exp1^0,f,c
  4691  002A98  EF46  F015         	goto	l3184
  4692  002A9C  EF68  F015         	goto	l3198
  4693  002AA0                     l3188:
  4694  002AA0  0E1F               	movlw	31
  4695  002AA2  640A               	cpfsgt	___fltol@exp1^0,c
  4696  002AA4  EF56  F015         	goto	u3481
  4697  002AA8  EF58  F015         	goto	u3480
  4698  002AAC                     u3481:
  4699  002AAC  EF60  F015         	goto	l3196
  4700  002AB0                     u3480:
  4701  002AB0  EF09  F015         	goto	l3164
  4702  002AB4                     l3194:
  4703  002AB4  90D8               	bcf	status,0,c
  4704  002AB6  3601               	rlcf	___fltol@f1^0,f,c
  4705  002AB8  3602               	rlcf	(___fltol@f1+1)^0,f,c
  4706  002ABA  3603               	rlcf	(___fltol@f1+2)^0,f,c
  4707  002ABC  3604               	rlcf	(___fltol@f1+3)^0,f,c
  4708  002ABE  060A               	decf	___fltol@exp1^0,f,c
  4709  002AC0                     l3196:
  4710  002AC0  500A               	movf	___fltol@exp1^0,w,c
  4711  002AC2  A4D8               	btfss	status,2,c
  4712  002AC4  EF66  F015         	goto	u3491
  4713  002AC8  EF68  F015         	goto	u3490
  4714  002ACC                     u3491:
  4715  002ACC  EF5A  F015         	goto	l3194
  4716  002AD0                     u3490:
  4717  002AD0                     l3198:
  4718  002AD0  5009               	movf	___fltol@sign1^0,w,c
  4719  002AD2  B4D8               	btfsc	status,2,c
  4720  002AD4  EF6E  F015         	goto	u3501
  4721  002AD8  EF70  F015         	goto	u3500
  4722  002ADC                     u3501:
  4723  002ADC  EF78  F015         	goto	l3202
  4724  002AE0                     u3500:
  4725  002AE0  1E04               	comf	(___fltol@f1+3)^0,f,c
  4726  002AE2  1E03               	comf	(___fltol@f1+2)^0,f,c
  4727  002AE4  1E02               	comf	(___fltol@f1+1)^0,f,c
  4728  002AE6  6C01               	negf	___fltol@f1^0,c
  4729  002AE8  0E00               	movlw	0
  4730  002AEA  2202               	addwfc	(___fltol@f1+1)^0,f,c
  4731  002AEC  2203               	addwfc	(___fltol@f1+2)^0,f,c
  4732  002AEE  2204               	addwfc	(___fltol@f1+3)^0,f,c
  4733  002AF0                     l3202:
  4734  002AF0  C001  F001         	movff	___fltol@f1,?___fltol
  4735  002AF4  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  4736  002AF8  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  4737  002AFC  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  4738  002B00                     l395:
  4739  002B00  0012               	return		;funcret
  4740  002B02                     __end_of___fltol:
  4741                           	callstack 0
  4742                           
  4743 ;; *************** function ___flsub *****************
  4744 ;; Defined at:
  4745 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcadd.c"
  4746 ;; Parameters:    Size  Location     Type
  4747 ;;  b               4   39[COMRAM] long 
  4748 ;;  a               4   43[COMRAM] long 
  4749 ;; Auto vars:     Size  Location     Type
  4750 ;;		None
  4751 ;; Return value:  Size  Location     Type
  4752 ;;                  4   39[COMRAM] long 
  4753 ;; Registers used:
  4754 ;;		wreg, status,2, status,0, cstack
  4755 ;; Tracked objects:
  4756 ;;		On entry : 0/0
  4757 ;;		On exit  : 0/0
  4758 ;;		Unchanged: 0/0
  4759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4760 ;;      Params:         8       0       0       0       0       0       0       0       0
  4761 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4762 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4763 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4764 ;;Total ram usage:        8 bytes
  4765 ;; Hardware stack levels used: 1
  4766 ;; Hardware stack levels required when called: 1
  4767 ;; This function calls:
  4768 ;;		___fladd
  4769 ;; This function is called by:
  4770 ;;		_efgtoa
  4771 ;; This function uses a non-reentrant model
  4772 ;;
  4773                           
  4774                           	psect	text17
  4775  003506                     __ptext17:
  4776                           	callstack 0
  4777  003506                     ___flsub:
  4778                           	callstack 25
  4779  003506  0E00               	movlw	0
  4780  003508  1A2C               	xorwf	___flsub@a^0,f,c
  4781  00350A  0E00               	movlw	0
  4782  00350C  1A2D               	xorwf	(___flsub@a+1)^0,f,c
  4783  00350E  0E00               	movlw	0
  4784  003510  1A2E               	xorwf	(___flsub@a+2)^0,f,c
  4785  003512  0E80               	movlw	128
  4786  003514  1A2F               	xorwf	(___flsub@a+3)^0,f,c
  4787  003516  C028  F001         	movff	___flsub@b,___fladd@b
  4788  00351A  C029  F002         	movff	___flsub@b+1,___fladd@b+1
  4789  00351E  C02A  F003         	movff	___flsub@b+2,___fladd@b+2
  4790  003522  C02B  F004         	movff	___flsub@b+3,___fladd@b+3
  4791  003526  C02C  F005         	movff	___flsub@a,___fladd@a
  4792  00352A  C02D  F006         	movff	___flsub@a+1,___fladd@a+1
  4793  00352E  C02E  F007         	movff	___flsub@a+2,___fladd@a+2
  4794  003532  C02F  F008         	movff	___flsub@a+3,___fladd@a+3
  4795  003536  EC19  F00A         	call	___fladd	;wreg free
  4796  00353A  C001  F028         	movff	?___fladd,?___flsub
  4797  00353E  C002  F029         	movff	?___fladd+1,?___flsub+1
  4798  003542  C003  F02A         	movff	?___fladd+2,?___flsub+2
  4799  003546  C004  F02B         	movff	?___fladd+3,?___flsub+3
  4800  00354A  0012               	return		;funcret
  4801  00354C                     __end_of___flsub:
  4802                           	callstack 0
  4803                           
  4804 ;; *************** function ___fladd *****************
  4805 ;; Defined at:
  4806 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcadd.c"
  4807 ;; Parameters:    Size  Location     Type
  4808 ;;  b               4    0[COMRAM] long 
  4809 ;;  a               4    4[COMRAM] long 
  4810 ;; Auto vars:     Size  Location     Type
  4811 ;;  grs             1   15[COMRAM] unsigned char 
  4812 ;;  bexp            1   14[COMRAM] unsigned char 
  4813 ;;  aexp            1   13[COMRAM] unsigned char 
  4814 ;;  signs           1   12[COMRAM] unsigned char 
  4815 ;; Return value:  Size  Location     Type
  4816 ;;                  4    0[COMRAM] unsigned char 
  4817 ;; Registers used:
  4818 ;;		wreg, status,2, status,0
  4819 ;; Tracked objects:
  4820 ;;		On entry : 0/0
  4821 ;;		On exit  : 0/0
  4822 ;;		Unchanged: 0/0
  4823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4824 ;;      Params:         8       0       0       0       0       0       0       0       0
  4825 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4826 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4827 ;;      Totals:        16       0       0       0       0       0       0       0       0
  4828 ;;Total ram usage:       16 bytes
  4829 ;; Hardware stack levels used: 1
  4830 ;; This function calls:
  4831 ;;		Nothing
  4832 ;; This function is called by:
  4833 ;;		___flsub
  4834 ;;		_efgtoa
  4835 ;; This function uses a non-reentrant model
  4836 ;;
  4837                           
  4838                           	psect	text18
  4839  001432                     __ptext18:
  4840                           	callstack 0
  4841  001432                     ___fladd:
  4842                           	callstack 25
  4843  001432  5004               	movf	(___fladd@b+3)^0,w,c
  4844  001434  0B80               	andlw	128
  4845  001436  6E0D               	movwf	___fladd@signs^0,c
  4846  001438  5004               	movf	(___fladd@b+3)^0,w,c
  4847  00143A  2404               	addwf	(___fladd@b+3)^0,w,c
  4848  00143C  6E0F               	movwf	___fladd@bexp^0,c
  4849  00143E  AE03               	btfss	(___fladd@b+2)^0,7,c
  4850  001440  EF24  F00A         	goto	u2381
  4851  001444  EF26  F00A         	goto	u2380
  4852  001448                     u2381:
  4853  001448  EF27  F00A         	goto	l2538
  4854  00144C                     u2380:
  4855  00144C  800F               	bsf	___fladd@bexp^0,0,c
  4856  00144E                     l2538:
  4857  00144E  500F               	movf	___fladd@bexp^0,w,c
  4858  001450  B4D8               	btfsc	status,2,c
  4859  001452  EF2D  F00A         	goto	u2391
  4860  001456  EF2F  F00A         	goto	u2390
  4861  00145A                     u2391:
  4862  00145A  EF44  F00A         	goto	l2548
  4863  00145E                     u2390:
  4864  00145E  280F               	incf	___fladd@bexp^0,w,c
  4865  001460  A4D8               	btfss	status,2,c
  4866  001462  EF35  F00A         	goto	u2401
  4867  001466  EF37  F00A         	goto	u2400
  4868  00146A                     u2401:
  4869  00146A  EF3F  F00A         	goto	l2544
  4870  00146E                     u2400:
  4871  00146E  0E00               	movlw	0
  4872  001470  6E01               	movwf	___fladd@b^0,c
  4873  001472  0E00               	movlw	0
  4874  001474  6E02               	movwf	(___fladd@b+1)^0,c
  4875  001476  0E00               	movlw	0
  4876  001478  6E03               	movwf	(___fladd@b+2)^0,c
  4877  00147A  0E00               	movlw	0
  4878  00147C  6E04               	movwf	(___fladd@b+3)^0,c
  4879  00147E                     l2544:
  4880  00147E  8E03               	bsf	(___fladd@b+2)^0,7,c
  4881  001480  0E00               	movlw	0
  4882  001482  6E04               	movwf	(___fladd@b+3)^0,c
  4883  001484  EF4C  F00A         	goto	l2550
  4884  001488                     l2548:
  4885  001488  0E00               	movlw	0
  4886  00148A  6E01               	movwf	___fladd@b^0,c
  4887  00148C  0E00               	movlw	0
  4888  00148E  6E02               	movwf	(___fladd@b+1)^0,c
  4889  001490  0E00               	movlw	0
  4890  001492  6E03               	movwf	(___fladd@b+2)^0,c
  4891  001494  0E00               	movlw	0
  4892  001496  6E04               	movwf	(___fladd@b+3)^0,c
  4893  001498                     l2550:
  4894  001498  5008               	movf	(___fladd@a+3)^0,w,c
  4895  00149A  0B80               	andlw	128
  4896  00149C  6E0E               	movwf	___fladd@aexp^0,c
  4897  00149E  500D               	movf	___fladd@signs^0,w,c
  4898  0014A0  180E               	xorwf	___fladd@aexp^0,w,c
  4899  0014A2  B4D8               	btfsc	status,2,c
  4900  0014A4  EF56  F00A         	goto	u2411
  4901  0014A8  EF58  F00A         	goto	u2410
  4902  0014AC                     u2411:
  4903  0014AC  EF59  F00A         	goto	l2556
  4904  0014B0                     u2410:
  4905  0014B0  8C0D               	bsf	___fladd@signs^0,6,c
  4906  0014B2                     l2556:
  4907  0014B2  5008               	movf	(___fladd@a+3)^0,w,c
  4908  0014B4  2408               	addwf	(___fladd@a+3)^0,w,c
  4909  0014B6  6E0E               	movwf	___fladd@aexp^0,c
  4910  0014B8  AE07               	btfss	(___fladd@a+2)^0,7,c
  4911  0014BA  EF61  F00A         	goto	u2421
  4912  0014BE  EF63  F00A         	goto	u2420
  4913  0014C2                     u2421:
  4914  0014C2  EF64  F00A         	goto	l2562
  4915  0014C6                     u2420:
  4916  0014C6  800E               	bsf	___fladd@aexp^0,0,c
  4917  0014C8                     l2562:
  4918  0014C8  500E               	movf	___fladd@aexp^0,w,c
  4919  0014CA  B4D8               	btfsc	status,2,c
  4920  0014CC  EF6A  F00A         	goto	u2431
  4921  0014D0  EF6C  F00A         	goto	u2430
  4922  0014D4                     u2431:
  4923  0014D4  EF81  F00A         	goto	l2572
  4924  0014D8                     u2430:
  4925  0014D8  280E               	incf	___fladd@aexp^0,w,c
  4926  0014DA  A4D8               	btfss	status,2,c
  4927  0014DC  EF72  F00A         	goto	u2441
  4928  0014E0  EF74  F00A         	goto	u2440
  4929  0014E4                     u2441:
  4930  0014E4  EF7C  F00A         	goto	l2568
  4931  0014E8                     u2440:
  4932  0014E8  0E00               	movlw	0
  4933  0014EA  6E05               	movwf	___fladd@a^0,c
  4934  0014EC  0E00               	movlw	0
  4935  0014EE  6E06               	movwf	(___fladd@a+1)^0,c
  4936  0014F0  0E00               	movlw	0
  4937  0014F2  6E07               	movwf	(___fladd@a+2)^0,c
  4938  0014F4  0E00               	movlw	0
  4939  0014F6  6E08               	movwf	(___fladd@a+3)^0,c
  4940  0014F8                     l2568:
  4941  0014F8  8E07               	bsf	(___fladd@a+2)^0,7,c
  4942  0014FA  0E00               	movlw	0
  4943  0014FC  6E08               	movwf	(___fladd@a+3)^0,c
  4944  0014FE  EF89  F00A         	goto	l2574
  4945  001502                     l2572:
  4946  001502  0E00               	movlw	0
  4947  001504  6E05               	movwf	___fladd@a^0,c
  4948  001506  0E00               	movlw	0
  4949  001508  6E06               	movwf	(___fladd@a+1)^0,c
  4950  00150A  0E00               	movlw	0
  4951  00150C  6E07               	movwf	(___fladd@a+2)^0,c
  4952  00150E  0E00               	movlw	0
  4953  001510  6E08               	movwf	(___fladd@a+3)^0,c
  4954  001512                     l2574:
  4955  001512  500F               	movf	___fladd@bexp^0,w,c
  4956  001514  5C0E               	subwf	___fladd@aexp^0,w,c
  4957  001516  B0D8               	btfsc	status,0,c
  4958  001518  EF90  F00A         	goto	u2451
  4959  00151C  EF92  F00A         	goto	u2450
  4960  001520                     u2451:
  4961  001520  EFB9  F00A         	goto	l2610
  4962  001524                     u2450:
  4963  001524  AC0D               	btfss	___fladd@signs^0,6,c
  4964  001526  EF97  F00A         	goto	u2461
  4965  00152A  EF99  F00A         	goto	u2460
  4966  00152E                     u2461:
  4967  00152E  EF9B  F00A         	goto	l2580
  4968  001532                     u2460:
  4969  001532  0E80               	movlw	128
  4970  001534  1A0D               	xorwf	___fladd@signs^0,f,c
  4971  001536                     l2580:
  4972  001536  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  4973  00153A  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  4974  00153E  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  4975  001542  C001  F010         	movff	___fladd@b,___fladd@grs
  4976  001546  C005  F001         	movff	___fladd@a,___fladd@b
  4977  00154A  C010  F005         	movff	___fladd@grs,___fladd@a
  4978  00154E  C002  F010         	movff	___fladd@b+1,___fladd@grs
  4979  001552  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  4980  001556  C010  F006         	movff	___fladd@grs,___fladd@a+1
  4981  00155A  C003  F010         	movff	___fladd@b+2,___fladd@grs
  4982  00155E  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  4983  001562  C010  F007         	movff	___fladd@grs,___fladd@a+2
  4984  001566  C004  F010         	movff	___fladd@b+3,___fladd@grs
  4985  00156A  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  4986  00156E  C010  F008         	movff	___fladd@grs,___fladd@a+3
  4987  001572                     l2610:
  4988  001572  0E00               	movlw	0
  4989  001574  6E10               	movwf	___fladd@grs^0,c
  4990  001576  500F               	movf	___fladd@bexp^0,w,c
  4991  001578  C00E  F009         	movff	___fladd@aexp,??___fladd
  4992  00157C  6A0A               	clrf	(??___fladd+1)^0,c
  4993  00157E  5E09               	subwf	??___fladd^0,f,c
  4994  001580  0E00               	movlw	0
  4995  001582  5A0A               	subwfb	(??___fladd+1)^0,f,c
  4996  001584  BE0A               	btfsc	(??___fladd+1)^0,7,c
  4997  001586  EFCE  F00A         	goto	u2471
  4998  00158A  500A               	movf	(??___fladd+1)^0,w,c
  4999  00158C  E109               	bnz	u2470
  5000  00158E  0E1A               	movlw	26
  5001  001590  5C09               	subwf	??___fladd^0,w,c
  5002  001592  A0D8               	btfss	status,0,c
  5003  001594  EFCE  F00A         	goto	u2471
  5004  001598  EFD0  F00A         	goto	u2470
  5005  00159C                     u2471:
  5006  00159C  EF07  F00B         	goto	l627
  5007  0015A0                     u2470:
  5008  0015A0  5001               	movf	___fladd@b^0,w,c
  5009  0015A2  1002               	iorwf	(___fladd@b+1)^0,w,c
  5010  0015A4  1003               	iorwf	(___fladd@b+2)^0,w,c
  5011  0015A6  1004               	iorwf	(___fladd@b+3)^0,w,c
  5012  0015A8  A4D8               	btfss	status,2,c
  5013  0015AA  EFD9  F00A         	goto	u2481
  5014  0015AE  EFDC  F00A         	goto	u2480
  5015  0015B2                     u2481:
  5016  0015B2  0E01               	movlw	1
  5017  0015B4  EFDD  F00A         	goto	u2490
  5018  0015B8                     u2480:
  5019  0015B8  0E00               	movlw	0
  5020  0015BA                     u2490:
  5021  0015BA  6E10               	movwf	___fladd@grs^0,c
  5022  0015BC  0E00               	movlw	0
  5023  0015BE  6E01               	movwf	___fladd@b^0,c
  5024  0015C0  0E00               	movlw	0
  5025  0015C2  6E02               	movwf	(___fladd@b+1)^0,c
  5026  0015C4  0E00               	movlw	0
  5027  0015C6  6E03               	movwf	(___fladd@b+2)^0,c
  5028  0015C8  0E00               	movlw	0
  5029  0015CA  6E04               	movwf	(___fladd@b+3)^0,c
  5030  0015CC  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5031  0015D0  EF10  F00B         	goto	l626
  5032  0015D4                     l628:
  5033  0015D4  A010               	btfss	___fladd@grs^0,0,c
  5034  0015D6  EFEF  F00A         	goto	u2501
  5035  0015DA  EFF1  F00A         	goto	u2500
  5036  0015DE                     u2501:
  5037  0015DE  EFF7  F00A         	goto	l2622
  5038  0015E2                     u2500:
  5039  0015E2  90D8               	bcf	status,0,c
  5040  0015E4  3010               	rrcf	___fladd@grs^0,w,c
  5041  0015E6  0901               	iorlw	1
  5042  0015E8  6E10               	movwf	___fladd@grs^0,c
  5043  0015EA  EFF9  F00A         	goto	l2624
  5044  0015EE                     l2622:
  5045  0015EE  90D8               	bcf	status,0,c
  5046  0015F0  3210               	rrcf	___fladd@grs^0,f,c
  5047  0015F2                     l2624:
  5048  0015F2  A001               	btfss	___fladd@b^0,0,c
  5049  0015F4  EFFE  F00A         	goto	u2511
  5050  0015F8  EF00  F00B         	goto	u2510
  5051  0015FC                     u2511:
  5052  0015FC  EF01  F00B         	goto	l2628
  5053  001600                     u2510:
  5054  001600  8E10               	bsf	___fladd@grs^0,7,c
  5055  001602                     l2628:
  5056  001602  3404               	rlcf	(___fladd@b+3)^0,w,c
  5057  001604  3204               	rrcf	(___fladd@b+3)^0,f,c
  5058  001606  3203               	rrcf	(___fladd@b+2)^0,f,c
  5059  001608  3202               	rrcf	(___fladd@b+1)^0,f,c
  5060  00160A  3201               	rrcf	___fladd@b^0,f,c
  5061  00160C  2A0F               	incf	___fladd@bexp^0,f,c
  5062  00160E                     l627:
  5063  00160E  500E               	movf	___fladd@aexp^0,w,c
  5064  001610  5C0F               	subwf	___fladd@bexp^0,w,c
  5065  001612  A0D8               	btfss	status,0,c
  5066  001614  EF0E  F00B         	goto	u2521
  5067  001618  EF10  F00B         	goto	u2520
  5068  00161C                     u2521:
  5069  00161C  EFEA  F00A         	goto	l628
  5070  001620                     u2520:
  5071  001620                     l626:
  5072  001620  BC0D               	btfsc	___fladd@signs^0,6,c
  5073  001622  EF15  F00B         	goto	u2531
  5074  001626  EF17  F00B         	goto	u2530
  5075  00162A                     u2531:
  5076  00162A  EF57  F00B         	goto	l2656
  5077  00162E                     u2530:
  5078  00162E  500F               	movf	___fladd@bexp^0,w,c
  5079  001630  A4D8               	btfss	status,2,c
  5080  001632  EF1D  F00B         	goto	u2541
  5081  001636  EF1F  F00B         	goto	u2540
  5082  00163A                     u2541:
  5083  00163A  EF29  F00B         	goto	l2638
  5084  00163E                     u2540:
  5085  00163E  0E00               	movlw	0
  5086  001640  6E01               	movwf	?___fladd^0,c
  5087  001642  0E00               	movlw	0
  5088  001644  6E02               	movwf	(?___fladd+1)^0,c
  5089  001646  0E00               	movlw	0
  5090  001648  6E03               	movwf	(?___fladd+2)^0,c
  5091  00164A  0E00               	movlw	0
  5092  00164C  6E04               	movwf	(?___fladd+3)^0,c
  5093  00164E  EF78  F00C         	goto	l635
  5094  001652                     l2638:
  5095  001652  5005               	movf	___fladd@a^0,w,c
  5096  001654  2601               	addwf	___fladd@b^0,f,c
  5097  001656  5006               	movf	(___fladd@a+1)^0,w,c
  5098  001658  2202               	addwfc	(___fladd@b+1)^0,f,c
  5099  00165A  5007               	movf	(___fladd@a+2)^0,w,c
  5100  00165C  2203               	addwfc	(___fladd@b+2)^0,f,c
  5101  00165E  5008               	movf	(___fladd@a+3)^0,w,c
  5102  001660  2204               	addwfc	(___fladd@b+3)^0,f,c
  5103  001662  A004               	btfss	(___fladd@b+3)^0,0,c
  5104  001664  EF36  F00B         	goto	u2551
  5105  001668  EF38  F00B         	goto	u2550
  5106  00166C                     u2551:
  5107  00166C  EFE4  F00B         	goto	l2692
  5108  001670                     u2550:
  5109  001670  A010               	btfss	___fladd@grs^0,0,c
  5110  001672  EF3D  F00B         	goto	u2561
  5111  001676  EF3F  F00B         	goto	u2560
  5112  00167A                     u2561:
  5113  00167A  EF45  F00B         	goto	l2646
  5114  00167E                     u2560:
  5115  00167E  90D8               	bcf	status,0,c
  5116  001680  3010               	rrcf	___fladd@grs^0,w,c
  5117  001682  0901               	iorlw	1
  5118  001684  6E10               	movwf	___fladd@grs^0,c
  5119  001686  EF47  F00B         	goto	l2648
  5120  00168A                     l2646:
  5121  00168A  90D8               	bcf	status,0,c
  5122  00168C  3210               	rrcf	___fladd@grs^0,f,c
  5123  00168E                     l2648:
  5124  00168E  A001               	btfss	___fladd@b^0,0,c
  5125  001690  EF4C  F00B         	goto	u2571
  5126  001694  EF4E  F00B         	goto	u2570
  5127  001698                     u2571:
  5128  001698  EF4F  F00B         	goto	l2652
  5129  00169C                     u2570:
  5130  00169C  8E10               	bsf	___fladd@grs^0,7,c
  5131  00169E                     l2652:
  5132  00169E  3404               	rlcf	(___fladd@b+3)^0,w,c
  5133  0016A0  3204               	rrcf	(___fladd@b+3)^0,f,c
  5134  0016A2  3203               	rrcf	(___fladd@b+2)^0,f,c
  5135  0016A4  3202               	rrcf	(___fladd@b+1)^0,f,c
  5136  0016A6  3201               	rrcf	___fladd@b^0,f,c
  5137  0016A8  2A0F               	incf	___fladd@bexp^0,f,c
  5138  0016AA  EFE4  F00B         	goto	l2692
  5139  0016AE                     l2656:
  5140  0016AE  5005               	movf	___fladd@a^0,w,c
  5141  0016B0  5C01               	subwf	___fladd@b^0,w,c
  5142  0016B2  5006               	movf	(___fladd@a+1)^0,w,c
  5143  0016B4  5802               	subwfb	(___fladd@b+1)^0,w,c
  5144  0016B6  5007               	movf	(___fladd@a+2)^0,w,c
  5145  0016B8  5803               	subwfb	(___fladd@b+2)^0,w,c
  5146  0016BA  5004               	movf	(___fladd@b+3)^0,w,c
  5147  0016BC  0A80               	xorlw	128
  5148  0016BE  6E09               	movwf	??___fladd^0,c
  5149  0016C0  5008               	movf	(___fladd@a+3)^0,w,c
  5150  0016C2  0A80               	xorlw	128
  5151  0016C4  5809               	subwfb	??___fladd^0,w,c
  5152  0016C6  B0D8               	btfsc	status,0,c
  5153  0016C8  EF68  F00B         	goto	u2581
  5154  0016CC  EF6A  F00B         	goto	u2580
  5155  0016D0                     u2581:
  5156  0016D0  EF95  F00B         	goto	l2666
  5157  0016D4                     u2580:
  5158  0016D4  5001               	movf	___fladd@b^0,w,c
  5159  0016D6  5C05               	subwf	___fladd@a^0,w,c
  5160  0016D8  6E09               	movwf	??___fladd^0,c
  5161  0016DA  5002               	movf	(___fladd@b+1)^0,w,c
  5162  0016DC  5806               	subwfb	(___fladd@a+1)^0,w,c
  5163  0016DE  6E0A               	movwf	(??___fladd+1)^0,c
  5164  0016E0  5003               	movf	(___fladd@b+2)^0,w,c
  5165  0016E2  5807               	subwfb	(___fladd@a+2)^0,w,c
  5166  0016E4  6E0B               	movwf	(??___fladd+2)^0,c
  5167  0016E6  5004               	movf	(___fladd@b+3)^0,w,c
  5168  0016E8  5808               	subwfb	(___fladd@a+3)^0,w,c
  5169  0016EA  6E0C               	movwf	(??___fladd+3)^0,c
  5170  0016EC  0EFF               	movlw	255
  5171  0016EE  2409               	addwf	??___fladd^0,w,c
  5172  0016F0  6E01               	movwf	___fladd@b^0,c
  5173  0016F2  0EFF               	movlw	255
  5174  0016F4  200A               	addwfc	(??___fladd+1)^0,w,c
  5175  0016F6  6E02               	movwf	(___fladd@b+1)^0,c
  5176  0016F8  0EFF               	movlw	255
  5177  0016FA  200B               	addwfc	(??___fladd+2)^0,w,c
  5178  0016FC  6E03               	movwf	(___fladd@b+2)^0,c
  5179  0016FE  0EFF               	movlw	255
  5180  001700  200C               	addwfc	(??___fladd+3)^0,w,c
  5181  001702  6E04               	movwf	(___fladd@b+3)^0,c
  5182  001704  0E80               	movlw	128
  5183  001706  1A0D               	xorwf	___fladd@signs^0,f,c
  5184  001708  6C10               	negf	___fladd@grs^0,c
  5185  00170A  5010               	movf	___fladd@grs^0,w,c
  5186  00170C  A4D8               	btfss	status,2,c
  5187  00170E  EF8B  F00B         	goto	u2591
  5188  001712  EF8D  F00B         	goto	u2590
  5189  001716                     u2591:
  5190  001716  EF9D  F00B         	goto	l643
  5191  00171A                     u2590:
  5192  00171A  0E01               	movlw	1
  5193  00171C  2601               	addwf	___fladd@b^0,f,c
  5194  00171E  0E00               	movlw	0
  5195  001720  2202               	addwfc	(___fladd@b+1)^0,f,c
  5196  001722  2203               	addwfc	(___fladd@b+2)^0,f,c
  5197  001724  2204               	addwfc	(___fladd@b+3)^0,f,c
  5198  001726  EF9D  F00B         	goto	l643
  5199  00172A                     l2666:
  5200  00172A  5005               	movf	___fladd@a^0,w,c
  5201  00172C  5E01               	subwf	___fladd@b^0,f,c
  5202  00172E  5006               	movf	(___fladd@a+1)^0,w,c
  5203  001730  5A02               	subwfb	(___fladd@b+1)^0,f,c
  5204  001732  5007               	movf	(___fladd@a+2)^0,w,c
  5205  001734  5A03               	subwfb	(___fladd@b+2)^0,f,c
  5206  001736  5008               	movf	(___fladd@a+3)^0,w,c
  5207  001738  5A04               	subwfb	(___fladd@b+3)^0,f,c
  5208  00173A                     l643:
  5209  00173A  5001               	movf	___fladd@b^0,w,c
  5210  00173C  1002               	iorwf	(___fladd@b+1)^0,w,c
  5211  00173E  1003               	iorwf	(___fladd@b+2)^0,w,c
  5212  001740  1004               	iorwf	(___fladd@b+3)^0,w,c
  5213  001742  A4D8               	btfss	status,2,c
  5214  001744  EFA6  F00B         	goto	u2601
  5215  001748  EFA8  F00B         	goto	u2600
  5216  00174C                     u2601:
  5217  00174C  EFDD  F00B         	goto	l2690
  5218  001750                     u2600:
  5219  001750  5010               	movf	___fladd@grs^0,w,c
  5220  001752  A4D8               	btfss	status,2,c
  5221  001754  EFAE  F00B         	goto	u2611
  5222  001758  EFB0  F00B         	goto	u2610
  5223  00175C                     u2611:
  5224  00175C  EFDD  F00B         	goto	l2690
  5225  001760                     u2610:
  5226  001760  0E00               	movlw	0
  5227  001762  6E01               	movwf	?___fladd^0,c
  5228  001764  0E00               	movlw	0
  5229  001766  6E02               	movwf	(?___fladd+1)^0,c
  5230  001768  0E00               	movlw	0
  5231  00176A  6E03               	movwf	(?___fladd+2)^0,c
  5232  00176C  0E00               	movlw	0
  5233  00176E  6E04               	movwf	(?___fladd+3)^0,c
  5234  001770  EF78  F00C         	goto	l635
  5235  001774                     l2674:
  5236  001774  90D8               	bcf	status,0,c
  5237  001776  3601               	rlcf	___fladd@b^0,f,c
  5238  001778  3602               	rlcf	(___fladd@b+1)^0,f,c
  5239  00177A  3603               	rlcf	(___fladd@b+2)^0,f,c
  5240  00177C  3604               	rlcf	(___fladd@b+3)^0,f,c
  5241  00177E  AE10               	btfss	___fladd@grs^0,7,c
  5242  001780  EFC4  F00B         	goto	u2621
  5243  001784  EFC6  F00B         	goto	u2620
  5244  001788                     u2621:
  5245  001788  EFC7  F00B         	goto	l2680
  5246  00178C                     u2620:
  5247  00178C  8001               	bsf	___fladd@b^0,0,c
  5248  00178E                     l2680:
  5249  00178E  A010               	btfss	___fladd@grs^0,0,c
  5250  001790  EFCC  F00B         	goto	u2631
  5251  001794  EFCE  F00B         	goto	u2630
  5252  001798                     u2631:
  5253  001798  EFD2  F00B         	goto	l2684
  5254  00179C                     u2630:
  5255  00179C  80D8               	bsf	status,0,c
  5256  00179E  3610               	rlcf	___fladd@grs^0,f,c
  5257  0017A0  EFD4  F00B         	goto	l2686
  5258  0017A4                     l2684:
  5259  0017A4  90D8               	bcf	status,0,c
  5260  0017A6  3610               	rlcf	___fladd@grs^0,f,c
  5261  0017A8                     l2686:
  5262  0017A8  500F               	movf	___fladd@bexp^0,w,c
  5263  0017AA  B4D8               	btfsc	status,2,c
  5264  0017AC  EFDA  F00B         	goto	u2641
  5265  0017B0  EFDC  F00B         	goto	u2640
  5266  0017B4                     u2641:
  5267  0017B4  EFDD  F00B         	goto	l2690
  5268  0017B8                     u2640:
  5269  0017B8  060F               	decf	___fladd@bexp^0,f,c
  5270  0017BA                     l2690:
  5271  0017BA  AE03               	btfss	(___fladd@b+2)^0,7,c
  5272  0017BC  EFE2  F00B         	goto	u2651
  5273  0017C0  EFE4  F00B         	goto	u2650
  5274  0017C4                     u2651:
  5275  0017C4  EFBA  F00B         	goto	l2674
  5276  0017C8                     u2650:
  5277  0017C8                     l2692:
  5278  0017C8  0E00               	movlw	0
  5279  0017CA  6E0E               	movwf	___fladd@aexp^0,c
  5280  0017CC  AE10               	btfss	___fladd@grs^0,7,c
  5281  0017CE  EFEB  F00B         	goto	u2661
  5282  0017D2  EFED  F00B         	goto	u2660
  5283  0017D6                     u2661:
  5284  0017D6  EF05  F00C         	goto	l652
  5285  0017DA                     u2660:
  5286  0017DA  C010  F009         	movff	___fladd@grs,??___fladd
  5287  0017DE  0E7F               	movlw	127
  5288  0017E0  1609               	andwf	??___fladd^0,f,c
  5289  0017E2  B4D8               	btfsc	status,2,c
  5290  0017E4  EFF6  F00B         	goto	u2671
  5291  0017E8  EFF8  F00B         	goto	u2670
  5292  0017EC                     u2671:
  5293  0017EC  EFFC  F00B         	goto	l653
  5294  0017F0                     u2670:
  5295  0017F0                     l2698:
  5296  0017F0  0E01               	movlw	1
  5297  0017F2  6E0E               	movwf	___fladd@aexp^0,c
  5298  0017F4  EF05  F00C         	goto	l652
  5299  0017F8                     l653:
  5300  0017F8  A001               	btfss	___fladd@b^0,0,c
  5301  0017FA  EF01  F00C         	goto	u2681
  5302  0017FE  EF03  F00C         	goto	u2680
  5303  001802                     u2681:
  5304  001802  EF05  F00C         	goto	l652
  5305  001806                     u2680:
  5306  001806  EFF8  F00B         	goto	l2698
  5307  00180A                     l652:
  5308  00180A  500E               	movf	___fladd@aexp^0,w,c
  5309  00180C  B4D8               	btfsc	status,2,c
  5310  00180E  EF0B  F00C         	goto	u2691
  5311  001812  EF0D  F00C         	goto	u2690
  5312  001816                     u2691:
  5313  001816  EF38  F00C         	goto	l2710
  5314  00181A                     u2690:
  5315  00181A  0E01               	movlw	1
  5316  00181C  2601               	addwf	___fladd@b^0,f,c
  5317  00181E  0E00               	movlw	0
  5318  001820  2202               	addwfc	(___fladd@b+1)^0,f,c
  5319  001822  2203               	addwfc	(___fladd@b+2)^0,f,c
  5320  001824  2204               	addwfc	(___fladd@b+3)^0,f,c
  5321  001826  A004               	btfss	(___fladd@b+3)^0,0,c
  5322  001828  EF18  F00C         	goto	u2701
  5323  00182C  EF1A  F00C         	goto	u2700
  5324  001830                     u2701:
  5325  001830  EF38  F00C         	goto	l2710
  5326  001834                     u2700:
  5327  001834  C001  F009         	movff	___fladd@b,??___fladd
  5328  001838  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  5329  00183C  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  5330  001840  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  5331  001844  340C               	rlcf	(??___fladd+3)^0,w,c
  5332  001846  320C               	rrcf	(??___fladd+3)^0,f,c
  5333  001848  320B               	rrcf	(??___fladd+2)^0,f,c
  5334  00184A  320A               	rrcf	(??___fladd+1)^0,f,c
  5335  00184C  3209               	rrcf	??___fladd^0,f,c
  5336  00184E  C009  F001         	movff	??___fladd,___fladd@b
  5337  001852  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  5338  001856  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  5339  00185A  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  5340  00185E  280F               	incf	___fladd@bexp^0,w,c
  5341  001860  B4D8               	btfsc	status,2,c
  5342  001862  EF35  F00C         	goto	u2711
  5343  001866  EF37  F00C         	goto	u2710
  5344  00186A                     u2711:
  5345  00186A  EF38  F00C         	goto	l2710
  5346  00186E                     u2710:
  5347  00186E  2A0F               	incf	___fladd@bexp^0,f,c
  5348  001870                     l2710:
  5349  001870  280F               	incf	___fladd@bexp^0,w,c
  5350  001872  B4D8               	btfsc	status,2,c
  5351  001874  EF3E  F00C         	goto	u2721
  5352  001878  EF40  F00C         	goto	u2720
  5353  00187C                     u2721:
  5354  00187C  EF48  F00C         	goto	l2714
  5355  001880                     u2720:
  5356  001880  500F               	movf	___fladd@bexp^0,w,c
  5357  001882  A4D8               	btfss	status,2,c
  5358  001884  EF46  F00C         	goto	u2731
  5359  001888  EF48  F00C         	goto	u2730
  5360  00188C                     u2731:
  5361  00188C  EF5A  F00C         	goto	l2718
  5362  001890                     u2730:
  5363  001890                     l2714:
  5364  001890  0E00               	movlw	0
  5365  001892  6E01               	movwf	___fladd@b^0,c
  5366  001894  0E00               	movlw	0
  5367  001896  6E02               	movwf	(___fladd@b+1)^0,c
  5368  001898  0E00               	movlw	0
  5369  00189A  6E03               	movwf	(___fladd@b+2)^0,c
  5370  00189C  0E00               	movlw	0
  5371  00189E  6E04               	movwf	(___fladd@b+3)^0,c
  5372  0018A0  500F               	movf	___fladd@bexp^0,w,c
  5373  0018A2  A4D8               	btfss	status,2,c
  5374  0018A4  EF56  F00C         	goto	u2741
  5375  0018A8  EF58  F00C         	goto	u2740
  5376  0018AC                     u2741:
  5377  0018AC  EF5A  F00C         	goto	l2718
  5378  0018B0                     u2740:
  5379  0018B0  0E00               	movlw	0
  5380  0018B2  6E0D               	movwf	___fladd@signs^0,c
  5381  0018B4                     l2718:
  5382  0018B4  A00F               	btfss	___fladd@bexp^0,0,c
  5383  0018B6  EF5F  F00C         	goto	u2751
  5384  0018BA  EF61  F00C         	goto	u2750
  5385  0018BE                     u2751:
  5386  0018BE  EF64  F00C         	goto	l2722
  5387  0018C2                     u2750:
  5388  0018C2  8E03               	bsf	(___fladd@b+2)^0,7,c
  5389  0018C4  EF65  F00C         	goto	l2724
  5390  0018C8                     l2722:
  5391  0018C8  9E03               	bcf	(___fladd@b+2)^0,7,c
  5392  0018CA                     l2724:
  5393  0018CA  90D8               	bcf	status,0,c
  5394  0018CC  300F               	rrcf	___fladd@bexp^0,w,c
  5395  0018CE  6E04               	movwf	(___fladd@b+3)^0,c
  5396  0018D0  AE0D               	btfss	___fladd@signs^0,7,c
  5397  0018D2  EF6D  F00C         	goto	u2761
  5398  0018D6  EF6F  F00C         	goto	u2760
  5399  0018DA                     u2761:
  5400  0018DA  EF70  F00C         	goto	l2730
  5401  0018DE                     u2760:
  5402  0018DE  8E04               	bsf	(___fladd@b+3)^0,7,c
  5403  0018E0                     l2730:
  5404  0018E0  C001  F001         	movff	___fladd@b,?___fladd
  5405  0018E4  C002  F002         	movff	___fladd@b+1,?___fladd+1
  5406  0018E8  C003  F003         	movff	___fladd@b+2,?___fladd+2
  5407  0018EC  C004  F004         	movff	___fladd@b+3,?___fladd+3
  5408  0018F0                     l635:
  5409  0018F0  0012               	return		;funcret
  5410  0018F2                     __end_of___fladd:
  5411                           	callstack 0
  5412                           
  5413 ;; *************** function ___flneg *****************
  5414 ;; Defined at:
  5415 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\flneg.c"
  5416 ;; Parameters:    Size  Location     Type
  5417 ;;  f1              4    0[COMRAM] unsigned char 
  5418 ;; Auto vars:     Size  Location     Type
  5419 ;;		None
  5420 ;; Return value:  Size  Location     Type
  5421 ;;                  4    0[COMRAM] unsigned char 
  5422 ;; Registers used:
  5423 ;;		wreg, status,2, status,0
  5424 ;; Tracked objects:
  5425 ;;		On entry : 0/0
  5426 ;;		On exit  : 0/0
  5427 ;;		Unchanged: 0/0
  5428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5429 ;;      Params:         4       0       0       0       0       0       0       0       0
  5430 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5431 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5432 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5433 ;;Total ram usage:        4 bytes
  5434 ;; Hardware stack levels used: 1
  5435 ;; This function calls:
  5436 ;;		Nothing
  5437 ;; This function is called by:
  5438 ;;		_efgtoa
  5439 ;; This function uses a non-reentrant model
  5440 ;;
  5441                           
  5442                           	psect	text19
  5443  0035C8                     __ptext19:
  5444                           	callstack 0
  5445  0035C8                     ___flneg:
  5446                           	callstack 26
  5447  0035C8  5001               	movf	___flneg@f1^0,w,c
  5448  0035CA  1002               	iorwf	(___flneg@f1+1)^0,w,c
  5449  0035CC  1003               	iorwf	(___flneg@f1+2)^0,w,c
  5450  0035CE  1004               	iorwf	(___flneg@f1+3)^0,w,c
  5451  0035D0  B4D8               	btfsc	status,2,c
  5452  0035D2  EFED  F01A         	goto	u3431
  5453  0035D6  EFEF  F01A         	goto	u3430
  5454  0035DA                     u3431:
  5455  0035DA  EFF7  F01A         	goto	l3158
  5456  0035DE                     u3430:
  5457  0035DE  0E00               	movlw	0
  5458  0035E0  1A01               	xorwf	___flneg@f1^0,f,c
  5459  0035E2  0E00               	movlw	0
  5460  0035E4  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  5461  0035E6  0E00               	movlw	0
  5462  0035E8  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  5463  0035EA  0E80               	movlw	128
  5464  0035EC  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  5465  0035EE                     l3158:
  5466  0035EE  C001  F001         	movff	___flneg@f1,?___flneg
  5467  0035F2  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  5468  0035F6  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  5469  0035FA  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  5470  0035FE  0012               	return		;funcret
  5471  003600                     __end_of___flneg:
  5472                           	callstack 0
  5473                           
  5474 ;; *************** function ___flmul *****************
  5475 ;; Defined at:
  5476 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcmul.c"
  5477 ;; Parameters:    Size  Location     Type
  5478 ;;  b               4   14[COMRAM] unsigned char 
  5479 ;;  a               4   18[COMRAM] unsigned char 
  5480 ;; Auto vars:     Size  Location     Type
  5481 ;;  prod            4   33[COMRAM] struct .
  5482 ;;  grs             4   27[COMRAM] unsigned long 
  5483 ;;  temp            2   37[COMRAM] struct .
  5484 ;;  bexp            1   32[COMRAM] unsigned char 
  5485 ;;  aexp            1   31[COMRAM] unsigned char 
  5486 ;;  sign            1   26[COMRAM] unsigned char 
  5487 ;; Return value:  Size  Location     Type
  5488 ;;                  4   14[COMRAM] unsigned char 
  5489 ;; Registers used:
  5490 ;;		wreg, status,2, status,0, prodl, prodh
  5491 ;; Tracked objects:
  5492 ;;		On entry : 0/0
  5493 ;;		On exit  : 0/0
  5494 ;;		Unchanged: 0/0
  5495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5496 ;;      Params:         8       0       0       0       0       0       0       0       0
  5497 ;;      Locals:        13       0       0       0       0       0       0       0       0
  5498 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5499 ;;      Totals:        25       0       0       0       0       0       0       0       0
  5500 ;;Total ram usage:       25 bytes
  5501 ;; Hardware stack levels used: 1
  5502 ;; This function calls:
  5503 ;;		Nothing
  5504 ;; This function is called by:
  5505 ;;		_main
  5506 ;;		_efgtoa
  5507 ;; This function uses a non-reentrant model
  5508 ;;
  5509                           
  5510                           	psect	text20
  5511  001D1C                     __ptext20:
  5512                           	callstack 0
  5513  001D1C                     ___flmul:
  5514                           	callstack 26
  5515  001D1C  5012               	movf	(___flmul@b+3)^0,w,c
  5516  001D1E  0B80               	andlw	128
  5517  001D20  6E1B               	movwf	___flmul@sign^0,c
  5518  001D22  5012               	movf	(___flmul@b+3)^0,w,c
  5519  001D24  2412               	addwf	(___flmul@b+3)^0,w,c
  5520  001D26  6E21               	movwf	___flmul@bexp^0,c
  5521  001D28  AE11               	btfss	(___flmul@b+2)^0,7,c
  5522  001D2A  EF99  F00E         	goto	u3041
  5523  001D2E  EF9B  F00E         	goto	u3040
  5524  001D32                     u3041:
  5525  001D32  EF9C  F00E         	goto	l2906
  5526  001D36                     u3040:
  5527  001D36  8021               	bsf	___flmul@bexp^0,0,c
  5528  001D38                     l2906:
  5529  001D38  5021               	movf	___flmul@bexp^0,w,c
  5530  001D3A  B4D8               	btfsc	status,2,c
  5531  001D3C  EFA2  F00E         	goto	u3051
  5532  001D40  EFA4  F00E         	goto	u3050
  5533  001D44                     u3051:
  5534  001D44  EFB7  F00E         	goto	l2914
  5535  001D48                     u3050:
  5536  001D48  2821               	incf	___flmul@bexp^0,w,c
  5537  001D4A  A4D8               	btfss	status,2,c
  5538  001D4C  EFAA  F00E         	goto	u3061
  5539  001D50  EFAC  F00E         	goto	u3060
  5540  001D54                     u3061:
  5541  001D54  EFB4  F00E         	goto	l2912
  5542  001D58                     u3060:
  5543  001D58  0E00               	movlw	0
  5544  001D5A  6E0F               	movwf	___flmul@b^0,c
  5545  001D5C  0E00               	movlw	0
  5546  001D5E  6E10               	movwf	(___flmul@b+1)^0,c
  5547  001D60  0E00               	movlw	0
  5548  001D62  6E11               	movwf	(___flmul@b+2)^0,c
  5549  001D64  0E00               	movlw	0
  5550  001D66  6E12               	movwf	(___flmul@b+3)^0,c
  5551  001D68                     l2912:
  5552  001D68  8E11               	bsf	(___flmul@b+2)^0,7,c
  5553  001D6A  EFBF  F00E         	goto	l2916
  5554  001D6E                     l2914:
  5555  001D6E  0E00               	movlw	0
  5556  001D70  6E0F               	movwf	___flmul@b^0,c
  5557  001D72  0E00               	movlw	0
  5558  001D74  6E10               	movwf	(___flmul@b+1)^0,c
  5559  001D76  0E00               	movlw	0
  5560  001D78  6E11               	movwf	(___flmul@b+2)^0,c
  5561  001D7A  0E00               	movlw	0
  5562  001D7C  6E12               	movwf	(___flmul@b+3)^0,c
  5563  001D7E                     l2916:
  5564  001D7E  5016               	movf	(___flmul@a+3)^0,w,c
  5565  001D80  0B80               	andlw	128
  5566  001D82  1A1B               	xorwf	___flmul@sign^0,f,c
  5567  001D84  5016               	movf	(___flmul@a+3)^0,w,c
  5568  001D86  2416               	addwf	(___flmul@a+3)^0,w,c
  5569  001D88  6E20               	movwf	___flmul@aexp^0,c
  5570  001D8A  AE15               	btfss	(___flmul@a+2)^0,7,c
  5571  001D8C  EFCA  F00E         	goto	u3071
  5572  001D90  EFCC  F00E         	goto	u3070
  5573  001D94                     u3071:
  5574  001D94  EFCD  F00E         	goto	l2924
  5575  001D98                     u3070:
  5576  001D98  8020               	bsf	___flmul@aexp^0,0,c
  5577  001D9A                     l2924:
  5578  001D9A  5020               	movf	___flmul@aexp^0,w,c
  5579  001D9C  B4D8               	btfsc	status,2,c
  5580  001D9E  EFD3  F00E         	goto	u3081
  5581  001DA2  EFD5  F00E         	goto	u3080
  5582  001DA6                     u3081:
  5583  001DA6  EFE8  F00E         	goto	l2932
  5584  001DAA                     u3080:
  5585  001DAA  2820               	incf	___flmul@aexp^0,w,c
  5586  001DAC  A4D8               	btfss	status,2,c
  5587  001DAE  EFDB  F00E         	goto	u3091
  5588  001DB2  EFDD  F00E         	goto	u3090
  5589  001DB6                     u3091:
  5590  001DB6  EFE5  F00E         	goto	l2930
  5591  001DBA                     u3090:
  5592  001DBA  0E00               	movlw	0
  5593  001DBC  6E13               	movwf	___flmul@a^0,c
  5594  001DBE  0E00               	movlw	0
  5595  001DC0  6E14               	movwf	(___flmul@a+1)^0,c
  5596  001DC2  0E00               	movlw	0
  5597  001DC4  6E15               	movwf	(___flmul@a+2)^0,c
  5598  001DC6  0E00               	movlw	0
  5599  001DC8  6E16               	movwf	(___flmul@a+3)^0,c
  5600  001DCA                     l2930:
  5601  001DCA  8E15               	bsf	(___flmul@a+2)^0,7,c
  5602  001DCC  EFF0  F00E         	goto	l712
  5603  001DD0                     l2932:
  5604  001DD0  0E00               	movlw	0
  5605  001DD2  6E13               	movwf	___flmul@a^0,c
  5606  001DD4  0E00               	movlw	0
  5607  001DD6  6E14               	movwf	(___flmul@a+1)^0,c
  5608  001DD8  0E00               	movlw	0
  5609  001DDA  6E15               	movwf	(___flmul@a+2)^0,c
  5610  001DDC  0E00               	movlw	0
  5611  001DDE  6E16               	movwf	(___flmul@a+3)^0,c
  5612  001DE0                     l712:
  5613  001DE0  5020               	movf	___flmul@aexp^0,w,c
  5614  001DE2  B4D8               	btfsc	status,2,c
  5615  001DE4  EFF6  F00E         	goto	u3101
  5616  001DE8  EFF8  F00E         	goto	u3100
  5617  001DEC                     u3101:
  5618  001DEC  EF00  F00F         	goto	l2936
  5619  001DF0                     u3100:
  5620  001DF0  5021               	movf	___flmul@bexp^0,w,c
  5621  001DF2  A4D8               	btfss	status,2,c
  5622  001DF4  EFFE  F00E         	goto	u3111
  5623  001DF8  EF00  F00F         	goto	u3110
  5624  001DFC                     u3111:
  5625  001DFC  EF0A  F00F         	goto	l2940
  5626  001E00                     u3110:
  5627  001E00                     l2936:
  5628  001E00  0E00               	movlw	0
  5629  001E02  6E0F               	movwf	?___flmul^0,c
  5630  001E04  0E00               	movlw	0
  5631  001E06  6E10               	movwf	(?___flmul+1)^0,c
  5632  001E08  0E00               	movlw	0
  5633  001E0A  6E11               	movwf	(?___flmul+2)^0,c
  5634  001E0C  0E00               	movlw	0
  5635  001E0E  6E12               	movwf	(?___flmul+3)^0,c
  5636  001E10  EFA2  F010         	goto	l716
  5637  001E14                     l2940:
  5638  001E14  5015               	movf	(___flmul@a+2)^0,w,c
  5639  001E16  020F               	mulwf	___flmul@b^0,c
  5640  001E18  CFF3 F026          	movff	prodl,___flmul@temp
  5641  001E1C  CFF4 F027          	movff	prodh,___flmul@temp+1
  5642  001E20  5026               	movf	___flmul@temp^0,w,c
  5643  001E22  6E1C               	movwf	___flmul@grs^0,c
  5644  001E24  6A1D               	clrf	(___flmul@grs+1)^0,c
  5645  001E26  6A1E               	clrf	(___flmul@grs+2)^0,c
  5646  001E28  6A1F               	clrf	(___flmul@grs+3)^0,c
  5647  001E2A  5027               	movf	(___flmul@temp+1)^0,w,c
  5648  001E2C  6E22               	movwf	___flmul@prod^0,c
  5649  001E2E  6A23               	clrf	(___flmul@prod+1)^0,c
  5650  001E30  6A24               	clrf	(___flmul@prod+2)^0,c
  5651  001E32  6A25               	clrf	(___flmul@prod+3)^0,c
  5652  001E34  5014               	movf	(___flmul@a+1)^0,w,c
  5653  001E36  0210               	mulwf	(___flmul@b+1)^0,c
  5654  001E38  CFF3 F026          	movff	prodl,___flmul@temp
  5655  001E3C  CFF4 F027          	movff	prodh,___flmul@temp+1
  5656  001E40  5026               	movf	___flmul@temp^0,w,c
  5657  001E42  261C               	addwf	___flmul@grs^0,f,c
  5658  001E44  0E00               	movlw	0
  5659  001E46  221D               	addwfc	(___flmul@grs+1)^0,f,c
  5660  001E48  221E               	addwfc	(___flmul@grs+2)^0,f,c
  5661  001E4A  221F               	addwfc	(___flmul@grs+3)^0,f,c
  5662  001E4C  5027               	movf	(___flmul@temp+1)^0,w,c
  5663  001E4E  2622               	addwf	___flmul@prod^0,f,c
  5664  001E50  0E00               	movlw	0
  5665  001E52  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5666  001E54  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5667  001E56  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5668  001E58  5013               	movf	___flmul@a^0,w,c
  5669  001E5A  0211               	mulwf	(___flmul@b+2)^0,c
  5670  001E5C  CFF3 F026          	movff	prodl,___flmul@temp
  5671  001E60  CFF4 F027          	movff	prodh,___flmul@temp+1
  5672  001E64  5026               	movf	___flmul@temp^0,w,c
  5673  001E66  261C               	addwf	___flmul@grs^0,f,c
  5674  001E68  0E00               	movlw	0
  5675  001E6A  221D               	addwfc	(___flmul@grs+1)^0,f,c
  5676  001E6C  221E               	addwfc	(___flmul@grs+2)^0,f,c
  5677  001E6E  221F               	addwfc	(___flmul@grs+3)^0,f,c
  5678  001E70  5027               	movf	(___flmul@temp+1)^0,w,c
  5679  001E72  2622               	addwf	___flmul@prod^0,f,c
  5680  001E74  0E00               	movlw	0
  5681  001E76  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5682  001E78  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5683  001E7A  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5684  001E7C  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  5685  001E80  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  5686  001E84  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  5687  001E88  6A1C               	clrf	___flmul@grs^0,c
  5688  001E8A  5013               	movf	___flmul@a^0,w,c
  5689  001E8C  0210               	mulwf	(___flmul@b+1)^0,c
  5690  001E8E  CFF3 F026          	movff	prodl,___flmul@temp
  5691  001E92  CFF4 F027          	movff	prodh,___flmul@temp+1
  5692  001E96  5026               	movf	___flmul@temp^0,w,c
  5693  001E98  261C               	addwf	___flmul@grs^0,f,c
  5694  001E9A  5027               	movf	(___flmul@temp+1)^0,w,c
  5695  001E9C  221D               	addwfc	(___flmul@grs+1)^0,f,c
  5696  001E9E  0E00               	movlw	0
  5697  001EA0  221E               	addwfc	(___flmul@grs+2)^0,f,c
  5698  001EA2  0E00               	movlw	0
  5699  001EA4  221F               	addwfc	(___flmul@grs+3)^0,f,c
  5700  001EA6  5014               	movf	(___flmul@a+1)^0,w,c
  5701  001EA8  020F               	mulwf	___flmul@b^0,c
  5702  001EAA  CFF3 F026          	movff	prodl,___flmul@temp
  5703  001EAE  CFF4 F027          	movff	prodh,___flmul@temp+1
  5704  001EB2  5026               	movf	___flmul@temp^0,w,c
  5705  001EB4  261C               	addwf	___flmul@grs^0,f,c
  5706  001EB6  5027               	movf	(___flmul@temp+1)^0,w,c
  5707  001EB8  221D               	addwfc	(___flmul@grs+1)^0,f,c
  5708  001EBA  0E00               	movlw	0
  5709  001EBC  221E               	addwfc	(___flmul@grs+2)^0,f,c
  5710  001EBE  0E00               	movlw	0
  5711  001EC0  221F               	addwfc	(___flmul@grs+3)^0,f,c
  5712  001EC2  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  5713  001EC6  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  5714  001ECA  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  5715  001ECE  6A1C               	clrf	___flmul@grs^0,c
  5716  001ED0  5013               	movf	___flmul@a^0,w,c
  5717  001ED2  020F               	mulwf	___flmul@b^0,c
  5718  001ED4  CFF3 F026          	movff	prodl,___flmul@temp
  5719  001ED8  CFF4 F027          	movff	prodh,___flmul@temp+1
  5720  001EDC  5026               	movf	___flmul@temp^0,w,c
  5721  001EDE  261C               	addwf	___flmul@grs^0,f,c
  5722  001EE0  5027               	movf	(___flmul@temp+1)^0,w,c
  5723  001EE2  221D               	addwfc	(___flmul@grs+1)^0,f,c
  5724  001EE4  0E00               	movlw	0
  5725  001EE6  221E               	addwfc	(___flmul@grs+2)^0,f,c
  5726  001EE8  0E00               	movlw	0
  5727  001EEA  221F               	addwfc	(___flmul@grs+3)^0,f,c
  5728  001EEC  5015               	movf	(___flmul@a+2)^0,w,c
  5729  001EEE  0210               	mulwf	(___flmul@b+1)^0,c
  5730  001EF0  CFF3 F026          	movff	prodl,___flmul@temp
  5731  001EF4  CFF4 F027          	movff	prodh,___flmul@temp+1
  5732  001EF8  5026               	movf	___flmul@temp^0,w,c
  5733  001EFA  2622               	addwf	___flmul@prod^0,f,c
  5734  001EFC  5027               	movf	(___flmul@temp+1)^0,w,c
  5735  001EFE  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5736  001F00  0E00               	movlw	0
  5737  001F02  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5738  001F04  0E00               	movlw	0
  5739  001F06  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5740  001F08  5014               	movf	(___flmul@a+1)^0,w,c
  5741  001F0A  0211               	mulwf	(___flmul@b+2)^0,c
  5742  001F0C  CFF3 F026          	movff	prodl,___flmul@temp
  5743  001F10  CFF4 F027          	movff	prodh,___flmul@temp+1
  5744  001F14  5026               	movf	___flmul@temp^0,w,c
  5745  001F16  2622               	addwf	___flmul@prod^0,f,c
  5746  001F18  5027               	movf	(___flmul@temp+1)^0,w,c
  5747  001F1A  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5748  001F1C  0E00               	movlw	0
  5749  001F1E  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5750  001F20  0E00               	movlw	0
  5751  001F22  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5752  001F24  5015               	movf	(___flmul@a+2)^0,w,c
  5753  001F26  0211               	mulwf	(___flmul@b+2)^0,c
  5754  001F28  CFF3 F026          	movff	prodl,___flmul@temp
  5755  001F2C  CFF4 F027          	movff	prodh,___flmul@temp+1
  5756  001F30  5026               	movf	___flmul@temp^0,w,c
  5757  001F32  6E17               	movwf	??___flmul^0,c
  5758  001F34  5027               	movf	(___flmul@temp+1)^0,w,c
  5759  001F36  6E18               	movwf	(??___flmul+1)^0,c
  5760  001F38  6A19               	clrf	(??___flmul+2)^0,c
  5761  001F3A  6A1A               	clrf	(??___flmul+3)^0,c
  5762  001F3C  C019  F01A         	movff	??___flmul+2,??___flmul+3
  5763  001F40  C018  F019         	movff	??___flmul+1,??___flmul+2
  5764  001F44  C017  F018         	movff	??___flmul,??___flmul+1
  5765  001F48  6A17               	clrf	??___flmul^0,c
  5766  001F4A  5017               	movf	??___flmul^0,w,c
  5767  001F4C  2622               	addwf	___flmul@prod^0,f,c
  5768  001F4E  5018               	movf	(??___flmul+1)^0,w,c
  5769  001F50  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5770  001F52  5019               	movf	(??___flmul+2)^0,w,c
  5771  001F54  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5772  001F56  501A               	movf	(??___flmul+3)^0,w,c
  5773  001F58  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5774  001F5A  C01C  F017         	movff	___flmul@grs,??___flmul
  5775  001F5E  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  5776  001F62  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  5777  001F66  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  5778  001F6A  0E19               	movlw	25
  5779  001F6C  EFBD  F00F         	goto	u3120
  5780  001F70                     u3125:
  5781  001F70  90D8               	bcf	status,0,c
  5782  001F72  321A               	rrcf	(??___flmul+3)^0,f,c
  5783  001F74  3219               	rrcf	(??___flmul+2)^0,f,c
  5784  001F76  3218               	rrcf	(??___flmul+1)^0,f,c
  5785  001F78  3217               	rrcf	??___flmul^0,f,c
  5786  001F7A                     u3120:
  5787  001F7A  2EE8               	decfsz	wreg,f,c
  5788  001F7C  EFB8  F00F         	goto	u3125
  5789  001F80  5017               	movf	??___flmul^0,w,c
  5790  001F82  2622               	addwf	___flmul@prod^0,f,c
  5791  001F84  5018               	movf	(??___flmul+1)^0,w,c
  5792  001F86  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5793  001F88  5019               	movf	(??___flmul+2)^0,w,c
  5794  001F8A  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5795  001F8C  501A               	movf	(??___flmul+3)^0,w,c
  5796  001F8E  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5797  001F90  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  5798  001F94  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  5799  001F98  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  5800  001F9C  6A1C               	clrf	___flmul@grs^0,c
  5801  001F9E  5020               	movf	___flmul@aexp^0,w,c
  5802  001FA0  C021  F017         	movff	___flmul@bexp,??___flmul
  5803  001FA4  6A18               	clrf	(??___flmul+1)^0,c
  5804  001FA6  2617               	addwf	??___flmul^0,f,c
  5805  001FA8  0E00               	movlw	0
  5806  001FAA  2218               	addwfc	(??___flmul+1)^0,f,c
  5807  001FAC  0E82               	movlw	130
  5808  001FAE  2417               	addwf	??___flmul^0,w,c
  5809  001FB0  6E26               	movwf	___flmul@temp^0,c
  5810  001FB2  0EFF               	movlw	255
  5811  001FB4  2018               	addwfc	(??___flmul+1)^0,w,c
  5812  001FB6  6E27               	movwf	(___flmul@temp+1)^0,c
  5813  001FB8  EFF3  F00F         	goto	l2988
  5814  001FBC                     l2982:
  5815  001FBC  90D8               	bcf	status,0,c
  5816  001FBE  3622               	rlcf	___flmul@prod^0,f,c
  5817  001FC0  3623               	rlcf	(___flmul@prod+1)^0,f,c
  5818  001FC2  3624               	rlcf	(___flmul@prod+2)^0,f,c
  5819  001FC4  3625               	rlcf	(___flmul@prod+3)^0,f,c
  5820  001FC6  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  5821  001FC8  EFE8  F00F         	goto	u3131
  5822  001FCC  EFEA  F00F         	goto	u3130
  5823  001FD0                     u3131:
  5824  001FD0  EFEB  F00F         	goto	l719
  5825  001FD4                     u3130:
  5826  001FD4  8022               	bsf	___flmul@prod^0,0,c
  5827  001FD6                     l719:
  5828  001FD6  90D8               	bcf	status,0,c
  5829  001FD8  361C               	rlcf	___flmul@grs^0,f,c
  5830  001FDA  361D               	rlcf	(___flmul@grs+1)^0,f,c
  5831  001FDC  361E               	rlcf	(___flmul@grs+2)^0,f,c
  5832  001FDE  361F               	rlcf	(___flmul@grs+3)^0,f,c
  5833  001FE0  0626               	decf	___flmul@temp^0,f,c
  5834  001FE2  A0D8               	btfss	status,0,c
  5835  001FE4  0627               	decf	(___flmul@temp+1)^0,f,c
  5836  001FE6                     l2988:
  5837  001FE6  AE24               	btfss	(___flmul@prod+2)^0,7,c
  5838  001FE8  EFF8  F00F         	goto	u3141
  5839  001FEC  EFFA  F00F         	goto	u3140
  5840  001FF0                     u3141:
  5841  001FF0  EFDE  F00F         	goto	l2982
  5842  001FF4                     u3140:
  5843  001FF4  0E00               	movlw	0
  5844  001FF6  6E20               	movwf	___flmul@aexp^0,c
  5845  001FF8  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  5846  001FFA  EF01  F010         	goto	u3151
  5847  001FFE  EF03  F010         	goto	u3150
  5848  002002                     u3151:
  5849  002002  EF27  F010         	goto	l721
  5850  002006                     u3150:
  5851  002006  0EFF               	movlw	255
  5852  002008  141C               	andwf	___flmul@grs^0,w,c
  5853  00200A  6E17               	movwf	??___flmul^0,c
  5854  00200C  0EFF               	movlw	255
  5855  00200E  141D               	andwf	(___flmul@grs+1)^0,w,c
  5856  002010  6E18               	movwf	(??___flmul+1)^0,c
  5857  002012  0EFF               	movlw	255
  5858  002014  141E               	andwf	(___flmul@grs+2)^0,w,c
  5859  002016  6E19               	movwf	(??___flmul+2)^0,c
  5860  002018  0E7F               	movlw	127
  5861  00201A  141F               	andwf	(___flmul@grs+3)^0,w,c
  5862  00201C  6E1A               	movwf	(??___flmul+3)^0,c
  5863  00201E  5017               	movf	??___flmul^0,w,c
  5864  002020  1018               	iorwf	(??___flmul+1)^0,w,c
  5865  002022  1019               	iorwf	(??___flmul+2)^0,w,c
  5866  002024  101A               	iorwf	(??___flmul+3)^0,w,c
  5867  002026  B4D8               	btfsc	status,2,c
  5868  002028  EF18  F010         	goto	u3161
  5869  00202C  EF1A  F010         	goto	u3160
  5870  002030                     u3161:
  5871  002030  EF1E  F010         	goto	l722
  5872  002034                     u3160:
  5873  002034                     l2996:
  5874  002034  0E01               	movlw	1
  5875  002036  6E20               	movwf	___flmul@aexp^0,c
  5876  002038  EF27  F010         	goto	l721
  5877  00203C                     l722:
  5878  00203C  A022               	btfss	___flmul@prod^0,0,c
  5879  00203E  EF23  F010         	goto	u3171
  5880  002042  EF25  F010         	goto	u3170
  5881  002046                     u3171:
  5882  002046  EF27  F010         	goto	l721
  5883  00204A                     u3170:
  5884  00204A  EF1A  F010         	goto	l2996
  5885  00204E                     l721:
  5886  00204E  5020               	movf	___flmul@aexp^0,w,c
  5887  002050  B4D8               	btfsc	status,2,c
  5888  002052  EF2D  F010         	goto	u3181
  5889  002056  EF2F  F010         	goto	u3180
  5890  00205A                     u3181:
  5891  00205A  EF53  F010         	goto	l3008
  5892  00205E                     u3180:
  5893  00205E  0E01               	movlw	1
  5894  002060  2622               	addwf	___flmul@prod^0,f,c
  5895  002062  0E00               	movlw	0
  5896  002064  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5897  002066  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5898  002068  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5899  00206A  A025               	btfss	(___flmul@prod+3)^0,0,c
  5900  00206C  EF3A  F010         	goto	u3191
  5901  002070  EF3C  F010         	goto	u3190
  5902  002074                     u3191:
  5903  002074  EF53  F010         	goto	l3008
  5904  002078                     u3190:
  5905  002078  C022  F017         	movff	___flmul@prod,??___flmul
  5906  00207C  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  5907  002080  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  5908  002084  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  5909  002088  341A               	rlcf	(??___flmul+3)^0,w,c
  5910  00208A  321A               	rrcf	(??___flmul+3)^0,f,c
  5911  00208C  3219               	rrcf	(??___flmul+2)^0,f,c
  5912  00208E  3218               	rrcf	(??___flmul+1)^0,f,c
  5913  002090  3217               	rrcf	??___flmul^0,f,c
  5914  002092  C017  F022         	movff	??___flmul,___flmul@prod
  5915  002096  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  5916  00209A  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  5917  00209E  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  5918  0020A2  4A26               	infsnz	___flmul@temp^0,f,c
  5919  0020A4  2A27               	incf	(___flmul@temp+1)^0,f,c
  5920  0020A6                     l3008:
  5921  0020A6  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  5922  0020A8  EF5E  F010         	goto	u3201
  5923  0020AC  5027               	movf	(___flmul@temp+1)^0,w,c
  5924  0020AE  E108               	bnz	u3200
  5925  0020B0  2826               	incf	___flmul@temp^0,w,c
  5926  0020B2  A0D8               	btfss	status,0,c
  5927  0020B4  EF5E  F010         	goto	u3201
  5928  0020B8  EF60  F010         	goto	u3200
  5929  0020BC                     u3201:
  5930  0020BC  EF6A  F010         	goto	l3012
  5931  0020C0                     u3200:
  5932  0020C0  0E00               	movlw	0
  5933  0020C2  6E22               	movwf	___flmul@prod^0,c
  5934  0020C4  0E00               	movlw	0
  5935  0020C6  6E23               	movwf	(___flmul@prod+1)^0,c
  5936  0020C8  0E80               	movlw	128
  5937  0020CA  6E24               	movwf	(___flmul@prod+2)^0,c
  5938  0020CC  0E7F               	movlw	127
  5939  0020CE  6E25               	movwf	(___flmul@prod+3)^0,c
  5940  0020D0  EF98  F010         	goto	l3024
  5941  0020D4                     l3012:
  5942  0020D4  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  5943  0020D6  EF77  F010         	goto	u3210
  5944  0020DA  5027               	movf	(___flmul@temp+1)^0,w,c
  5945  0020DC  E106               	bnz	u3211
  5946  0020DE  0426               	decf	___flmul@temp^0,w,c
  5947  0020E0  B0D8               	btfsc	status,0,c
  5948  0020E2  EF75  F010         	goto	u3211
  5949  0020E6  EF77  F010         	goto	u3210
  5950  0020EA                     u3211:
  5951  0020EA  EF83  F010         	goto	l729
  5952  0020EE                     u3210:
  5953  0020EE  0E00               	movlw	0
  5954  0020F0  6E22               	movwf	___flmul@prod^0,c
  5955  0020F2  0E00               	movlw	0
  5956  0020F4  6E23               	movwf	(___flmul@prod+1)^0,c
  5957  0020F6  0E00               	movlw	0
  5958  0020F8  6E24               	movwf	(___flmul@prod+2)^0,c
  5959  0020FA  0E00               	movlw	0
  5960  0020FC  6E25               	movwf	(___flmul@prod+3)^0,c
  5961  0020FE  0E00               	movlw	0
  5962  002100  6E1B               	movwf	___flmul@sign^0,c
  5963  002102  EF98  F010         	goto	l3024
  5964  002106                     l729:
  5965  002106  C026  F021         	movff	___flmul@temp,___flmul@bexp
  5966  00210A  0EFF               	movlw	255
  5967  00210C  1622               	andwf	___flmul@prod^0,f,c
  5968  00210E  0EFF               	movlw	255
  5969  002110  1623               	andwf	(___flmul@prod+1)^0,f,c
  5970  002112  0E7F               	movlw	127
  5971  002114  1624               	andwf	(___flmul@prod+2)^0,f,c
  5972  002116  0E00               	movlw	0
  5973  002118  1625               	andwf	(___flmul@prod+3)^0,f,c
  5974  00211A  A021               	btfss	___flmul@bexp^0,0,c
  5975  00211C  EF92  F010         	goto	u3221
  5976  002120  EF94  F010         	goto	u3220
  5977  002124                     u3221:
  5978  002124  EF95  F010         	goto	l3022
  5979  002128                     u3220:
  5980  002128  8E24               	bsf	(___flmul@prod+2)^0,7,c
  5981  00212A                     l3022:
  5982  00212A  90D8               	bcf	status,0,c
  5983  00212C  3021               	rrcf	___flmul@bexp^0,w,c
  5984  00212E  6E25               	movwf	(___flmul@prod+3)^0,c
  5985  002130                     l3024:
  5986  002130  501B               	movf	___flmul@sign^0,w,c
  5987  002132  1225               	iorwf	(___flmul@prod+3)^0,f,c
  5988  002134  C022  F00F         	movff	___flmul@prod,?___flmul
  5989  002138  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  5990  00213C  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  5991  002140  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  5992  002144                     l716:
  5993  002144  0012               	return		;funcret
  5994  002146                     __end_of___flmul:
  5995                           	callstack 0
  5996                           
  5997 ;; *************** function ___flge *****************
  5998 ;; Defined at:
  5999 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\flge.c"
  6000 ;; Parameters:    Size  Location     Type
  6001 ;;  ff1             4   39[COMRAM] unsigned char 
  6002 ;;  ff2             4   43[COMRAM] unsigned char 
  6003 ;; Auto vars:     Size  Location     Type
  6004 ;;		None
  6005 ;; Return value:  Size  Location     Type
  6006 ;;		None               void
  6007 ;; Registers used:
  6008 ;;		wreg, status,2, status,0
  6009 ;; Tracked objects:
  6010 ;;		On entry : 0/0
  6011 ;;		On exit  : 0/0
  6012 ;;		Unchanged: 0/0
  6013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6014 ;;      Params:         8       0       0       0       0       0       0       0       0
  6015 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6016 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6017 ;;      Totals:        12       0       0       0       0       0       0       0       0
  6018 ;;Total ram usage:       12 bytes
  6019 ;; Hardware stack levels used: 1
  6020 ;; This function calls:
  6021 ;;		Nothing
  6022 ;; This function is called by:
  6023 ;;		_efgtoa
  6024 ;; This function uses a non-reentrant model
  6025 ;;
  6026                           
  6027                           	psect	text21
  6028  002B02                     __ptext21:
  6029                           	callstack 0
  6030  002B02                     ___flge:
  6031                           	callstack 26
  6032  002B02  0E00               	movlw	0
  6033  002B04  1428               	andwf	___flge@ff1^0,w,c
  6034  002B06  6E30               	movwf	??___flge^0,c
  6035  002B08  0E00               	movlw	0
  6036  002B0A  1429               	andwf	(___flge@ff1+1)^0,w,c
  6037  002B0C  6E31               	movwf	(??___flge+1)^0,c
  6038  002B0E  0E80               	movlw	128
  6039  002B10  142A               	andwf	(___flge@ff1+2)^0,w,c
  6040  002B12  6E32               	movwf	(??___flge+2)^0,c
  6041  002B14  0E7F               	movlw	127
  6042  002B16  142B               	andwf	(___flge@ff1+3)^0,w,c
  6043  002B18  6E33               	movwf	(??___flge+3)^0,c
  6044  002B1A  5030               	movf	??___flge^0,w,c
  6045  002B1C  1031               	iorwf	(??___flge+1)^0,w,c
  6046  002B1E  1032               	iorwf	(??___flge+2)^0,w,c
  6047  002B20  1033               	iorwf	(??___flge+3)^0,w,c
  6048  002B22  A4D8               	btfss	status,2,c
  6049  002B24  EF96  F015         	goto	u3381
  6050  002B28  EF98  F015         	goto	u3380
  6051  002B2C                     u3381:
  6052  002B2C  EFA0  F015         	goto	l3136
  6053  002B30                     u3380:
  6054  002B30  0E00               	movlw	0
  6055  002B32  6E28               	movwf	___flge@ff1^0,c
  6056  002B34  0E00               	movlw	0
  6057  002B36  6E29               	movwf	(___flge@ff1+1)^0,c
  6058  002B38  0E00               	movlw	0
  6059  002B3A  6E2A               	movwf	(___flge@ff1+2)^0,c
  6060  002B3C  0E00               	movlw	0
  6061  002B3E  6E2B               	movwf	(___flge@ff1+3)^0,c
  6062  002B40                     l3136:
  6063  002B40  0E00               	movlw	0
  6064  002B42  142C               	andwf	___flge@ff2^0,w,c
  6065  002B44  6E30               	movwf	??___flge^0,c
  6066  002B46  0E00               	movlw	0
  6067  002B48  142D               	andwf	(___flge@ff2+1)^0,w,c
  6068  002B4A  6E31               	movwf	(??___flge+1)^0,c
  6069  002B4C  0E80               	movlw	128
  6070  002B4E  142E               	andwf	(___flge@ff2+2)^0,w,c
  6071  002B50  6E32               	movwf	(??___flge+2)^0,c
  6072  002B52  0E7F               	movlw	127
  6073  002B54  142F               	andwf	(___flge@ff2+3)^0,w,c
  6074  002B56  6E33               	movwf	(??___flge+3)^0,c
  6075  002B58  5030               	movf	??___flge^0,w,c
  6076  002B5A  1031               	iorwf	(??___flge+1)^0,w,c
  6077  002B5C  1032               	iorwf	(??___flge+2)^0,w,c
  6078  002B5E  1033               	iorwf	(??___flge+3)^0,w,c
  6079  002B60  A4D8               	btfss	status,2,c
  6080  002B62  EFB5  F015         	goto	u3391
  6081  002B66  EFB7  F015         	goto	u3390
  6082  002B6A                     u3391:
  6083  002B6A  EFBF  F015         	goto	l3140
  6084  002B6E                     u3390:
  6085  002B6E  0E00               	movlw	0
  6086  002B70  6E2C               	movwf	___flge@ff2^0,c
  6087  002B72  0E00               	movlw	0
  6088  002B74  6E2D               	movwf	(___flge@ff2+1)^0,c
  6089  002B76  0E00               	movlw	0
  6090  002B78  6E2E               	movwf	(___flge@ff2+2)^0,c
  6091  002B7A  0E00               	movlw	0
  6092  002B7C  6E2F               	movwf	(___flge@ff2+3)^0,c
  6093  002B7E                     l3140:
  6094  002B7E  AE2B               	btfss	(___flge@ff1+3)^0,7,c
  6095  002B80  EFC4  F015         	goto	u3401
  6096  002B84  EFC6  F015         	goto	u3400
  6097  002B88                     u3401:
  6098  002B88  EFCF  F015         	goto	l3144
  6099  002B8C                     u3400:
  6100  002B8C  6C28               	negf	___flge@ff1^0,c
  6101  002B8E  1E29               	comf	(___flge@ff1+1)^0,f,c
  6102  002B90  B0D8               	btfsc	status,0,c
  6103  002B92  2A29               	incf	(___flge@ff1+1)^0,f,c
  6104  002B94  1E2A               	comf	(___flge@ff1+2)^0,f,c
  6105  002B96  B0D8               	btfsc	status,0,c
  6106  002B98  2A2A               	incf	(___flge@ff1+2)^0,f,c
  6107  002B9A  0E80               	movlw	128
  6108  002B9C  562B               	subfwb	(___flge@ff1+3)^0,f,c
  6109  002B9E                     l3144:
  6110  002B9E  AE2F               	btfss	(___flge@ff2+3)^0,7,c
  6111  002BA0  EFD4  F015         	goto	u3411
  6112  002BA4  EFD6  F015         	goto	u3410
  6113  002BA8                     u3411:
  6114  002BA8  EFDF  F015         	goto	l363
  6115  002BAC                     u3410:
  6116  002BAC  6C2C               	negf	___flge@ff2^0,c
  6117  002BAE  1E2D               	comf	(___flge@ff2+1)^0,f,c
  6118  002BB0  B0D8               	btfsc	status,0,c
  6119  002BB2  2A2D               	incf	(___flge@ff2+1)^0,f,c
  6120  002BB4  1E2E               	comf	(___flge@ff2+2)^0,f,c
  6121  002BB6  B0D8               	btfsc	status,0,c
  6122  002BB8  2A2E               	incf	(___flge@ff2+2)^0,f,c
  6123  002BBA  0E80               	movlw	128
  6124  002BBC  562F               	subfwb	(___flge@ff2+3)^0,f,c
  6125  002BBE                     l363:
  6126  002BBE  0E00               	movlw	0
  6127  002BC0  1A28               	xorwf	___flge@ff1^0,f,c
  6128  002BC2  0E00               	movlw	0
  6129  002BC4  1A29               	xorwf	(___flge@ff1+1)^0,f,c
  6130  002BC6  0E00               	movlw	0
  6131  002BC8  1A2A               	xorwf	(___flge@ff1+2)^0,f,c
  6132  002BCA  0E80               	movlw	128
  6133  002BCC  1A2B               	xorwf	(___flge@ff1+3)^0,f,c
  6134  002BCE  0E00               	movlw	0
  6135  002BD0  1A2C               	xorwf	___flge@ff2^0,f,c
  6136  002BD2  0E00               	movlw	0
  6137  002BD4  1A2D               	xorwf	(___flge@ff2+1)^0,f,c
  6138  002BD6  0E00               	movlw	0
  6139  002BD8  1A2E               	xorwf	(___flge@ff2+2)^0,f,c
  6140  002BDA  0E80               	movlw	128
  6141  002BDC  1A2F               	xorwf	(___flge@ff2+3)^0,f,c
  6142  002BDE  502C               	movf	___flge@ff2^0,w,c
  6143  002BE0  5C28               	subwf	___flge@ff1^0,w,c
  6144  002BE2  502D               	movf	(___flge@ff2+1)^0,w,c
  6145  002BE4  5829               	subwfb	(___flge@ff1+1)^0,w,c
  6146  002BE6  502E               	movf	(___flge@ff2+2)^0,w,c
  6147  002BE8  582A               	subwfb	(___flge@ff1+2)^0,w,c
  6148  002BEA  502F               	movf	(___flge@ff2+3)^0,w,c
  6149  002BEC  582B               	subwfb	(___flge@ff1+3)^0,w,c
  6150  002BEE  B0D8               	btfsc	status,0,c
  6151  002BF0  EFFC  F015         	goto	u3421
  6152  002BF4  EFFE  F015         	goto	u3420
  6153  002BF8                     u3421:
  6154  002BF8  EF01  F016         	goto	l3150
  6155  002BFC                     u3420:
  6156  002BFC  90D8               	bcf	status,0,c
  6157  002BFE  EF02  F016         	goto	l368
  6158  002C02                     l3150:
  6159  002C02  80D8               	bsf	status,0,c
  6160  002C04                     l368:
  6161  002C04  0012               	return		;funcret
  6162  002C06                     __end_of___flge:
  6163                           	callstack 0
  6164                           
  6165 ;; *************** function ___fleq *****************
  6166 ;; Defined at:
  6167 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\fleq.c"
  6168 ;; Parameters:    Size  Location     Type
  6169 ;;  ff1             4    0[COMRAM] unsigned char 
  6170 ;;  ff2             4    4[COMRAM] unsigned char 
  6171 ;; Auto vars:     Size  Location     Type
  6172 ;;		None
  6173 ;; Return value:  Size  Location     Type
  6174 ;;		None               void
  6175 ;; Registers used:
  6176 ;;		wreg, status,2, status,0
  6177 ;; Tracked objects:
  6178 ;;		On entry : 0/0
  6179 ;;		On exit  : 0/0
  6180 ;;		Unchanged: 0/0
  6181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6182 ;;      Params:         8       0       0       0       0       0       0       0       0
  6183 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6184 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6185 ;;      Totals:        12       0       0       0       0       0       0       0       0
  6186 ;;Total ram usage:       12 bytes
  6187 ;; Hardware stack levels used: 1
  6188 ;; This function calls:
  6189 ;;		Nothing
  6190 ;; This function is called by:
  6191 ;;		_efgtoa
  6192 ;; This function uses a non-reentrant model
  6193 ;;
  6194                           
  6195                           	psect	text22
  6196  0030DA                     __ptext22:
  6197                           	callstack 0
  6198  0030DA                     ___fleq:
  6199                           	callstack 26
  6200  0030DA  0E00               	movlw	0
  6201  0030DC  1401               	andwf	___fleq@ff1^0,w,c
  6202  0030DE  6E09               	movwf	??___fleq^0,c
  6203  0030E0  0E00               	movlw	0
  6204  0030E2  1402               	andwf	(___fleq@ff1+1)^0,w,c
  6205  0030E4  6E0A               	movwf	(??___fleq+1)^0,c
  6206  0030E6  0E80               	movlw	128
  6207  0030E8  1403               	andwf	(___fleq@ff1+2)^0,w,c
  6208  0030EA  6E0B               	movwf	(??___fleq+2)^0,c
  6209  0030EC  0E7F               	movlw	127
  6210  0030EE  1404               	andwf	(___fleq@ff1+3)^0,w,c
  6211  0030F0  6E0C               	movwf	(??___fleq+3)^0,c
  6212  0030F2  5009               	movf	??___fleq^0,w,c
  6213  0030F4  100A               	iorwf	(??___fleq+1)^0,w,c
  6214  0030F6  100B               	iorwf	(??___fleq+2)^0,w,c
  6215  0030F8  100C               	iorwf	(??___fleq+3)^0,w,c
  6216  0030FA  A4D8               	btfss	status,2,c
  6217  0030FC  EF82  F018         	goto	u3351
  6218  003100  EF84  F018         	goto	u3350
  6219  003104                     u3351:
  6220  003104  EF8C  F018         	goto	l3120
  6221  003108                     u3350:
  6222  003108  0E00               	movlw	0
  6223  00310A  6E01               	movwf	___fleq@ff1^0,c
  6224  00310C  0E00               	movlw	0
  6225  00310E  6E02               	movwf	(___fleq@ff1+1)^0,c
  6226  003110  0E00               	movlw	0
  6227  003112  6E03               	movwf	(___fleq@ff1+2)^0,c
  6228  003114  0E00               	movlw	0
  6229  003116  6E04               	movwf	(___fleq@ff1+3)^0,c
  6230  003118                     l3120:
  6231  003118  0E00               	movlw	0
  6232  00311A  1405               	andwf	___fleq@ff2^0,w,c
  6233  00311C  6E09               	movwf	??___fleq^0,c
  6234  00311E  0E00               	movlw	0
  6235  003120  1406               	andwf	(___fleq@ff2+1)^0,w,c
  6236  003122  6E0A               	movwf	(??___fleq+1)^0,c
  6237  003124  0E80               	movlw	128
  6238  003126  1407               	andwf	(___fleq@ff2+2)^0,w,c
  6239  003128  6E0B               	movwf	(??___fleq+2)^0,c
  6240  00312A  0E7F               	movlw	127
  6241  00312C  1408               	andwf	(___fleq@ff2+3)^0,w,c
  6242  00312E  6E0C               	movwf	(??___fleq+3)^0,c
  6243  003130  5009               	movf	??___fleq^0,w,c
  6244  003132  100A               	iorwf	(??___fleq+1)^0,w,c
  6245  003134  100B               	iorwf	(??___fleq+2)^0,w,c
  6246  003136  100C               	iorwf	(??___fleq+3)^0,w,c
  6247  003138  A4D8               	btfss	status,2,c
  6248  00313A  EFA1  F018         	goto	u3361
  6249  00313E  EFA3  F018         	goto	u3360
  6250  003142                     u3361:
  6251  003142  EFAB  F018         	goto	l3124
  6252  003146                     u3360:
  6253  003146  0E00               	movlw	0
  6254  003148  6E05               	movwf	___fleq@ff2^0,c
  6255  00314A  0E00               	movlw	0
  6256  00314C  6E06               	movwf	(___fleq@ff2+1)^0,c
  6257  00314E  0E00               	movlw	0
  6258  003150  6E07               	movwf	(___fleq@ff2+2)^0,c
  6259  003152  0E00               	movlw	0
  6260  003154  6E08               	movwf	(___fleq@ff2+3)^0,c
  6261  003156                     l3124:
  6262  003156  5005               	movf	___fleq@ff2^0,w,c
  6263  003158  1801               	xorwf	___fleq@ff1^0,w,c
  6264  00315A  E10F               	bnz	u3370
  6265  00315C  5006               	movf	(___fleq@ff2+1)^0,w,c
  6266  00315E  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  6267  003160  E10C               	bnz	u3370
  6268  003162  5007               	movf	(___fleq@ff2+2)^0,w,c
  6269  003164  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  6270  003166  E109               	bnz	u3370
  6271  003168  5008               	movf	(___fleq@ff2+3)^0,w,c
  6272  00316A  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  6273  00316C  B4D8               	btfsc	status,2,c
  6274  00316E  EFBB  F018         	goto	u3371
  6275  003172  EFBD  F018         	goto	u3370
  6276  003176                     u3371:
  6277  003176  EFC0  F018         	goto	l3128
  6278  00317A                     u3370:
  6279  00317A  90D8               	bcf	status,0,c
  6280  00317C  EFC1  F018         	goto	l357
  6281  003180                     l3128:
  6282  003180  80D8               	bsf	status,0,c
  6283  003182                     l357:
  6284  003182  0012               	return		;funcret
  6285  003184                     __end_of___fleq:
  6286                           	callstack 0
  6287                           
  6288 ;; *************** function ___fldiv *****************
  6289 ;; Defined at:
  6290 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcdiv.c"
  6291 ;; Parameters:    Size  Location     Type
  6292 ;;  b               4    0[COMRAM] unsigned char 
  6293 ;;  a               4    4[COMRAM] unsigned char 
  6294 ;; Auto vars:     Size  Location     Type
  6295 ;;  grs             4   19[COMRAM] unsigned long 
  6296 ;;  rem             4   12[COMRAM] unsigned long 
  6297 ;;  new_exp         2   17[COMRAM] short 
  6298 ;;  aexp            1   24[COMRAM] unsigned char 
  6299 ;;  bexp            1   23[COMRAM] unsigned char 
  6300 ;;  sign            1   16[COMRAM] unsigned char 
  6301 ;; Return value:  Size  Location     Type
  6302 ;;                  4    0[COMRAM] unsigned char 
  6303 ;; Registers used:
  6304 ;;		wreg, status,2, status,0
  6305 ;; Tracked objects:
  6306 ;;		On entry : 0/0
  6307 ;;		On exit  : 0/0
  6308 ;;		Unchanged: 0/0
  6309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6310 ;;      Params:         8       0       0       0       0       0       0       0       0
  6311 ;;      Locals:        13       0       0       0       0       0       0       0       0
  6312 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6313 ;;      Totals:        25       0       0       0       0       0       0       0       0
  6314 ;;Total ram usage:       25 bytes
  6315 ;; Hardware stack levels used: 1
  6316 ;; This function calls:
  6317 ;;		Nothing
  6318 ;; This function is called by:
  6319 ;;		_efgtoa
  6320 ;; This function uses a non-reentrant model
  6321 ;;
  6322                           
  6323                           	psect	text23
  6324  002146                     __ptext23:
  6325                           	callstack 0
  6326  002146                     ___fldiv:
  6327                           	callstack 26
  6328  002146  5004               	movf	(___fldiv@b+3)^0,w,c
  6329  002148  0B80               	andlw	128
  6330  00214A  6E11               	movwf	___fldiv@sign^0,c
  6331  00214C  5004               	movf	(___fldiv@b+3)^0,w,c
  6332  00214E  2404               	addwf	(___fldiv@b+3)^0,w,c
  6333  002150  6E18               	movwf	___fldiv@bexp^0,c
  6334  002152  AE03               	btfss	(___fldiv@b+2)^0,7,c
  6335  002154  EFAE  F010         	goto	u2811
  6336  002158  EFB0  F010         	goto	u2810
  6337  00215C                     u2811:
  6338  00215C  EFB1  F010         	goto	l2768
  6339  002160                     u2810:
  6340  002160  8018               	bsf	___fldiv@bexp^0,0,c
  6341  002162                     l2768:
  6342  002162  5018               	movf	___fldiv@bexp^0,w,c
  6343  002164  B4D8               	btfsc	status,2,c
  6344  002166  EFB7  F010         	goto	u2821
  6345  00216A  EFB9  F010         	goto	u2820
  6346  00216E                     u2821:
  6347  00216E  EFCE  F010         	goto	l2778
  6348  002172                     u2820:
  6349  002172  2818               	incf	___fldiv@bexp^0,w,c
  6350  002174  A4D8               	btfss	status,2,c
  6351  002176  EFBF  F010         	goto	u2831
  6352  00217A  EFC1  F010         	goto	u2830
  6353  00217E                     u2831:
  6354  00217E  EFC9  F010         	goto	l2774
  6355  002182                     u2830:
  6356  002182  0E00               	movlw	0
  6357  002184  6E01               	movwf	___fldiv@b^0,c
  6358  002186  0E00               	movlw	0
  6359  002188  6E02               	movwf	(___fldiv@b+1)^0,c
  6360  00218A  0E00               	movlw	0
  6361  00218C  6E03               	movwf	(___fldiv@b+2)^0,c
  6362  00218E  0E00               	movlw	0
  6363  002190  6E04               	movwf	(___fldiv@b+3)^0,c
  6364  002192                     l2774:
  6365  002192  8E03               	bsf	(___fldiv@b+2)^0,7,c
  6366  002194  0E00               	movlw	0
  6367  002196  6E04               	movwf	(___fldiv@b+3)^0,c
  6368  002198  EFD6  F010         	goto	l2780
  6369  00219C                     l2778:
  6370  00219C  0E00               	movlw	0
  6371  00219E  6E01               	movwf	___fldiv@b^0,c
  6372  0021A0  0E00               	movlw	0
  6373  0021A2  6E02               	movwf	(___fldiv@b+1)^0,c
  6374  0021A4  0E00               	movlw	0
  6375  0021A6  6E03               	movwf	(___fldiv@b+2)^0,c
  6376  0021A8  0E00               	movlw	0
  6377  0021AA  6E04               	movwf	(___fldiv@b+3)^0,c
  6378  0021AC                     l2780:
  6379  0021AC  5008               	movf	(___fldiv@a+3)^0,w,c
  6380  0021AE  0B80               	andlw	128
  6381  0021B0  1A11               	xorwf	___fldiv@sign^0,f,c
  6382  0021B2  5008               	movf	(___fldiv@a+3)^0,w,c
  6383  0021B4  2408               	addwf	(___fldiv@a+3)^0,w,c
  6384  0021B6  6E19               	movwf	___fldiv@aexp^0,c
  6385  0021B8  AE07               	btfss	(___fldiv@a+2)^0,7,c
  6386  0021BA  EFE1  F010         	goto	u2841
  6387  0021BE  EFE3  F010         	goto	u2840
  6388  0021C2                     u2841:
  6389  0021C2  EFE4  F010         	goto	l2788
  6390  0021C6                     u2840:
  6391  0021C6  8019               	bsf	___fldiv@aexp^0,0,c
  6392  0021C8                     l2788:
  6393  0021C8  5019               	movf	___fldiv@aexp^0,w,c
  6394  0021CA  B4D8               	btfsc	status,2,c
  6395  0021CC  EFEA  F010         	goto	u2851
  6396  0021D0  EFEC  F010         	goto	u2850
  6397  0021D4                     u2851:
  6398  0021D4  EF01  F011         	goto	l2798
  6399  0021D8                     u2850:
  6400  0021D8  2819               	incf	___fldiv@aexp^0,w,c
  6401  0021DA  A4D8               	btfss	status,2,c
  6402  0021DC  EFF2  F010         	goto	u2861
  6403  0021E0  EFF4  F010         	goto	u2860
  6404  0021E4                     u2861:
  6405  0021E4  EFFC  F010         	goto	l2794
  6406  0021E8                     u2860:
  6407  0021E8  0E00               	movlw	0
  6408  0021EA  6E05               	movwf	___fldiv@a^0,c
  6409  0021EC  0E00               	movlw	0
  6410  0021EE  6E06               	movwf	(___fldiv@a+1)^0,c
  6411  0021F0  0E00               	movlw	0
  6412  0021F2  6E07               	movwf	(___fldiv@a+2)^0,c
  6413  0021F4  0E00               	movlw	0
  6414  0021F6  6E08               	movwf	(___fldiv@a+3)^0,c
  6415  0021F8                     l2794:
  6416  0021F8  8E07               	bsf	(___fldiv@a+2)^0,7,c
  6417  0021FA  0E00               	movlw	0
  6418  0021FC  6E08               	movwf	(___fldiv@a+3)^0,c
  6419  0021FE  EF09  F011         	goto	l2800
  6420  002202                     l2798:
  6421  002202  0E00               	movlw	0
  6422  002204  6E05               	movwf	___fldiv@a^0,c
  6423  002206  0E00               	movlw	0
  6424  002208  6E06               	movwf	(___fldiv@a+1)^0,c
  6425  00220A  0E00               	movlw	0
  6426  00220C  6E07               	movwf	(___fldiv@a+2)^0,c
  6427  00220E  0E00               	movlw	0
  6428  002210  6E08               	movwf	(___fldiv@a+3)^0,c
  6429  002212                     l2800:
  6430  002212  5005               	movf	___fldiv@a^0,w,c
  6431  002214  1006               	iorwf	(___fldiv@a+1)^0,w,c
  6432  002216  1007               	iorwf	(___fldiv@a+2)^0,w,c
  6433  002218  1008               	iorwf	(___fldiv@a+3)^0,w,c
  6434  00221A  A4D8               	btfss	status,2,c
  6435  00221C  EF12  F011         	goto	u2871
  6436  002220  EF14  F011         	goto	u2870
  6437  002224                     u2871:
  6438  002224  EF2C  F011         	goto	l2812
  6439  002228                     u2870:
  6440  002228  0E00               	movlw	0
  6441  00222A  6E01               	movwf	___fldiv@b^0,c
  6442  00222C  0E00               	movlw	0
  6443  00222E  6E02               	movwf	(___fldiv@b+1)^0,c
  6444  002230  0E00               	movlw	0
  6445  002232  6E03               	movwf	(___fldiv@b+2)^0,c
  6446  002234  0E00               	movlw	0
  6447  002236  6E04               	movwf	(___fldiv@b+3)^0,c
  6448  002238  0E80               	movlw	128
  6449  00223A  1203               	iorwf	(___fldiv@b+2)^0,f,c
  6450  00223C  0E7F               	movlw	127
  6451  00223E  1204               	iorwf	(___fldiv@b+3)^0,f,c
  6452  002240                     l2806:
  6453  002240  5011               	movf	___fldiv@sign^0,w,c
  6454  002242  1204               	iorwf	(___fldiv@b+3)^0,f,c
  6455  002244  C001  F001         	movff	___fldiv@b,?___fldiv
  6456  002248  C002  F002         	movff	___fldiv@b+1,?___fldiv+1
  6457  00224C  C003  F003         	movff	___fldiv@b+2,?___fldiv+2
  6458  002250  C004  F004         	movff	___fldiv@b+3,?___fldiv+3
  6459  002254  EF6F  F012         	goto	l680
  6460  002258                     l2812:
  6461  002258  5018               	movf	___fldiv@bexp^0,w,c
  6462  00225A  A4D8               	btfss	status,2,c
  6463  00225C  EF32  F011         	goto	u2881
  6464  002260  EF34  F011         	goto	u2880
  6465  002264                     u2881:
  6466  002264  EF3E  F011         	goto	l2820
  6467  002268                     u2880:
  6468  002268  0E00               	movlw	0
  6469  00226A  6E01               	movwf	?___fldiv^0,c
  6470  00226C  0E00               	movlw	0
  6471  00226E  6E02               	movwf	(?___fldiv+1)^0,c
  6472  002270  0E00               	movlw	0
  6473  002272  6E03               	movwf	(?___fldiv+2)^0,c
  6474  002274  0E00               	movlw	0
  6475  002276  6E04               	movwf	(?___fldiv+3)^0,c
  6476  002278  EF6F  F012         	goto	l680
  6477  00227C                     l2820:
  6478  00227C  5019               	movf	___fldiv@aexp^0,w,c
  6479  00227E  C018  F009         	movff	___fldiv@bexp,??___fldiv
  6480  002282  6A0A               	clrf	(??___fldiv+1)^0,c
  6481  002284  5E09               	subwf	??___fldiv^0,f,c
  6482  002286  0E00               	movlw	0
  6483  002288  5A0A               	subwfb	(??___fldiv+1)^0,f,c
  6484  00228A  0E7F               	movlw	127
  6485  00228C  2409               	addwf	??___fldiv^0,w,c
  6486  00228E  6E12               	movwf	___fldiv@new_exp^0,c
  6487  002290  0E00               	movlw	0
  6488  002292  200A               	addwfc	(??___fldiv+1)^0,w,c
  6489  002294  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  6490  002296  C001  F00D         	movff	___fldiv@b,___fldiv@rem
  6491  00229A  C002  F00E         	movff	___fldiv@b+1,___fldiv@rem+1
  6492  00229E  C003  F00F         	movff	___fldiv@b+2,___fldiv@rem+2
  6493  0022A2  C004  F010         	movff	___fldiv@b+3,___fldiv@rem+3
  6494  0022A6  0E00               	movlw	0
  6495  0022A8  6E01               	movwf	___fldiv@b^0,c
  6496  0022AA  0E00               	movlw	0
  6497  0022AC  6E02               	movwf	(___fldiv@b+1)^0,c
  6498  0022AE  0E00               	movlw	0
  6499  0022B0  6E03               	movwf	(___fldiv@b+2)^0,c
  6500  0022B2  0E00               	movlw	0
  6501  0022B4  6E04               	movwf	(___fldiv@b+3)^0,c
  6502  0022B6  0E00               	movlw	0
  6503  0022B8  6E14               	movwf	___fldiv@grs^0,c
  6504  0022BA  0E00               	movlw	0
  6505  0022BC  6E15               	movwf	(___fldiv@grs+1)^0,c
  6506  0022BE  0E00               	movlw	0
  6507  0022C0  6E16               	movwf	(___fldiv@grs+2)^0,c
  6508  0022C2  0E00               	movlw	0
  6509  0022C4  6E17               	movwf	(___fldiv@grs+3)^0,c
  6510  0022C6  0E00               	movlw	0
  6511  0022C8  6E19               	movwf	___fldiv@aexp^0,c
  6512  0022CA  EF9F  F011         	goto	l682
  6513  0022CE                     l2830:
  6514  0022CE  5019               	movf	___fldiv@aexp^0,w,c
  6515  0022D0  B4D8               	btfsc	status,2,c
  6516  0022D2  EF6D  F011         	goto	u2891
  6517  0022D6  EF6F  F011         	goto	u2890
  6518  0022DA                     u2891:
  6519  0022DA  EF86  F011         	goto	l2838
  6520  0022DE                     u2890:
  6521  0022DE  90D8               	bcf	status,0,c
  6522  0022E0  360D               	rlcf	___fldiv@rem^0,f,c
  6523  0022E2  360E               	rlcf	(___fldiv@rem+1)^0,f,c
  6524  0022E4  360F               	rlcf	(___fldiv@rem+2)^0,f,c
  6525  0022E6  3610               	rlcf	(___fldiv@rem+3)^0,f,c
  6526  0022E8  90D8               	bcf	status,0,c
  6527  0022EA  3601               	rlcf	___fldiv@b^0,f,c
  6528  0022EC  3602               	rlcf	(___fldiv@b+1)^0,f,c
  6529  0022EE  3603               	rlcf	(___fldiv@b+2)^0,f,c
  6530  0022F0  3604               	rlcf	(___fldiv@b+3)^0,f,c
  6531  0022F2  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  6532  0022F4  EF7E  F011         	goto	u2901
  6533  0022F8  EF80  F011         	goto	u2900
  6534  0022FC                     u2901:
  6535  0022FC  EF81  F011         	goto	l685
  6536  002300                     u2900:
  6537  002300  8001               	bsf	___fldiv@b^0,0,c
  6538  002302                     l685:
  6539  002302  90D8               	bcf	status,0,c
  6540  002304  3614               	rlcf	___fldiv@grs^0,f,c
  6541  002306  3615               	rlcf	(___fldiv@grs+1)^0,f,c
  6542  002308  3616               	rlcf	(___fldiv@grs+2)^0,f,c
  6543  00230A  3617               	rlcf	(___fldiv@grs+3)^0,f,c
  6544  00230C                     l2838:
  6545  00230C  5005               	movf	___fldiv@a^0,w,c
  6546  00230E  5C0D               	subwf	___fldiv@rem^0,w,c
  6547  002310  5006               	movf	(___fldiv@a+1)^0,w,c
  6548  002312  580E               	subwfb	(___fldiv@rem+1)^0,w,c
  6549  002314  5007               	movf	(___fldiv@a+2)^0,w,c
  6550  002316  580F               	subwfb	(___fldiv@rem+2)^0,w,c
  6551  002318  5008               	movf	(___fldiv@a+3)^0,w,c
  6552  00231A  5810               	subwfb	(___fldiv@rem+3)^0,w,c
  6553  00231C  A0D8               	btfss	status,0,c
  6554  00231E  EF93  F011         	goto	u2911
  6555  002322  EF95  F011         	goto	u2910
  6556  002326                     u2911:
  6557  002326  EF9E  F011         	goto	l2844
  6558  00232A                     u2910:
  6559  00232A  8C17               	bsf	(___fldiv@grs+3)^0,6,c
  6560  00232C  5005               	movf	___fldiv@a^0,w,c
  6561  00232E  5E0D               	subwf	___fldiv@rem^0,f,c
  6562  002330  5006               	movf	(___fldiv@a+1)^0,w,c
  6563  002332  5A0E               	subwfb	(___fldiv@rem+1)^0,f,c
  6564  002334  5007               	movf	(___fldiv@a+2)^0,w,c
  6565  002336  5A0F               	subwfb	(___fldiv@rem+2)^0,f,c
  6566  002338  5008               	movf	(___fldiv@a+3)^0,w,c
  6567  00233A  5A10               	subwfb	(___fldiv@rem+3)^0,f,c
  6568  00233C                     l2844:
  6569  00233C  2A19               	incf	___fldiv@aexp^0,f,c
  6570  00233E                     l682:
  6571  00233E  0E19               	movlw	25
  6572  002340  6419               	cpfsgt	___fldiv@aexp^0,c
  6573  002342  EFA5  F011         	goto	u2921
  6574  002346  EFA7  F011         	goto	u2920
  6575  00234A                     u2921:
  6576  00234A  EF67  F011         	goto	l2830
  6577  00234E                     u2920:
  6578  00234E  500D               	movf	___fldiv@rem^0,w,c
  6579  002350  100E               	iorwf	(___fldiv@rem+1)^0,w,c
  6580  002352  100F               	iorwf	(___fldiv@rem+2)^0,w,c
  6581  002354  1010               	iorwf	(___fldiv@rem+3)^0,w,c
  6582  002356  B4D8               	btfsc	status,2,c
  6583  002358  EFB0  F011         	goto	u2931
  6584  00235C  EFB2  F011         	goto	u2930
  6585  002360                     u2931:
  6586  002360  EFCA  F011         	goto	l2856
  6587  002364                     u2930:
  6588  002364  8014               	bsf	___fldiv@grs^0,0,c
  6589  002366  EFCA  F011         	goto	l2856
  6590  00236A                     l2850:
  6591  00236A  90D8               	bcf	status,0,c
  6592  00236C  3601               	rlcf	___fldiv@b^0,f,c
  6593  00236E  3602               	rlcf	(___fldiv@b+1)^0,f,c
  6594  002370  3603               	rlcf	(___fldiv@b+2)^0,f,c
  6595  002372  3604               	rlcf	(___fldiv@b+3)^0,f,c
  6596  002374  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  6597  002376  EFBF  F011         	goto	u2941
  6598  00237A  EFC1  F011         	goto	u2940
  6599  00237E                     u2941:
  6600  00237E  EFC2  F011         	goto	l691
  6601  002382                     u2940:
  6602  002382  8001               	bsf	___fldiv@b^0,0,c
  6603  002384                     l691:
  6604  002384  90D8               	bcf	status,0,c
  6605  002386  3614               	rlcf	___fldiv@grs^0,f,c
  6606  002388  3615               	rlcf	(___fldiv@grs+1)^0,f,c
  6607  00238A  3616               	rlcf	(___fldiv@grs+2)^0,f,c
  6608  00238C  3617               	rlcf	(___fldiv@grs+3)^0,f,c
  6609  00238E  0612               	decf	___fldiv@new_exp^0,f,c
  6610  002390  A0D8               	btfss	status,0,c
  6611  002392  0613               	decf	(___fldiv@new_exp+1)^0,f,c
  6612  002394                     l2856:
  6613  002394  AE03               	btfss	(___fldiv@b+2)^0,7,c
  6614  002396  EFCF  F011         	goto	u2951
  6615  00239A  EFD1  F011         	goto	u2950
  6616  00239E                     u2951:
  6617  00239E  EFB5  F011         	goto	l2850
  6618  0023A2                     u2950:
  6619  0023A2  0E00               	movlw	0
  6620  0023A4  6E19               	movwf	___fldiv@aexp^0,c
  6621  0023A6  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  6622  0023A8  EFD8  F011         	goto	u2961
  6623  0023AC  EFDA  F011         	goto	u2960
  6624  0023B0                     u2961:
  6625  0023B0  EFFE  F011         	goto	l693
  6626  0023B4                     u2960:
  6627  0023B4  0EFF               	movlw	255
  6628  0023B6  1414               	andwf	___fldiv@grs^0,w,c
  6629  0023B8  6E09               	movwf	??___fldiv^0,c
  6630  0023BA  0EFF               	movlw	255
  6631  0023BC  1415               	andwf	(___fldiv@grs+1)^0,w,c
  6632  0023BE  6E0A               	movwf	(??___fldiv+1)^0,c
  6633  0023C0  0EFF               	movlw	255
  6634  0023C2  1416               	andwf	(___fldiv@grs+2)^0,w,c
  6635  0023C4  6E0B               	movwf	(??___fldiv+2)^0,c
  6636  0023C6  0E7F               	movlw	127
  6637  0023C8  1417               	andwf	(___fldiv@grs+3)^0,w,c
  6638  0023CA  6E0C               	movwf	(??___fldiv+3)^0,c
  6639  0023CC  5009               	movf	??___fldiv^0,w,c
  6640  0023CE  100A               	iorwf	(??___fldiv+1)^0,w,c
  6641  0023D0  100B               	iorwf	(??___fldiv+2)^0,w,c
  6642  0023D2  100C               	iorwf	(??___fldiv+3)^0,w,c
  6643  0023D4  B4D8               	btfsc	status,2,c
  6644  0023D6  EFEF  F011         	goto	u2971
  6645  0023DA  EFF1  F011         	goto	u2970
  6646  0023DE                     u2971:
  6647  0023DE  EFF5  F011         	goto	l694
  6648  0023E2                     u2970:
  6649  0023E2                     l2864:
  6650  0023E2  0E01               	movlw	1
  6651  0023E4  6E19               	movwf	___fldiv@aexp^0,c
  6652  0023E6  EFFE  F011         	goto	l693
  6653  0023EA                     l694:
  6654  0023EA  A001               	btfss	___fldiv@b^0,0,c
  6655  0023EC  EFFA  F011         	goto	u2981
  6656  0023F0  EFFC  F011         	goto	u2980
  6657  0023F4                     u2981:
  6658  0023F4  EFFE  F011         	goto	l693
  6659  0023F8                     u2980:
  6660  0023F8  EFF1  F011         	goto	l2864
  6661  0023FC                     l693:
  6662  0023FC  5019               	movf	___fldiv@aexp^0,w,c
  6663  0023FE  B4D8               	btfsc	status,2,c
  6664  002400  EF04  F012         	goto	u2991
  6665  002404  EF06  F012         	goto	u2990
  6666  002408                     u2991:
  6667  002408  EF2A  F012         	goto	l2876
  6668  00240C                     u2990:
  6669  00240C  0E01               	movlw	1
  6670  00240E  2601               	addwf	___fldiv@b^0,f,c
  6671  002410  0E00               	movlw	0
  6672  002412  2202               	addwfc	(___fldiv@b+1)^0,f,c
  6673  002414  2203               	addwfc	(___fldiv@b+2)^0,f,c
  6674  002416  2204               	addwfc	(___fldiv@b+3)^0,f,c
  6675  002418  A004               	btfss	(___fldiv@b+3)^0,0,c
  6676  00241A  EF11  F012         	goto	u3001
  6677  00241E  EF13  F012         	goto	u3000
  6678  002422                     u3001:
  6679  002422  EF2A  F012         	goto	l2876
  6680  002426                     u3000:
  6681  002426  C001  F009         	movff	___fldiv@b,??___fldiv
  6682  00242A  C002  F00A         	movff	___fldiv@b+1,??___fldiv+1
  6683  00242E  C003  F00B         	movff	___fldiv@b+2,??___fldiv+2
  6684  002432  C004  F00C         	movff	___fldiv@b+3,??___fldiv+3
  6685  002436  340C               	rlcf	(??___fldiv+3)^0,w,c
  6686  002438  320C               	rrcf	(??___fldiv+3)^0,f,c
  6687  00243A  320B               	rrcf	(??___fldiv+2)^0,f,c
  6688  00243C  320A               	rrcf	(??___fldiv+1)^0,f,c
  6689  00243E  3209               	rrcf	??___fldiv^0,f,c
  6690  002440  C009  F001         	movff	??___fldiv,___fldiv@b
  6691  002444  C00A  F002         	movff	??___fldiv+1,___fldiv@b+1
  6692  002448  C00B  F003         	movff	??___fldiv+2,___fldiv@b+2
  6693  00244C  C00C  F004         	movff	??___fldiv+3,___fldiv@b+3
  6694  002450  4A12               	infsnz	___fldiv@new_exp^0,f,c
  6695  002452  2A13               	incf	(___fldiv@new_exp+1)^0,f,c
  6696  002454                     l2876:
  6697  002454  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6698  002456  EF35  F012         	goto	u3011
  6699  00245A  5013               	movf	(___fldiv@new_exp+1)^0,w,c
  6700  00245C  E108               	bnz	u3010
  6701  00245E  2812               	incf	___fldiv@new_exp^0,w,c
  6702  002460  A0D8               	btfss	status,0,c
  6703  002462  EF35  F012         	goto	u3011
  6704  002466  EF37  F012         	goto	u3010
  6705  00246A                     u3011:
  6706  00246A  EF42  F012         	goto	l2880
  6707  00246E                     u3010:
  6708  00246E  0E00               	movlw	0
  6709  002470  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  6710  002472  6812               	setf	___fldiv@new_exp^0,c
  6711  002474  0E00               	movlw	0
  6712  002476  6E01               	movwf	___fldiv@b^0,c
  6713  002478  0E00               	movlw	0
  6714  00247A  6E02               	movwf	(___fldiv@b+1)^0,c
  6715  00247C  0E00               	movlw	0
  6716  00247E  6E03               	movwf	(___fldiv@b+2)^0,c
  6717  002480  0E00               	movlw	0
  6718  002482  6E04               	movwf	(___fldiv@b+3)^0,c
  6719  002484                     l2880:
  6720  002484  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6721  002486  EF4F  F012         	goto	u3020
  6722  00248A  5013               	movf	(___fldiv@new_exp+1)^0,w,c
  6723  00248C  E106               	bnz	u3021
  6724  00248E  0412               	decf	___fldiv@new_exp^0,w,c
  6725  002490  B0D8               	btfsc	status,0,c
  6726  002492  EF4D  F012         	goto	u3021
  6727  002496  EF4F  F012         	goto	u3020
  6728  00249A                     u3021:
  6729  00249A  EF5D  F012         	goto	l2884
  6730  00249E                     u3020:
  6731  00249E  0E00               	movlw	0
  6732  0024A0  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  6733  0024A2  0E00               	movlw	0
  6734  0024A4  6E12               	movwf	___fldiv@new_exp^0,c
  6735  0024A6  0E00               	movlw	0
  6736  0024A8  6E01               	movwf	___fldiv@b^0,c
  6737  0024AA  0E00               	movlw	0
  6738  0024AC  6E02               	movwf	(___fldiv@b+1)^0,c
  6739  0024AE  0E00               	movlw	0
  6740  0024B0  6E03               	movwf	(___fldiv@b+2)^0,c
  6741  0024B2  0E00               	movlw	0
  6742  0024B4  6E04               	movwf	(___fldiv@b+3)^0,c
  6743  0024B6  0E00               	movlw	0
  6744  0024B8  6E11               	movwf	___fldiv@sign^0,c
  6745  0024BA                     l2884:
  6746  0024BA  C012  F018         	movff	___fldiv@new_exp,___fldiv@bexp
  6747  0024BE  A018               	btfss	___fldiv@bexp^0,0,c
  6748  0024C0  EF64  F012         	goto	u3031
  6749  0024C4  EF66  F012         	goto	u3030
  6750  0024C8                     u3031:
  6751  0024C8  EF69  F012         	goto	l2890
  6752  0024CC                     u3030:
  6753  0024CC  8E03               	bsf	(___fldiv@b+2)^0,7,c
  6754  0024CE  EF6A  F012         	goto	l2892
  6755  0024D2                     l2890:
  6756  0024D2  9E03               	bcf	(___fldiv@b+2)^0,7,c
  6757  0024D4                     l2892:
  6758  0024D4  90D8               	bcf	status,0,c
  6759  0024D6  3018               	rrcf	___fldiv@bexp^0,w,c
  6760  0024D8  6E04               	movwf	(___fldiv@b+3)^0,c
  6761  0024DA  EF20  F011         	goto	l2806
  6762  0024DE                     l680:
  6763  0024DE  0012               	return		;funcret
  6764  0024E0                     __end_of___fldiv:
  6765                           	callstack 0
  6766                           
  6767 ;; *************** function ___awmod *****************
  6768 ;; Defined at:
  6769 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awmod.c"
  6770 ;; Parameters:    Size  Location     Type
  6771 ;;  dividend        2    0[COMRAM] int 
  6772 ;;  divisor         2    2[COMRAM] int 
  6773 ;; Auto vars:     Size  Location     Type
  6774 ;;  sign            1    5[COMRAM] unsigned char 
  6775 ;;  counter         1    4[COMRAM] unsigned char 
  6776 ;; Return value:  Size  Location     Type
  6777 ;;                  2    0[COMRAM] int 
  6778 ;; Registers used:
  6779 ;;		wreg, status,2, status,0
  6780 ;; Tracked objects:
  6781 ;;		On entry : 0/0
  6782 ;;		On exit  : 0/0
  6783 ;;		Unchanged: 0/0
  6784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6785 ;;      Params:         4       0       0       0       0       0       0       0       0
  6786 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6787 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6788 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6789 ;;Total ram usage:        6 bytes
  6790 ;; Hardware stack levels used: 1
  6791 ;; This function calls:
  6792 ;;		Nothing
  6793 ;; This function is called by:
  6794 ;;		_efgtoa
  6795 ;; This function uses a non-reentrant model
  6796 ;;
  6797                           
  6798                           	psect	text24
  6799  00302A                     __ptext24:
  6800                           	callstack 0
  6801  00302A                     ___awmod:
  6802                           	callstack 26
  6803  00302A  0E00               	movlw	0
  6804  00302C  6E06               	movwf	___awmod@sign^0,c
  6805  00302E  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  6806  003030  EF1E  F018         	goto	u3290
  6807  003034  EF1C  F018         	goto	u3291
  6808  003038                     u3291:
  6809  003038  EF24  F018         	goto	l3088
  6810  00303C                     u3290:
  6811  00303C  6C01               	negf	___awmod@dividend^0,c
  6812  00303E  1E02               	comf	(___awmod@dividend+1)^0,f,c
  6813  003040  B0D8               	btfsc	status,0,c
  6814  003042  2A02               	incf	(___awmod@dividend+1)^0,f,c
  6815  003044  0E01               	movlw	1
  6816  003046  6E06               	movwf	___awmod@sign^0,c
  6817  003048                     l3088:
  6818  003048  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  6819  00304A  EF2B  F018         	goto	u3300
  6820  00304E  EF29  F018         	goto	u3301
  6821  003052                     u3301:
  6822  003052  EF2F  F018         	goto	l3092
  6823  003056                     u3300:
  6824  003056  6C03               	negf	___awmod@divisor^0,c
  6825  003058  1E04               	comf	(___awmod@divisor+1)^0,f,c
  6826  00305A  B0D8               	btfsc	status,0,c
  6827  00305C  2A04               	incf	(___awmod@divisor+1)^0,f,c
  6828  00305E                     l3092:
  6829  00305E  5003               	movf	___awmod@divisor^0,w,c
  6830  003060  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  6831  003062  B4D8               	btfsc	status,2,c
  6832  003064  EF36  F018         	goto	u3311
  6833  003068  EF38  F018         	goto	u3310
  6834  00306C                     u3311:
  6835  00306C  EF5C  F018         	goto	l3108
  6836  003070                     u3310:
  6837  003070  0E01               	movlw	1
  6838  003072  6E05               	movwf	___awmod@counter^0,c
  6839  003074  EF40  F018         	goto	l3098
  6840  003078                     l3096:
  6841  003078  90D8               	bcf	status,0,c
  6842  00307A  3603               	rlcf	___awmod@divisor^0,f,c
  6843  00307C  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  6844  00307E  2A05               	incf	___awmod@counter^0,f,c
  6845  003080                     l3098:
  6846  003080  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  6847  003082  EF45  F018         	goto	u3321
  6848  003086  EF47  F018         	goto	u3320
  6849  00308A                     u3321:
  6850  00308A  EF3C  F018         	goto	l3096
  6851  00308E                     u3320:
  6852  00308E                     l3100:
  6853  00308E  5003               	movf	___awmod@divisor^0,w,c
  6854  003090  5C01               	subwf	___awmod@dividend^0,w,c
  6855  003092  5004               	movf	(___awmod@divisor+1)^0,w,c
  6856  003094  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  6857  003096  A0D8               	btfss	status,0,c
  6858  003098  EF50  F018         	goto	u3331
  6859  00309C  EF52  F018         	goto	u3330
  6860  0030A0                     u3331:
  6861  0030A0  EF56  F018         	goto	l3104
  6862  0030A4                     u3330:
  6863  0030A4  5003               	movf	___awmod@divisor^0,w,c
  6864  0030A6  5E01               	subwf	___awmod@dividend^0,f,c
  6865  0030A8  5004               	movf	(___awmod@divisor+1)^0,w,c
  6866  0030AA  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  6867  0030AC                     l3104:
  6868  0030AC  90D8               	bcf	status,0,c
  6869  0030AE  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  6870  0030B0  3203               	rrcf	___awmod@divisor^0,f,c
  6871  0030B2  2E05               	decfsz	___awmod@counter^0,f,c
  6872  0030B4  EF47  F018         	goto	l3100
  6873  0030B8                     l3108:
  6874  0030B8  5006               	movf	___awmod@sign^0,w,c
  6875  0030BA  B4D8               	btfsc	status,2,c
  6876  0030BC  EF62  F018         	goto	u3341
  6877  0030C0  EF64  F018         	goto	u3340
  6878  0030C4                     u3341:
  6879  0030C4  EF68  F018         	goto	l3112
  6880  0030C8                     u3340:
  6881  0030C8  6C01               	negf	___awmod@dividend^0,c
  6882  0030CA  1E02               	comf	(___awmod@dividend+1)^0,f,c
  6883  0030CC  B0D8               	btfsc	status,0,c
  6884  0030CE  2A02               	incf	(___awmod@dividend+1)^0,f,c
  6885  0030D0                     l3112:
  6886  0030D0  C001  F001         	movff	___awmod@dividend,?___awmod
  6887  0030D4  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  6888  0030D8  0012               	return		;funcret
  6889  0030DA                     __end_of___awmod:
  6890                           	callstack 0
  6891                           
  6892 ;; *************** function ___awdiv *****************
  6893 ;; Defined at:
  6894 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awdiv.c"
  6895 ;; Parameters:    Size  Location     Type
  6896 ;;  dividend        2    0[COMRAM] int 
  6897 ;;  divisor         2    2[COMRAM] int 
  6898 ;; Auto vars:     Size  Location     Type
  6899 ;;  quotient        2    6[COMRAM] int 
  6900 ;;  sign            1    5[COMRAM] unsigned char 
  6901 ;;  counter         1    4[COMRAM] unsigned char 
  6902 ;; Return value:  Size  Location     Type
  6903 ;;                  2    0[COMRAM] int 
  6904 ;; Registers used:
  6905 ;;		wreg, status,2, status,0
  6906 ;; Tracked objects:
  6907 ;;		On entry : 0/0
  6908 ;;		On exit  : 0/0
  6909 ;;		Unchanged: 0/0
  6910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6911 ;;      Params:         4       0       0       0       0       0       0       0       0
  6912 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6913 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6914 ;;      Totals:         8       0       0       0       0       0       0       0       0
  6915 ;;Total ram usage:        8 bytes
  6916 ;; Hardware stack levels used: 1
  6917 ;; This function calls:
  6918 ;;		Nothing
  6919 ;; This function is called by:
  6920 ;;		_efgtoa
  6921 ;; This function uses a non-reentrant model
  6922 ;;
  6923                           
  6924                           	psect	text25
  6925  002EA4                     __ptext25:
  6926                           	callstack 0
  6927  002EA4                     ___awdiv:
  6928                           	callstack 26
  6929  002EA4  0E00               	movlw	0
  6930  002EA6  6E06               	movwf	___awdiv@sign^0,c
  6931  002EA8  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  6932  002EAA  EF5B  F017         	goto	u3230
  6933  002EAE  EF59  F017         	goto	u3231
  6934  002EB2                     u3231:
  6935  002EB2  EF61  F017         	goto	l3044
  6936  002EB6                     u3230:
  6937  002EB6  6C03               	negf	___awdiv@divisor^0,c
  6938  002EB8  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  6939  002EBA  B0D8               	btfsc	status,0,c
  6940  002EBC  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  6941  002EBE  0E01               	movlw	1
  6942  002EC0  6E06               	movwf	___awdiv@sign^0,c
  6943  002EC2                     l3044:
  6944  002EC2  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  6945  002EC4  EF68  F017         	goto	u3240
  6946  002EC8  EF66  F017         	goto	u3241
  6947  002ECC                     u3241:
  6948  002ECC  EF6E  F017         	goto	l3050
  6949  002ED0                     u3240:
  6950  002ED0  6C01               	negf	___awdiv@dividend^0,c
  6951  002ED2  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  6952  002ED4  B0D8               	btfsc	status,0,c
  6953  002ED6  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  6954  002ED8  0E01               	movlw	1
  6955  002EDA  1A06               	xorwf	___awdiv@sign^0,f,c
  6956  002EDC                     l3050:
  6957  002EDC  0E00               	movlw	0
  6958  002EDE  6E08               	movwf	(___awdiv@quotient+1)^0,c
  6959  002EE0  0E00               	movlw	0
  6960  002EE2  6E07               	movwf	___awdiv@quotient^0,c
  6961  002EE4  5003               	movf	___awdiv@divisor^0,w,c
  6962  002EE6  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  6963  002EE8  B4D8               	btfsc	status,2,c
  6964  002EEA  EF79  F017         	goto	u3251
  6965  002EEE  EF7B  F017         	goto	u3250
  6966  002EF2                     u3251:
  6967  002EF2  EFA3  F017         	goto	l3072
  6968  002EF6                     u3250:
  6969  002EF6  0E01               	movlw	1
  6970  002EF8  6E05               	movwf	___awdiv@counter^0,c
  6971  002EFA  EF83  F017         	goto	l3058
  6972  002EFE                     l3056:
  6973  002EFE  90D8               	bcf	status,0,c
  6974  002F00  3603               	rlcf	___awdiv@divisor^0,f,c
  6975  002F02  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  6976  002F04  2A05               	incf	___awdiv@counter^0,f,c
  6977  002F06                     l3058:
  6978  002F06  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  6979  002F08  EF88  F017         	goto	u3261
  6980  002F0C  EF8A  F017         	goto	u3260
  6981  002F10                     u3261:
  6982  002F10  EF7F  F017         	goto	l3056
  6983  002F14                     u3260:
  6984  002F14                     l3060:
  6985  002F14  90D8               	bcf	status,0,c
  6986  002F16  3607               	rlcf	___awdiv@quotient^0,f,c
  6987  002F18  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  6988  002F1A  5003               	movf	___awdiv@divisor^0,w,c
  6989  002F1C  5C01               	subwf	___awdiv@dividend^0,w,c
  6990  002F1E  5004               	movf	(___awdiv@divisor+1)^0,w,c
  6991  002F20  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  6992  002F22  A0D8               	btfss	status,0,c
  6993  002F24  EF96  F017         	goto	u3271
  6994  002F28  EF98  F017         	goto	u3270
  6995  002F2C                     u3271:
  6996  002F2C  EF9D  F017         	goto	l3068
  6997  002F30                     u3270:
  6998  002F30  5003               	movf	___awdiv@divisor^0,w,c
  6999  002F32  5E01               	subwf	___awdiv@dividend^0,f,c
  7000  002F34  5004               	movf	(___awdiv@divisor+1)^0,w,c
  7001  002F36  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  7002  002F38  8007               	bsf	___awdiv@quotient^0,0,c
  7003  002F3A                     l3068:
  7004  002F3A  90D8               	bcf	status,0,c
  7005  002F3C  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  7006  002F3E  3203               	rrcf	___awdiv@divisor^0,f,c
  7007  002F40  2E05               	decfsz	___awdiv@counter^0,f,c
  7008  002F42  EF8A  F017         	goto	l3060
  7009  002F46                     l3072:
  7010  002F46  5006               	movf	___awdiv@sign^0,w,c
  7011  002F48  B4D8               	btfsc	status,2,c
  7012  002F4A  EFA9  F017         	goto	u3281
  7013  002F4E  EFAB  F017         	goto	u3280
  7014  002F52                     u3281:
  7015  002F52  EFAF  F017         	goto	l3076
  7016  002F56                     u3280:
  7017  002F56  6C07               	negf	___awdiv@quotient^0,c
  7018  002F58  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  7019  002F5A  B0D8               	btfsc	status,0,c
  7020  002F5C  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  7021  002F5E                     l3076:
  7022  002F5E  C007  F001         	movff	___awdiv@quotient,?___awdiv
  7023  002F62  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  7024  002F66  0012               	return		;funcret
  7025  002F68                     __end_of___awdiv:
  7026                           	callstack 0
  7027                           
  7028 ;; *************** function _atoi *****************
  7029 ;; Defined at:
  7030 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\atoi.c"
  7031 ;; Parameters:    Size  Location     Type
  7032 ;;  s               2    7[COMRAM] PTR const unsigned char 
  7033 ;;		 -> STR_1(13), 
  7034 ;; Auto vars:     Size  Location     Type
  7035 ;;  n               2   15[COMRAM] int 
  7036 ;;  neg             2   13[COMRAM] int 
  7037 ;; Return value:  Size  Location     Type
  7038 ;;                  2    7[COMRAM] int 
  7039 ;; Registers used:
  7040 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7041 ;; Tracked objects:
  7042 ;;		On entry : 0/0
  7043 ;;		On exit  : 0/0
  7044 ;;		Unchanged: 0/0
  7045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7046 ;;      Params:         2       0       0       0       0       0       0       0       0
  7047 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7048 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7049 ;;      Totals:        10       0       0       0       0       0       0       0       0
  7050 ;;Total ram usage:       10 bytes
  7051 ;; Hardware stack levels used: 1
  7052 ;; Hardware stack levels required when called: 1
  7053 ;; This function calls:
  7054 ;;		___wmul
  7055 ;;		_isdigit
  7056 ;;		_isspace
  7057 ;; This function is called by:
  7058 ;;		_vfpfcnvrt
  7059 ;; This function uses a non-reentrant model
  7060 ;;
  7061                           
  7062                           	psect	text26
  7063  0028A6                     __ptext26:
  7064                           	callstack 0
  7065  0028A6                     _atoi:
  7066                           	callstack 26
  7067  0028A6  0E00               	movlw	0
  7068  0028A8  6E11               	movwf	(atoi@n+1)^0,c
  7069  0028AA  0E00               	movlw	0
  7070  0028AC  6E10               	movwf	atoi@n^0,c
  7071  0028AE  0E00               	movlw	0
  7072  0028B0  6E0F               	movwf	(atoi@neg+1)^0,c
  7073  0028B2  0E00               	movlw	0
  7074  0028B4  6E0E               	movwf	atoi@neg^0,c
  7075  0028B6  EF5F  F014         	goto	l3620
  7076  0028BA                     l3616:
  7077  0028BA  4A08               	infsnz	atoi@s^0,f,c
  7078  0028BC  2A09               	incf	(atoi@s+1)^0,f,c
  7079  0028BE                     l3620:
  7080  0028BE  C008  FFF6         	movff	atoi@s,tblptrl
  7081  0028C2  C009  FFF7         	movff	atoi@s+1,tblptrh
  7082  0028C6                     	if	0	;tblptru may be non-zero
  7083  0028C6                     	endif
  7084  0028C6                     	if	0	;tblptru may be non-zero
  7085  0028C6                     	endif
  7086  0028C6  0008               	tblrd		*
  7087  0028C8  50F5               	movf	tablat,w,c
  7088  0028CA  0A20               	xorlw	32
  7089  0028CC  B4D8               	btfsc	status,2,c
  7090  0028CE  EF6B  F014         	goto	u4271
  7091  0028D2  EF6D  F014         	goto	u4270
  7092  0028D6                     u4271:
  7093  0028D6  EF5D  F014         	goto	l3616
  7094  0028DA                     u4270:
  7095  0028DA  0EF7               	movlw	247
  7096  0028DC  6E0A               	movwf	??_atoi^0,c
  7097  0028DE  0EFF               	movlw	255
  7098  0028E0  6E0B               	movwf	(??_atoi+1)^0,c
  7099  0028E2  C008  FFF6         	movff	atoi@s,tblptrl
  7100  0028E6  C009  FFF7         	movff	atoi@s+1,tblptrh
  7101  0028EA                     	if	0	;tblptru may be non-zero
  7102  0028EA                     	endif
  7103  0028EA                     	if	0	;tblptru may be non-zero
  7104  0028EA                     	endif
  7105  0028EA  0008               	tblrd		*
  7106  0028EC  50F5               	movf	tablat,w,c
  7107  0028EE  6E0C               	movwf	(??_atoi+2)^0,c
  7108  0028F0  6A0D               	clrf	(??_atoi+3)^0,c
  7109  0028F2  500A               	movf	??_atoi^0,w,c
  7110  0028F4  260C               	addwf	(??_atoi+2)^0,f,c
  7111  0028F6  500B               	movf	(??_atoi+1)^0,w,c
  7112  0028F8  220D               	addwfc	(??_atoi+3)^0,f,c
  7113  0028FA  500D               	movf	(??_atoi+3)^0,w,c
  7114  0028FC  E109               	bnz	u4280
  7115  0028FE  0E05               	movlw	5
  7116  002900  5C0C               	subwf	(??_atoi+2)^0,w,c
  7117  002902  A0D8               	btfss	status,0,c
  7118  002904  EF86  F014         	goto	u4281
  7119  002908  EF88  F014         	goto	u4280
  7120  00290C                     u4281:
  7121  00290C  EF5D  F014         	goto	l3616
  7122  002910                     u4280:
  7123  002910  EF92  F014         	goto	l3628
  7124  002914                     l3624:
  7125  002914  0E00               	movlw	0
  7126  002916  6E0F               	movwf	(atoi@neg+1)^0,c
  7127  002918  0E01               	movlw	1
  7128  00291A  6E0E               	movwf	atoi@neg^0,c
  7129  00291C                     l3626:
  7130  00291C  4A08               	infsnz	atoi@s^0,f,c
  7131  00291E  2A09               	incf	(atoi@s+1)^0,f,c
  7132  002920  EFC7  F014         	goto	l3636
  7133  002924                     l3628:
  7134  002924  C008  FFF6         	movff	atoi@s,tblptrl
  7135  002928  C009  FFF7         	movff	atoi@s+1,tblptrh
  7136  00292C                     	if	0	;tblptru may be non-zero
  7137  00292C                     	endif
  7138  00292C                     	if	0	;tblptru may be non-zero
  7139  00292C                     	endif
  7140  00292C  0008               	tblrd		*
  7141  00292E  50F5               	movf	tablat,w,c
  7142  002930  6E0A               	movwf	??_atoi^0,c
  7143  002932  6A0B               	clrf	(??_atoi+1)^0,c
  7144                           
  7145                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7146                           ; Switch size 1, requested type "simple"
  7147                           ; Number of cases is 1, Range of values is 0 to 0
  7148                           ; switch strategies available:
  7149                           ; Name         Instructions Cycles
  7150                           ; simple_byte            4     3 (average)
  7151                           ;	Chosen strategy is simple_byte
  7152  002934  500B               	movf	(??_atoi+1)^0,w,c
  7153  002936  0A00               	xorlw	0	; case 0
  7154  002938  B4D8               	btfsc	status,2,c
  7155  00293A  EFA1  F014         	goto	l3974
  7156  00293E  EFC7  F014         	goto	l3636
  7157  002942                     l3974:
  7158                           
  7159                           ; Switch size 1, requested type "simple"
  7160                           ; Number of cases is 2, Range of values is 43 to 45
  7161                           ; switch strategies available:
  7162                           ; Name         Instructions Cycles
  7163                           ; simple_byte            7     4 (average)
  7164                           ;	Chosen strategy is simple_byte
  7165  002942  500A               	movf	??_atoi^0,w,c
  7166  002944  0A2B               	xorlw	43	; case 43
  7167  002946  B4D8               	btfsc	status,2,c
  7168  002948  EF8E  F014         	goto	l3626
  7169  00294C  0A06               	xorlw	6	; case 45
  7170  00294E  B4D8               	btfsc	status,2,c
  7171  002950  EF8A  F014         	goto	l3624
  7172  002954  EFC7  F014         	goto	l3636
  7173  002958                     l3630:
  7174  002958  C010  F001         	movff	atoi@n,___wmul@multiplier
  7175  00295C  C011  F002         	movff	atoi@n+1,___wmul@multiplier+1
  7176  002960  0E00               	movlw	0
  7177  002962  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  7178  002964  0E0A               	movlw	10
  7179  002966  6E03               	movwf	___wmul@multiplicand^0,c
  7180  002968  EC82  F01B         	call	___wmul	;wreg free
  7181  00296C  C008  FFF6         	movff	atoi@s,tblptrl
  7182  002970  C009  FFF7         	movff	atoi@s+1,tblptrh
  7183  002974                     	if	0	;tblptru may be non-zero
  7184  002974                     	endif
  7185  002974                     	if	0	;tblptru may be non-zero
  7186  002974                     	endif
  7187  002974  0008               	tblrd		*
  7188  002976  50F5               	movf	tablat,w,c
  7189  002978  5E01               	subwf	?___wmul^0,f,c
  7190  00297A  0E00               	movlw	0
  7191  00297C  5A02               	subwfb	(?___wmul+1)^0,f,c
  7192  00297E  0E30               	movlw	48
  7193  002980  2401               	addwf	?___wmul^0,w,c
  7194  002982  6E10               	movwf	atoi@n^0,c
  7195  002984  0E00               	movlw	0
  7196  002986  2002               	addwfc	(?___wmul+1)^0,w,c
  7197  002988  6E11               	movwf	(atoi@n+1)^0,c
  7198  00298A  EF8E  F014         	goto	l3626
  7199  00298E                     l3636:
  7200  00298E  0ED0               	movlw	208
  7201  002990  6E0A               	movwf	??_atoi^0,c
  7202  002992  0EFF               	movlw	255
  7203  002994  6E0B               	movwf	(??_atoi+1)^0,c
  7204  002996  C008  FFF6         	movff	atoi@s,tblptrl
  7205  00299A  C009  FFF7         	movff	atoi@s+1,tblptrh
  7206  00299E                     	if	0	;tblptru may be non-zero
  7207  00299E                     	endif
  7208  00299E                     	if	0	;tblptru may be non-zero
  7209  00299E                     	endif
  7210  00299E  0008               	tblrd		*
  7211  0029A0  50F5               	movf	tablat,w,c
  7212  0029A2  6E0C               	movwf	(??_atoi+2)^0,c
  7213  0029A4  6A0D               	clrf	(??_atoi+3)^0,c
  7214  0029A6  500A               	movf	??_atoi^0,w,c
  7215  0029A8  260C               	addwf	(??_atoi+2)^0,f,c
  7216  0029AA  500B               	movf	(??_atoi+1)^0,w,c
  7217  0029AC  220D               	addwfc	(??_atoi+3)^0,f,c
  7218  0029AE  500D               	movf	(??_atoi+3)^0,w,c
  7219  0029B0  E109               	bnz	u4290
  7220  0029B2  0E0A               	movlw	10
  7221  0029B4  5C0C               	subwf	(??_atoi+2)^0,w,c
  7222  0029B6  A0D8               	btfss	status,0,c
  7223  0029B8  EFE0  F014         	goto	u4291
  7224  0029BC  EFE2  F014         	goto	u4290
  7225  0029C0                     u4291:
  7226  0029C0  EFAC  F014         	goto	l3630
  7227  0029C4                     u4290:
  7228  0029C4  500E               	movf	atoi@neg^0,w,c
  7229  0029C6  100F               	iorwf	(atoi@neg+1)^0,w,c
  7230  0029C8  A4D8               	btfss	status,2,c
  7231  0029CA  EFE9  F014         	goto	u4301
  7232  0029CE  EFEB  F014         	goto	u4300
  7233  0029D2                     u4301:
  7234  0029D2  EFF9  F014         	goto	l969
  7235  0029D6                     u4300:
  7236  0029D6  C010  F00A         	movff	atoi@n,??_atoi
  7237  0029DA  C011  F00B         	movff	atoi@n+1,??_atoi+1
  7238  0029DE  1E0A               	comf	??_atoi^0,f,c
  7239  0029E0  1E0B               	comf	(??_atoi+1)^0,f,c
  7240  0029E2  4A0A               	infsnz	??_atoi^0,f,c
  7241  0029E4  2A0B               	incf	(??_atoi+1)^0,f,c
  7242  0029E6  C00A  F008         	movff	??_atoi,?_atoi
  7243  0029EA  C00B  F009         	movff	??_atoi+1,?_atoi+1
  7244  0029EE  EFFD  F014         	goto	l972
  7245  0029F2                     l969:
  7246  0029F2  C010  F008         	movff	atoi@n,?_atoi
  7247  0029F6  C011  F009         	movff	atoi@n+1,?_atoi+1
  7248  0029FA                     l972:
  7249  0029FA  0012               	return		;funcret
  7250  0029FC                     __end_of_atoi:
  7251                           	callstack 0
  7252                           
  7253 ;; *************** function _isspace *****************
  7254 ;; Defined at:
  7255 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\isspace.c"
  7256 ;; Parameters:    Size  Location     Type
  7257 ;;  c               2    0[COMRAM] int 
  7258 ;; Auto vars:     Size  Location     Type
  7259 ;;		None
  7260 ;; Return value:  Size  Location     Type
  7261 ;;                  2    0[COMRAM] int 
  7262 ;; Registers used:
  7263 ;;		wreg, status,2, status,0
  7264 ;; Tracked objects:
  7265 ;;		On entry : 0/0
  7266 ;;		On exit  : 0/0
  7267 ;;		Unchanged: 0/0
  7268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7269 ;;      Params:         2       0       0       0       0       0       0       0       0
  7270 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7271 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7272 ;;      Totals:         7       0       0       0       0       0       0       0       0
  7273 ;;Total ram usage:        7 bytes
  7274 ;; Hardware stack levels used: 1
  7275 ;; This function calls:
  7276 ;;		Nothing
  7277 ;; This function is called by:
  7278 ;;		_atoi
  7279 ;; This function uses a non-reentrant model
  7280 ;;
  7281                           
  7282                           	psect	text27
  7283  00341C                     __ptext27:
  7284                           	callstack 0
  7285  00341C                     _isspace:
  7286                           	callstack 26
  7287  00341C  0E01               	movlw	1
  7288  00341E  6E07               	movwf	_isspace$1150^0,c
  7289  003420  0E20               	movlw	32
  7290  003422  1801               	xorwf	isspace@c^0,w,c
  7291  003424  1002               	iorwf	(isspace@c+1)^0,w,c
  7292  003426  B4D8               	btfsc	status,2,c
  7293  003428  EF18  F01A         	goto	u3771
  7294  00342C  EF1A  F01A         	goto	u3770
  7295  003430                     u3771:
  7296  003430  EF33  F01A         	goto	l3304
  7297  003434                     u3770:
  7298  003434  0EF7               	movlw	247
  7299  003436  6E03               	movwf	??_isspace^0,c
  7300  003438  0EFF               	movlw	255
  7301  00343A  6E04               	movwf	(??_isspace+1)^0,c
  7302  00343C  C001  F005         	movff	isspace@c,??_isspace+2
  7303  003440  C002  F006         	movff	isspace@c+1,??_isspace+3
  7304  003444  5003               	movf	??_isspace^0,w,c
  7305  003446  2605               	addwf	(??_isspace+2)^0,f,c
  7306  003448  5004               	movf	(??_isspace+1)^0,w,c
  7307  00344A  2206               	addwfc	(??_isspace+3)^0,f,c
  7308  00344C  5006               	movf	(??_isspace+3)^0,w,c
  7309  00344E  E109               	bnz	u3780
  7310  003450  0E05               	movlw	5
  7311  003452  5C05               	subwf	(??_isspace+2)^0,w,c
  7312  003454  A0D8               	btfss	status,0,c
  7313  003456  EF2F  F01A         	goto	u3781
  7314  00345A  EF31  F01A         	goto	u3780
  7315  00345E                     u3781:
  7316  00345E  EF33  F01A         	goto	l3304
  7317  003462                     u3780:
  7318  003462  0E00               	movlw	0
  7319  003464  6E07               	movwf	_isspace$1150^0,c
  7320  003466                     l3304:
  7321  003466  C007  F001         	movff	_isspace$1150,?_isspace
  7322  00346A  6A02               	clrf	(?_isspace+1)^0,c
  7323  00346C  0012               	return		;funcret
  7324  00346E                     __end_of_isspace:
  7325                           	callstack 0
  7326                           
  7327 ;; *************** function _isdigit *****************
  7328 ;; Defined at:
  7329 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\isdigit.c"
  7330 ;; Parameters:    Size  Location     Type
  7331 ;;  c               2    0[COMRAM] int 
  7332 ;; Auto vars:     Size  Location     Type
  7333 ;;		None
  7334 ;; Return value:  Size  Location     Type
  7335 ;;                  2    0[COMRAM] int 
  7336 ;; Registers used:
  7337 ;;		wreg, status,2, status,0
  7338 ;; Tracked objects:
  7339 ;;		On entry : 0/0
  7340 ;;		On exit  : 0/0
  7341 ;;		Unchanged: 0/0
  7342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7343 ;;      Params:         2       0       0       0       0       0       0       0       0
  7344 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7345 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7346 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7347 ;;Total ram usage:        6 bytes
  7348 ;; Hardware stack levels used: 1
  7349 ;; This function calls:
  7350 ;;		Nothing
  7351 ;; This function is called by:
  7352 ;;		_vfpfcnvrt
  7353 ;;		_atoi
  7354 ;; This function uses a non-reentrant model
  7355 ;;
  7356                           
  7357                           	psect	text28
  7358  003600                     __ptext28:
  7359                           	callstack 0
  7360  003600                     _isdigit:
  7361                           	callstack 27
  7362  003600  0ED0               	movlw	208
  7363  003602  6E03               	movwf	??_isdigit^0,c
  7364  003604  0EFF               	movlw	255
  7365  003606  6E04               	movwf	(??_isdigit+1)^0,c
  7366  003608  C001  F005         	movff	isdigit@c,??_isdigit+2
  7367  00360C  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  7368  003610  5003               	movf	??_isdigit^0,w,c
  7369  003612  2605               	addwf	(??_isdigit+2)^0,f,c
  7370  003614  5004               	movf	(??_isdigit+1)^0,w,c
  7371  003616  2206               	addwfc	(??_isdigit+3)^0,f,c
  7372  003618  5006               	movf	(??_isdigit+3)^0,w,c
  7373  00361A  E10A               	bnz	u3750
  7374  00361C  0E0A               	movlw	10
  7375  00361E  5C05               	subwf	(??_isdigit+2)^0,w,c
  7376  003620  A0D8               	btfss	status,0,c
  7377  003622  EF15  F01B         	goto	u3751
  7378  003626  EF18  F01B         	goto	u3750
  7379  00362A                     u3751:
  7380  00362A  0E01               	movlw	1
  7381  00362C  EF19  F01B         	goto	u3760
  7382  003630                     u3750:
  7383  003630  0E00               	movlw	0
  7384  003632                     u3760:
  7385  003632  6E01               	movwf	?_isdigit^0,c
  7386  003634  6A02               	clrf	(?_isdigit+1)^0,c
  7387  003636  0012               	return		;funcret
  7388  003638                     __end_of_isdigit:
  7389                           	callstack 0
  7390                           
  7391 ;; *************** function ___wmul *****************
  7392 ;; Defined at:
  7393 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul16.c"
  7394 ;; Parameters:    Size  Location     Type
  7395 ;;  multiplier      2    0[COMRAM] unsigned int 
  7396 ;;  multiplicand    2    2[COMRAM] unsigned int 
  7397 ;; Auto vars:     Size  Location     Type
  7398 ;;  product         2    4[COMRAM] unsigned int 
  7399 ;; Return value:  Size  Location     Type
  7400 ;;                  2    0[COMRAM] unsigned int 
  7401 ;; Registers used:
  7402 ;;		wreg, status,2, status,0, prodl, prodh
  7403 ;; Tracked objects:
  7404 ;;		On entry : 0/0
  7405 ;;		On exit  : 0/0
  7406 ;;		Unchanged: 0/0
  7407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7408 ;;      Params:         4       0       0       0       0       0       0       0       0
  7409 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7410 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7411 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7412 ;;Total ram usage:        6 bytes
  7413 ;; Hardware stack levels used: 1
  7414 ;; This function calls:
  7415 ;;		Nothing
  7416 ;; This function is called by:
  7417 ;;		_atoi
  7418 ;; This function uses a non-reentrant model
  7419 ;;
  7420                           
  7421                           	psect	text29
  7422  003704                     __ptext29:
  7423                           	callstack 0
  7424  003704                     ___wmul:
  7425                           	callstack 26
  7426  003704  5001               	movf	___wmul@multiplier^0,w,c
  7427  003706  0203               	mulwf	___wmul@multiplicand^0,c
  7428  003708  CFF3 F005          	movff	prodl,___wmul@product
  7429  00370C  CFF4 F006          	movff	prodh,___wmul@product+1
  7430  003710  5001               	movf	___wmul@multiplier^0,w,c
  7431  003712  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  7432  003714  50F3               	movf	243,w,c
  7433  003716  2606               	addwf	(___wmul@product+1)^0,f,c
  7434  003718  5002               	movf	(___wmul@multiplier+1)^0,w,c
  7435  00371A  0203               	mulwf	___wmul@multiplicand^0,c
  7436  00371C  50F3               	movf	243,w,c
  7437  00371E  2606               	addwf	(___wmul@product+1)^0,f,c
  7438  003720  C005  F001         	movff	___wmul@product,?___wmul
  7439  003724  C006  F002         	movff	___wmul@product+1,?___wmul+1
  7440  003728  0012               	return		;funcret
  7441  00372A                     __end_of___wmul:
  7442                           	callstack 0
  7443                           
  7444 ;; *************** function ___xxtofl *****************
  7445 ;; Defined at:
  7446 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\xxtofl.c"
  7447 ;; Parameters:    Size  Location     Type
  7448 ;;  sign            1    wreg     unsigned char 
  7449 ;;  val             4    0[COMRAM] long 
  7450 ;; Auto vars:     Size  Location     Type
  7451 ;;  sign            1    8[COMRAM] unsigned char 
  7452 ;;  arg             4   10[COMRAM] unsigned long 
  7453 ;;  exp             1    9[COMRAM] unsigned char 
  7454 ;; Return value:  Size  Location     Type
  7455 ;;                  4    0[COMRAM] unsigned char 
  7456 ;; Registers used:
  7457 ;;		wreg, status,2, status,0
  7458 ;; Tracked objects:
  7459 ;;		On entry : 0/0
  7460 ;;		On exit  : 0/0
  7461 ;;		Unchanged: 0/0
  7462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7463 ;;      Params:         4       0       0       0       0       0       0       0       0
  7464 ;;      Locals:         6       0       0       0       0       0       0       0       0
  7465 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7466 ;;      Totals:        14       0       0       0       0       0       0       0       0
  7467 ;;Total ram usage:       14 bytes
  7468 ;; Hardware stack levels used: 1
  7469 ;; This function calls:
  7470 ;;		Nothing
  7471 ;; This function is called by:
  7472 ;;		_main
  7473 ;; This function uses a non-reentrant model
  7474 ;;
  7475                           
  7476                           	psect	text30
  7477  0026F2                     __ptext30:
  7478                           	callstack 0
  7479  0026F2                     ___xxtofl:
  7480                           	callstack 30
  7481                           
  7482                           ;incstack = 0
  7483                           ;___xxtofl@sign stored from wreg
  7484  0026F2  6E09               	movwf	___xxtofl@sign^0,c
  7485  0026F4  5009               	movf	___xxtofl@sign^0,w,c
  7486  0026F6  B4D8               	btfsc	status,2,c
  7487  0026F8  EF80  F013         	goto	u4551
  7488  0026FC  EF82  F013         	goto	u4550
  7489  002700                     u4551:
  7490  002700  EFA4  F013         	goto	l753
  7491  002704                     u4550:
  7492  002704  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  7493  002706  EF89  F013         	goto	u4560
  7494  00270A  EF87  F013         	goto	u4561
  7495  00270E                     u4561:
  7496  00270E  EFA4  F013         	goto	l753
  7497  002712                     u4560:
  7498  002712  C001  F005         	movff	___xxtofl@val,??___xxtofl
  7499  002716  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  7500  00271A  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  7501  00271E  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  7502  002722  1E05               	comf	??___xxtofl^0,f,c
  7503  002724  1E06               	comf	(??___xxtofl+1)^0,f,c
  7504  002726  1E07               	comf	(??___xxtofl+2)^0,f,c
  7505  002728  1E08               	comf	(??___xxtofl+3)^0,f,c
  7506  00272A  2A05               	incf	??___xxtofl^0,f,c
  7507  00272C  0E00               	movlw	0
  7508  00272E  2206               	addwfc	(??___xxtofl+1)^0,f,c
  7509  002730  2207               	addwfc	(??___xxtofl+2)^0,f,c
  7510  002732  2208               	addwfc	(??___xxtofl+3)^0,f,c
  7511  002734  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  7512  002738  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  7513  00273C  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  7514  002740  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  7515  002744  EFAC  F013         	goto	l3862
  7516  002748                     l753:
  7517  002748  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  7518  00274C  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7519  002750  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7520  002754  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7521  002758                     l3862:
  7522  002758  5001               	movf	___xxtofl@val^0,w,c
  7523  00275A  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  7524  00275C  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  7525  00275E  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  7526  002760  A4D8               	btfss	status,2,c
  7527  002762  EFB5  F013         	goto	u4571
  7528  002766  EFB7  F013         	goto	u4570
  7529  00276A                     u4571:
  7530  00276A  EFC1  F013         	goto	l3868
  7531  00276E                     u4570:
  7532  00276E  0E00               	movlw	0
  7533  002770  6E01               	movwf	?___xxtofl^0,c
  7534  002772  0E00               	movlw	0
  7535  002774  6E02               	movwf	(?___xxtofl+1)^0,c
  7536  002776  0E00               	movlw	0
  7537  002778  6E03               	movwf	(?___xxtofl+2)^0,c
  7538  00277A  0E00               	movlw	0
  7539  00277C  6E04               	movwf	(?___xxtofl+3)^0,c
  7540  00277E  EF52  F014         	goto	l756
  7541  002782                     l3868:
  7542  002782  0E96               	movlw	150
  7543  002784  6E0A               	movwf	___xxtofl@exp^0,c
  7544  002786  EFCB  F013         	goto	l3872
  7545  00278A                     l3870:
  7546  00278A  2A0A               	incf	___xxtofl@exp^0,f,c
  7547  00278C  90D8               	bcf	status,0,c
  7548  00278E  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  7549  002790  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  7550  002792  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  7551  002794  320B               	rrcf	___xxtofl@arg^0,f,c
  7552  002796                     l3872:
  7553  002796  0E00               	movlw	0
  7554  002798  140B               	andwf	___xxtofl@arg^0,w,c
  7555  00279A  6E05               	movwf	??___xxtofl^0,c
  7556  00279C  0E00               	movlw	0
  7557  00279E  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  7558  0027A0  6E06               	movwf	(??___xxtofl+1)^0,c
  7559  0027A2  0E00               	movlw	0
  7560  0027A4  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  7561  0027A6  6E07               	movwf	(??___xxtofl+2)^0,c
  7562  0027A8  0EFE               	movlw	254
  7563  0027AA  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  7564  0027AC  6E08               	movwf	(??___xxtofl+3)^0,c
  7565  0027AE  5005               	movf	??___xxtofl^0,w,c
  7566  0027B0  1006               	iorwf	(??___xxtofl+1)^0,w,c
  7567  0027B2  1007               	iorwf	(??___xxtofl+2)^0,w,c
  7568  0027B4  1008               	iorwf	(??___xxtofl+3)^0,w,c
  7569  0027B6  A4D8               	btfss	status,2,c
  7570  0027B8  EFE0  F013         	goto	u4581
  7571  0027BC  EFE2  F013         	goto	u4580
  7572  0027C0                     u4581:
  7573  0027C0  EFC5  F013         	goto	l3870
  7574  0027C4                     u4580:
  7575  0027C4  EFF0  F013         	goto	l760
  7576  0027C8                     l3874:
  7577  0027C8  2A0A               	incf	___xxtofl@exp^0,f,c
  7578  0027CA  0E01               	movlw	1
  7579  0027CC  260B               	addwf	___xxtofl@arg^0,f,c
  7580  0027CE  0E00               	movlw	0
  7581  0027D0  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  7582  0027D2  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  7583  0027D4  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  7584  0027D6  90D8               	bcf	status,0,c
  7585  0027D8  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  7586  0027DA  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  7587  0027DC  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  7588  0027DE  320B               	rrcf	___xxtofl@arg^0,f,c
  7589  0027E0                     l760:
  7590  0027E0  0E00               	movlw	0
  7591  0027E2  140B               	andwf	___xxtofl@arg^0,w,c
  7592  0027E4  6E05               	movwf	??___xxtofl^0,c
  7593  0027E6  0E00               	movlw	0
  7594  0027E8  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  7595  0027EA  6E06               	movwf	(??___xxtofl+1)^0,c
  7596  0027EC  0E00               	movlw	0
  7597  0027EE  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  7598  0027F0  6E07               	movwf	(??___xxtofl+2)^0,c
  7599  0027F2  0EFF               	movlw	255
  7600  0027F4  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  7601  0027F6  6E08               	movwf	(??___xxtofl+3)^0,c
  7602  0027F8  5005               	movf	??___xxtofl^0,w,c
  7603  0027FA  1006               	iorwf	(??___xxtofl+1)^0,w,c
  7604  0027FC  1007               	iorwf	(??___xxtofl+2)^0,w,c
  7605  0027FE  1008               	iorwf	(??___xxtofl+3)^0,w,c
  7606  002800  A4D8               	btfss	status,2,c
  7607  002802  EF05  F014         	goto	u4591
  7608  002806  EF07  F014         	goto	u4590
  7609  00280A                     u4591:
  7610  00280A  EFE4  F013         	goto	l3874
  7611  00280E                     u4590:
  7612  00280E  EF0F  F014         	goto	l3882
  7613  002812                     l3880:
  7614  002812  060A               	decf	___xxtofl@exp^0,f,c
  7615  002814  90D8               	bcf	status,0,c
  7616  002816  360B               	rlcf	___xxtofl@arg^0,f,c
  7617  002818  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  7618  00281A  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  7619  00281C  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  7620  00281E                     l3882:
  7621  00281E  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  7622  002820  EF14  F014         	goto	u4601
  7623  002824  EF16  F014         	goto	u4600
  7624  002828                     u4601:
  7625  002828  EF1E  F014         	goto	l767
  7626  00282C                     u4600:
  7627  00282C  0E02               	movlw	2
  7628  00282E  600A               	cpfslt	___xxtofl@exp^0,c
  7629  002830  EF1C  F014         	goto	u4611
  7630  002834  EF1E  F014         	goto	u4610
  7631  002838                     u4611:
  7632  002838  EF09  F014         	goto	l3880
  7633  00283C                     u4610:
  7634  00283C                     l767:
  7635  00283C  B00A               	btfsc	___xxtofl@exp^0,0,c
  7636  00283E  EF23  F014         	goto	u4621
  7637  002842  EF25  F014         	goto	u4620
  7638  002846                     u4621:
  7639  002846  EF26  F014         	goto	l3888
  7640  00284A                     u4620:
  7641  00284A  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  7642  00284C                     l3888:
  7643  00284C  90D8               	bcf	status,0,c
  7644  00284E  320A               	rrcf	___xxtofl@exp^0,f,c
  7645  002850  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  7646  002854  6A06               	clrf	(??___xxtofl+1)^0,c
  7647  002856  6A07               	clrf	(??___xxtofl+2)^0,c
  7648  002858  6A08               	clrf	(??___xxtofl+3)^0,c
  7649  00285A  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  7650  00285E  6A07               	clrf	(??___xxtofl+2)^0,c
  7651  002860  6A06               	clrf	(??___xxtofl+1)^0,c
  7652  002862  6A05               	clrf	??___xxtofl^0,c
  7653  002864  5005               	movf	??___xxtofl^0,w,c
  7654  002866  120B               	iorwf	___xxtofl@arg^0,f,c
  7655  002868  5006               	movf	(??___xxtofl+1)^0,w,c
  7656  00286A  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  7657  00286C  5007               	movf	(??___xxtofl+2)^0,w,c
  7658  00286E  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  7659  002870  5008               	movf	(??___xxtofl+3)^0,w,c
  7660  002872  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  7661  002874  5009               	movf	___xxtofl@sign^0,w,c
  7662  002876  B4D8               	btfsc	status,2,c
  7663  002878  EF40  F014         	goto	u4631
  7664  00287C  EF42  F014         	goto	u4630
  7665  002880                     u4631:
  7666  002880  EF4A  F014         	goto	l3898
  7667  002884                     u4630:
  7668  002884  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  7669  002886  EF49  F014         	goto	u4640
  7670  00288A  EF47  F014         	goto	u4641
  7671  00288E                     u4641:
  7672  00288E  EF4A  F014         	goto	l3898
  7673  002892                     u4640:
  7674  002892  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  7675  002894                     l3898:
  7676  002894  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  7677  002898  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  7678  00289C  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  7679  0028A0  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  7680  0028A4                     l756:
  7681  0028A4  0012               	return		;funcret
  7682  0028A6                     __end_of___xxtofl:
  7683                           	callstack 0
  7684                           
  7685 ;; *************** function _LCD_write_text *****************
  7686 ;; Defined at:
  7687 ;;		line 143 in file "./LCD.h"
  7688 ;; Parameters:    Size  Location     Type
  7689 ;;  dato            2    2[COMRAM] PTR unsigned char 
  7690 ;;		 -> main@buffer(10), 
  7691 ;; Auto vars:     Size  Location     Type
  7692 ;;		None
  7693 ;; Return value:  Size  Location     Type
  7694 ;;                  1    wreg      void 
  7695 ;; Registers used:
  7696 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7697 ;; Tracked objects:
  7698 ;;		On entry : 0/0
  7699 ;;		On exit  : 0/0
  7700 ;;		Unchanged: 0/0
  7701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7702 ;;      Params:         2       0       0       0       0       0       0       0       0
  7703 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7704 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7705 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7706 ;;Total ram usage:        2 bytes
  7707 ;; Hardware stack levels used: 1
  7708 ;; Hardware stack levels required when called: 2
  7709 ;; This function calls:
  7710 ;;		_LCD_char
  7711 ;; This function is called by:
  7712 ;;		_main
  7713 ;; This function uses a non-reentrant model
  7714 ;;
  7715                           
  7716                           	psect	text31
  7717  0036A6                     __ptext31:
  7718                           	callstack 0
  7719  0036A6                     _LCD_write_text:
  7720                           	callstack 28
  7721  0036A6                     
  7722                           ;./LCD.h: 143: void LCD_write_text(unsigned char *dato);./LCD.h: 144: {;./LCD.h: 145:   
      +                            while (*dato){
  7723  0036A6  EF5E  F01B         	goto	l3828
  7724  0036AA                     l3824:
  7725                           
  7726                           ;./LCD.h: 146:         LCD_char(*dato);
  7727  0036AA  C003  FFD9         	movff	LCD_write_text@dato,fsr2l
  7728  0036AE  C004  FFDA         	movff	LCD_write_text@dato+1,fsr2h
  7729  0036B2  50DF               	movf	indf2,w,c
  7730  0036B4  ECA6  F01B         	call	_LCD_char
  7731  0036B8                     
  7732                           ;./LCD.h: 147:         dato++;
  7733  0036B8  4A03               	infsnz	LCD_write_text@dato^0,f,c
  7734  0036BA  2A04               	incf	(LCD_write_text@dato+1)^0,f,c
  7735  0036BC                     l3828:
  7736                           
  7737                           ;./LCD.h: 145:     while (*dato){
  7738  0036BC  C003  FFD9         	movff	LCD_write_text@dato,fsr2l
  7739  0036C0  C004  FFDA         	movff	LCD_write_text@dato+1,fsr2h
  7740  0036C4  50DF               	movf	indf2,w,c
  7741  0036C6  A4D8               	btfss	status,2,c
  7742  0036C8  EF68  F01B         	goto	u4531
  7743  0036CC  EF6A  F01B         	goto	u4530
  7744  0036D0                     u4531:
  7745  0036D0  EF55  F01B         	goto	l3824
  7746  0036D4                     u4530:
  7747  0036D4  0012               	return		;funcret
  7748  0036D6                     __end_of_LCD_write_text:
  7749                           	callstack 0
  7750                           
  7751 ;; *************** function _LCD_char *****************
  7752 ;; Defined at:
  7753 ;;		line 131 in file "./LCD.h"
  7754 ;; Parameters:    Size  Location     Type
  7755 ;;  caracter        1    wreg     unsigned char 
  7756 ;; Auto vars:     Size  Location     Type
  7757 ;;  caracter        1    1[COMRAM] unsigned char 
  7758 ;; Return value:  Size  Location     Type
  7759 ;;                  1    wreg      void 
  7760 ;; Registers used:
  7761 ;;		wreg, status,2, status,0, cstack
  7762 ;; Tracked objects:
  7763 ;;		On entry : 0/0
  7764 ;;		On exit  : 0/0
  7765 ;;		Unchanged: 0/0
  7766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7767 ;;      Params:         0       0       0       0       0       0       0       0       0
  7768 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7769 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7770 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7771 ;;Total ram usage:        1 bytes
  7772 ;; Hardware stack levels used: 1
  7773 ;; Hardware stack levels required when called: 1
  7774 ;; This function calls:
  7775 ;;		_LCD_write_nible
  7776 ;; This function is called by:
  7777 ;;		_LCD_write_text
  7778 ;;		_LCD_custom_char
  7779 ;; This function uses a non-reentrant model
  7780 ;;
  7781                           
  7782                           	psect	text32
  7783  00374C                     __ptext32:
  7784                           	callstack 0
  7785  00374C                     _LCD_char:
  7786                           	callstack 28
  7787                           
  7788                           ;incstack = 0
  7789                           ;LCD_char@caracter stored from wreg
  7790  00374C  6E02               	movwf	LCD_char@caracter^0,c
  7791  00374E                     
  7792                           ;./LCD.h: 131: void LCD_char(unsigned char caracter);./LCD.h: 132: {;./LCD.h: 133:     L
      +                          ATAbits.LA2 = 1;
  7793  00374E  8489               	bsf	137,2,c	;volatile
  7794  003750                     
  7795                           ;./LCD.h: 134:     LCD_write_nible(caracter >> 4);
  7796  003750  3802               	swapf	LCD_char@caracter^0,w,c
  7797  003752  0B0F               	andlw	15
  7798  003754  EC54  F019         	call	_LCD_write_nible
  7799                           
  7800                           ;./LCD.h: 135:     LCD_write_nible(caracter & 0x0F);
  7801  003758  5002               	movf	LCD_char@caracter^0,w,c
  7802  00375A  0B0F               	andlw	15
  7803  00375C  EC54  F019         	call	_LCD_write_nible
  7804  003760                     
  7805                           ;./LCD.h: 136:  _delay((unsigned long)((55)*(4000000/4000000.0)));
  7806  003760  0E12               	movlw	18
  7807  003762                     u4677:
  7808  003762  2EE8               	decfsz	wreg,f,c
  7809  003764  D7FE               	bra	u4677
  7810  003766  F000               	nop	
  7811  003768  0012               	return		;funcret
  7812  00376A                     __end_of_LCD_char:
  7813                           	callstack 0
  7814                           
  7815 ;; *************** function _LCD_init *****************
  7816 ;; Defined at:
  7817 ;;		line 63 in file "./LCD.h"
  7818 ;; Parameters:    Size  Location     Type
  7819 ;;		None
  7820 ;; Auto vars:     Size  Location     Type
  7821 ;;		None
  7822 ;; Return value:  Size  Location     Type
  7823 ;;                  1    wreg      void 
  7824 ;; Registers used:
  7825 ;;		wreg, status,2, status,0, cstack
  7826 ;; Tracked objects:
  7827 ;;		On entry : 0/0
  7828 ;;		On exit  : 0/0
  7829 ;;		Unchanged: 0/0
  7830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7831 ;;      Params:         0       0       0       0       0       0       0       0       0
  7832 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7833 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7834 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7835 ;;Total ram usage:        1 bytes
  7836 ;; Hardware stack levels used: 1
  7837 ;; Hardware stack levels required when called: 2
  7838 ;; This function calls:
  7839 ;;		_LCD_cmd
  7840 ;;		_LCD_write_nible
  7841 ;; This function is called by:
  7842 ;;		_main
  7843 ;; This function uses a non-reentrant model
  7844 ;;
  7845                           
  7846                           	psect	text33
  7847  003220                     __ptext33:
  7848                           	callstack 0
  7849  003220                     _LCD_init:
  7850                           	callstack 28
  7851  003220                     
  7852                           ;./LCD.h: 65:     LATAbits.LA3 = 0;
  7853  003220  9689               	bcf	137,3,c	;volatile
  7854                           
  7855                           ;./LCD.h: 66:     LATAbits.LA2 = 0;
  7856  003222  9489               	bcf	137,2,c	;volatile
  7857                           
  7858                           ;./LCD.h: 67:     LATCbits.LC0 = 0;
  7859  003224  908B               	bcf	139,0,c	;volatile
  7860                           
  7861                           ;./LCD.h: 68:     LATCbits.LC1 = 0;
  7862  003226  928B               	bcf	139,1,c	;volatile
  7863                           
  7864                           ;./LCD.h: 69:     LATCbits.LC2 = 0;
  7865  003228  948B               	bcf	139,2,c	;volatile
  7866                           
  7867                           ;./LCD.h: 70:     LATBbits.LB4 = 0;
  7868  00322A  988A               	bcf	138,4,c	;volatile
  7869                           
  7870                           ;./LCD.h: 72:     TRISAbits.TRISA3 = 0;
  7871  00322C  9692               	bcf	146,3,c	;volatile
  7872                           
  7873                           ;./LCD.h: 73:     TRISAbits.TRISA2 = 0;
  7874  00322E  9492               	bcf	146,2,c	;volatile
  7875                           
  7876                           ;./LCD.h: 74:     TRISCbits.TRISC0 = 0;
  7877  003230  9094               	bcf	148,0,c	;volatile
  7878                           
  7879                           ;./LCD.h: 75:     TRISCbits.TRISC1 = 0;
  7880  003232  9294               	bcf	148,1,c	;volatile
  7881                           
  7882                           ;./LCD.h: 76:     TRISCbits.TRISC2 = 0;
  7883  003234  9494               	bcf	148,2,c	;volatile
  7884                           
  7885                           ;./LCD.h: 77:     TRISBbits.TRISB4 = 0;
  7886  003236  9893               	bcf	147,4,c	;volatile
  7887  003238                     
  7888                           ;./LCD.h: 79:     _delay((unsigned long)((20)*(4000000/4000.0)));
  7889  003238  0E1A               	movlw	26
  7890  00323A  6E04               	movwf	??_LCD_init^0,c
  7891  00323C  0EF8               	movlw	248
  7892  00323E                     u4687:
  7893  00323E  2EE8               	decfsz	wreg,f,c
  7894  003240  D7FE               	bra	u4687
  7895  003242  2E04               	decfsz	??_LCD_init^0,f,c
  7896  003244  D7FC               	bra	u4687
  7897  003246  D000               	nop2	
  7898  003248                     
  7899                           ;./LCD.h: 81:     LCD_write_nible(0x03);
  7900  003248  0E03               	movlw	3
  7901  00324A  EC54  F019         	call	_LCD_write_nible
  7902  00324E                     
  7903                           ;./LCD.h: 82:     _delay((unsigned long)((5)*(4000000/4000.0)));
  7904  00324E  0E07               	movlw	7
  7905  003250  6E04               	movwf	??_LCD_init^0,c
  7906  003252  0E7D               	movlw	125
  7907  003254                     u4697:
  7908  003254  2EE8               	decfsz	wreg,f,c
  7909  003256  D7FE               	bra	u4697
  7910  003258  2E04               	decfsz	??_LCD_init^0,f,c
  7911  00325A  D7FC               	bra	u4697
  7912  00325C  F000               	nop	
  7913                           
  7914                           ;./LCD.h: 83:     LCD_write_nible(0x03);
  7915  00325E  0E03               	movlw	3
  7916  003260  EC54  F019         	call	_LCD_write_nible
  7917  003264                     
  7918                           ;./LCD.h: 84:     _delay((unsigned long)((100)*(4000000/4000000.0)));
  7919  003264  0E21               	movlw	33
  7920  003266                     u4707:
  7921  003266  2EE8               	decfsz	wreg,f,c
  7922  003268  D7FE               	bra	u4707
  7923  00326A  F000               	nop	
  7924  00326C                     
  7925                           ;./LCD.h: 85:     LCD_write_nible(0x03);
  7926  00326C  0E03               	movlw	3
  7927  00326E  EC54  F019         	call	_LCD_write_nible
  7928                           
  7929                           ;./LCD.h: 86:     _delay((unsigned long)((100)*(4000000/4000000.0)));
  7930  003272  0E21               	movlw	33
  7931  003274                     u4717:
  7932  003274  2EE8               	decfsz	wreg,f,c
  7933  003276  D7FE               	bra	u4717
  7934  003278  F000               	nop	
  7935  00327A                     
  7936                           ;./LCD.h: 87:     LCD_write_nible(0x02);
  7937  00327A  0E02               	movlw	2
  7938  00327C  EC54  F019         	call	_LCD_write_nible
  7939  003280                     
  7940                           ;./LCD.h: 88:     _delay((unsigned long)((100)*(4000000/4000000.0)));
  7941  003280  0E21               	movlw	33
  7942  003282                     u4727:
  7943  003282  2EE8               	decfsz	wreg,f,c
  7944  003284  D7FE               	bra	u4727
  7945  003286  F000               	nop	
  7946  003288                     
  7947                           ;./LCD.h: 90:     LCD_cmd(0x28);
  7948  003288  0E28               	movlw	40
  7949  00328A  EC37  F01A         	call	_LCD_cmd
  7950  00328E                     
  7951                           ;./LCD.h: 91:     LCD_cmd(0x0C);
  7952  00328E  0E0C               	movlw	12
  7953  003290  EC37  F01A         	call	_LCD_cmd
  7954  003294                     
  7955                           ;./LCD.h: 92:     LCD_cmd(0x01);
  7956  003294  0E01               	movlw	1
  7957  003296  EC37  F01A         	call	_LCD_cmd
  7958  00329A                     
  7959                           ;./LCD.h: 93:     LCD_cmd(0x06);
  7960  00329A  0E06               	movlw	6
  7961  00329C  EC37  F01A         	call	_LCD_cmd
  7962  0032A0                     
  7963                           ;./LCD.h: 94:     LCD_cmd(0x80);
  7964  0032A0  0E80               	movlw	128
  7965  0032A2  EC37  F01A         	call	_LCD_cmd
  7966  0032A6  0012               	return		;funcret
  7967  0032A8                     __end_of_LCD_init:
  7968                           	callstack 0
  7969                           
  7970 ;; *************** function _LCD_cmd *****************
  7971 ;; Defined at:
  7972 ;;		line 116 in file "./LCD.h"
  7973 ;; Parameters:    Size  Location     Type
  7974 ;;  comando         1    wreg     unsigned char 
  7975 ;; Auto vars:     Size  Location     Type
  7976 ;;  comando         1    2[COMRAM] unsigned char 
  7977 ;; Return value:  Size  Location     Type
  7978 ;;                  1    wreg      void 
  7979 ;; Registers used:
  7980 ;;		wreg, status,2, status,0, cstack
  7981 ;; Tracked objects:
  7982 ;;		On entry : 0/0
  7983 ;;		On exit  : 0/0
  7984 ;;		Unchanged: 0/0
  7985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7986 ;;      Params:         0       0       0       0       0       0       0       0       0
  7987 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7988 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7989 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7990 ;;Total ram usage:        2 bytes
  7991 ;; Hardware stack levels used: 1
  7992 ;; Hardware stack levels required when called: 1
  7993 ;; This function calls:
  7994 ;;		_LCD_write_nible
  7995 ;; This function is called by:
  7996 ;;		_LCD_init
  7997 ;;		_main
  7998 ;;		_LCD_gotoxy
  7999 ;;		_LCD_custom_char
  8000 ;; This function uses a non-reentrant model
  8001 ;;
  8002                           
  8003                           	psect	text34
  8004  00346E                     __ptext34:
  8005                           	callstack 0
  8006  00346E                     _LCD_cmd:
  8007                           	callstack 28
  8008                           
  8009                           ;incstack = 0
  8010                           ;LCD_cmd@comando stored from wreg
  8011  00346E  6E03               	movwf	LCD_cmd@comando^0,c
  8012  003470                     
  8013                           ;./LCD.h: 116: void LCD_cmd(unsigned char comando);./LCD.h: 117: {;./LCD.h: 118:     LAT
      +                          Abits.LA2 = 0;
  8014  003470  9489               	bcf	137,2,c	;volatile
  8015  003472                     
  8016                           ;./LCD.h: 119:     LCD_write_nible(comando >> 4);
  8017  003472  3803               	swapf	LCD_cmd@comando^0,w,c
  8018  003474  0B0F               	andlw	15
  8019  003476  EC54  F019         	call	_LCD_write_nible
  8020                           
  8021                           ;./LCD.h: 120:     LCD_write_nible(comando & 0x0F);
  8022  00347A  5003               	movf	LCD_cmd@comando^0,w,c
  8023  00347C  0B0F               	andlw	15
  8024  00347E  EC54  F019         	call	_LCD_write_nible
  8025  003482                     
  8026                           ;./LCD.h: 121:     if(comando == 0x01 || comando == 0x02)
  8027  003482  0403               	decf	LCD_cmd@comando^0,w,c
  8028  003484  B4D8               	btfsc	status,2,c
  8029  003486  EF47  F01A         	goto	u4501
  8030  00348A  EF49  F01A         	goto	u4500
  8031  00348E                     u4501:
  8032  00348E  EF52  F01A         	goto	l3778
  8033  003492                     u4500:
  8034  003492  0E02               	movlw	2
  8035  003494  1803               	xorwf	LCD_cmd@comando^0,w,c
  8036  003496  A4D8               	btfss	status,2,c
  8037  003498  EF50  F01A         	goto	u4511
  8038  00349C  EF52  F01A         	goto	u4510
  8039  0034A0                     u4511:
  8040  0034A0  EF5B  F01A         	goto	l3780
  8041  0034A4                     u4510:
  8042  0034A4                     l3778:
  8043                           
  8044                           ;./LCD.h: 122:         _delay((unsigned long)((2)*(4000000/4000.0)));
  8045  0034A4  0E03               	movlw	3
  8046  0034A6  6E02               	movwf	??_LCD_cmd^0,c
  8047  0034A8  0E98               	movlw	152
  8048  0034AA                     u4737:
  8049  0034AA  2EE8               	decfsz	wreg,f,c
  8050  0034AC  D7FE               	bra	u4737
  8051  0034AE  2E02               	decfsz	??_LCD_cmd^0,f,c
  8052  0034B0  D7FC               	bra	u4737
  8053  0034B2  EF5F  F01A         	goto	l53
  8054  0034B6                     l3780:
  8055                           
  8056                           ;./LCD.h: 124:         _delay((unsigned long)((55)*(4000000/4000000.0)));
  8057  0034B6  0E12               	movlw	18
  8058  0034B8                     u4747:
  8059  0034B8  2EE8               	decfsz	wreg,f,c
  8060  0034BA  D7FE               	bra	u4747
  8061  0034BC  F000               	nop	
  8062  0034BE                     l53:
  8063  0034BE  0012               	return		;funcret
  8064  0034C0                     __end_of_LCD_cmd:
  8065                           	callstack 0
  8066                           
  8067 ;; *************** function _LCD_write_nible *****************
  8068 ;; Defined at:
  8069 ;;		line 101 in file "./LCD.h"
  8070 ;; Parameters:    Size  Location     Type
  8071 ;;  nible           1    wreg     unsigned char 
  8072 ;; Auto vars:     Size  Location     Type
  8073 ;;  nible           1    0[COMRAM] unsigned char 
  8074 ;; Return value:  Size  Location     Type
  8075 ;;                  1    wreg      void 
  8076 ;; Registers used:
  8077 ;;		wreg
  8078 ;; Tracked objects:
  8079 ;;		On entry : 0/0
  8080 ;;		On exit  : 0/0
  8081 ;;		Unchanged: 0/0
  8082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8083 ;;      Params:         0       0       0       0       0       0       0       0       0
  8084 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8085 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8086 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8087 ;;Total ram usage:        1 bytes
  8088 ;; Hardware stack levels used: 1
  8089 ;; This function calls:
  8090 ;;		Nothing
  8091 ;; This function is called by:
  8092 ;;		_LCD_init
  8093 ;;		_LCD_cmd
  8094 ;;		_LCD_char
  8095 ;; This function uses a non-reentrant model
  8096 ;;
  8097                           
  8098                           	psect	text35
  8099  0032A8                     __ptext35:
  8100                           	callstack 0
  8101  0032A8                     _LCD_write_nible:
  8102                           	callstack 28
  8103                           
  8104                           ;incstack = 0
  8105                           ;LCD_write_nible@nible stored from wreg
  8106  0032A8  6E01               	movwf	LCD_write_nible@nible^0,c
  8107  0032AA                     
  8108                           ;./LCD.h: 101: void LCD_write_nible(unsigned char nible);./LCD.h: 102: {;./LCD.h: 103:  
      +                             if (nible & (1<<0)) LATCbits.LC0 = 1; else LATCbits.LC0 = 0;
  8109  0032AA  A001               	btfss	LCD_write_nible@nible^0,0,c
  8110  0032AC  EF5A  F019         	goto	u4361
  8111  0032B0  EF5C  F019         	goto	u4360
  8112  0032B4                     u4361:
  8113  0032B4  EF5F  F019         	goto	l38
  8114  0032B8                     u4360:
  8115  0032B8  808B               	bsf	139,0,c	;volatile
  8116  0032BA  EF60  F019         	goto	l3670
  8117  0032BE                     l38:
  8118  0032BE  908B               	bcf	139,0,c	;volatile
  8119  0032C0                     l3670:
  8120                           
  8121                           ;./LCD.h: 104:     if (nible & (1<<1)) LATCbits.LC1 = 1; else LATCbits.LC1 = 0;
  8122  0032C0  A201               	btfss	LCD_write_nible@nible^0,1,c
  8123  0032C2  EF65  F019         	goto	u4371
  8124  0032C6  EF67  F019         	goto	u4370
  8125  0032CA                     u4371:
  8126  0032CA  EF6A  F019         	goto	l40
  8127  0032CE                     u4370:
  8128  0032CE  828B               	bsf	139,1,c	;volatile
  8129  0032D0  EF6B  F019         	goto	l3674
  8130  0032D4                     l40:
  8131  0032D4  928B               	bcf	139,1,c	;volatile
  8132  0032D6                     l3674:
  8133                           
  8134                           ;./LCD.h: 105:     if (nible & (1<<2)) LATCbits.LC2 = 1; else LATCbits.LC2 = 0;
  8135  0032D6  A401               	btfss	LCD_write_nible@nible^0,2,c
  8136  0032D8  EF70  F019         	goto	u4381
  8137  0032DC  EF72  F019         	goto	u4380
  8138  0032E0                     u4381:
  8139  0032E0  EF75  F019         	goto	l42
  8140  0032E4                     u4380:
  8141  0032E4  848B               	bsf	139,2,c	;volatile
  8142  0032E6  EF76  F019         	goto	l3678
  8143  0032EA                     l42:
  8144  0032EA  948B               	bcf	139,2,c	;volatile
  8145  0032EC                     l3678:
  8146                           
  8147                           ;./LCD.h: 106:     if (nible & (1<<3)) LATBbits.LB4 = 1; else LATBbits.LB4 = 0;
  8148  0032EC  A601               	btfss	LCD_write_nible@nible^0,3,c
  8149  0032EE  EF7B  F019         	goto	u4391
  8150  0032F2  EF7D  F019         	goto	u4390
  8151  0032F6                     u4391:
  8152  0032F6  EF80  F019         	goto	l44
  8153  0032FA                     u4390:
  8154  0032FA  888A               	bsf	138,4,c	;volatile
  8155  0032FC  EF81  F019         	goto	l45
  8156  003300                     l44:
  8157  003300  988A               	bcf	138,4,c	;volatile
  8158  003302                     l45:
  8159                           
  8160                           ;./LCD.h: 107:     LATAbits.LA3 = 1;
  8161  003302  8689               	bsf	137,3,c	;volatile
  8162                           
  8163                           ;./LCD.h: 108:     __nop(); __nop();
  8164  003304  F000               	nop	
  8165  003306  F000               	nop	
  8166                           
  8167                           ;./LCD.h: 109:     LATAbits.LA3 = 0;
  8168  003308  9689               	bcf	137,3,c	;volatile
  8169  00330A  0012               	return		;funcret
  8170  00330C                     __end_of_LCD_write_nible:
  8171                           	callstack 0
  8172                           
  8173 ;; *************** function _ADC_read *****************
  8174 ;; Defined at:
  8175 ;;		line 33 in file "./ADC.h"
  8176 ;; Parameters:    Size  Location     Type
  8177 ;;  channel         1    wreg     unsigned char 
  8178 ;; Auto vars:     Size  Location     Type
  8179 ;;  channel         1    4[COMRAM] unsigned char 
  8180 ;; Return value:  Size  Location     Type
  8181 ;;                  2    0[COMRAM] unsigned short 
  8182 ;; Registers used:
  8183 ;;		wreg, status,2, status,0
  8184 ;; Tracked objects:
  8185 ;;		On entry : 0/0
  8186 ;;		On exit  : 0/0
  8187 ;;		Unchanged: 0/0
  8188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8189 ;;      Params:         2       0       0       0       0       0       0       0       0
  8190 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8191 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8192 ;;      Totals:         5       0       0       0       0       0       0       0       0
  8193 ;;Total ram usage:        5 bytes
  8194 ;; Hardware stack levels used: 1
  8195 ;; This function calls:
  8196 ;;		Nothing
  8197 ;; This function is called by:
  8198 ;;		_main
  8199 ;; This function uses a non-reentrant model
  8200 ;;
  8201                           
  8202                           	psect	text36
  8203  003638                     __ptext36:
  8204                           	callstack 0
  8205  003638                     _ADC_read:
  8206                           	callstack 30
  8207                           
  8208                           ;incstack = 0
  8209                           ;ADC_read@channel stored from wreg
  8210  003638  6E05               	movwf	ADC_read@channel^0,c
  8211  00363A                     
  8212                           ;./ADC.h: 33: uint16_t ADC_read(uint8_t channel);./ADC.h: 34: {;./ADC.h: 35:     ADCON0b
      +                          its.CHS = channel;
  8213  00363A  C005  F003         	movff	ADC_read@channel,??_ADC_read
  8214  00363E  4603               	rlncf	??_ADC_read^0,f,c
  8215  003640  4603               	rlncf	??_ADC_read^0,f,c
  8216  003642  50C2               	movf	194,w,c	;volatile
  8217  003644  1803               	xorwf	??_ADC_read^0,w,c
  8218  003646  0BC3               	andlw	-61
  8219  003648  1803               	xorwf	??_ADC_read^0,w,c
  8220  00364A  6EC2               	movwf	194,c	;volatile
  8221  00364C                     
  8222                           ;./ADC.h: 36:     ADCON0bits.GO = 1;
  8223  00364C  82C2               	bsf	194,1,c	;volatile
  8224  00364E                     l84:
  8225  00364E  B2C2               	btfsc	194,1,c	;volatile
  8226  003650  EF2C  F01B         	goto	u4541
  8227  003654  EF2E  F01B         	goto	u4540
  8228  003658                     u4541:
  8229  003658  EF27  F01B         	goto	l84
  8230  00365C                     u4540:
  8231  00365C                     
  8232                           ;./ADC.h: 38:     return ((uint16_t)((ADRESH<<8)+ADRESL));
  8233  00365C  50C4               	movf	196,w,c	;volatile
  8234  00365E  6E04               	movwf	(??_ADC_read+1)^0,c
  8235  003660  6A03               	clrf	??_ADC_read^0,c
  8236  003662  50C3               	movf	195,w,c	;volatile
  8237  003664  2403               	addwf	??_ADC_read^0,w,c
  8238  003666  6E01               	movwf	?_ADC_read^0,c
  8239  003668  0E00               	movlw	0
  8240  00366A  2004               	addwfc	(??_ADC_read+1)^0,w,c
  8241  00366C  6E02               	movwf	(?_ADC_read+1)^0,c
  8242  00366E  0012               	return		;funcret
  8243  003670                     __end_of_ADC_read:
  8244                           	callstack 0
  8245                           
  8246 ;; *************** function _ADC_init *****************
  8247 ;; Defined at:
  8248 ;;		line 17 in file "./ADC.h"
  8249 ;; Parameters:    Size  Location     Type
  8250 ;;		None
  8251 ;; Auto vars:     Size  Location     Type
  8252 ;;		None
  8253 ;; Return value:  Size  Location     Type
  8254 ;;                  1    wreg      void 
  8255 ;; Registers used:
  8256 ;;		wreg, status,2
  8257 ;; Tracked objects:
  8258 ;;		On entry : 0/0
  8259 ;;		On exit  : 0/0
  8260 ;;		Unchanged: 0/0
  8261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8262 ;;      Params:         0       0       0       0       0       0       0       0       0
  8263 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8264 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8265 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8266 ;;Total ram usage:        0 bytes
  8267 ;; Hardware stack levels used: 1
  8268 ;; This function calls:
  8269 ;;		Nothing
  8270 ;; This function is called by:
  8271 ;;		_main
  8272 ;; This function uses a non-reentrant model
  8273 ;;
  8274                           
  8275                           	psect	text37
  8276  00372A                     __ptext37:
  8277                           	callstack 0
  8278  00372A                     _ADC_init:
  8279                           	callstack 30
  8280  00372A                     
  8281                           ;./ADC.h: 19:     ADCON1bits.VCFG = 0b00;
  8282  00372A  0ECF               	movlw	-49
  8283  00372C  16C1               	andwf	193,f,c	;volatile
  8284                           
  8285                           ;./ADC.h: 20:     ADCON1bits.PCFG = 0b1110;
  8286  00372E  50C1               	movf	193,w,c	;volatile
  8287  003730  0BF0               	andlw	-16
  8288  003732  090E               	iorlw	14
  8289  003734  6EC1               	movwf	193,c	;volatile
  8290                           
  8291                           ;./ADC.h: 22:     ADCON2bits.ACQT = 0b010;
  8292  003736  50C0               	movf	192,w,c	;volatile
  8293  003738  0BC7               	andlw	-57
  8294  00373A  0910               	iorlw	16
  8295  00373C  6EC0               	movwf	192,c	;volatile
  8296                           
  8297                           ;./ADC.h: 23:     ADCON2bits.ADCS = 0b100;
  8298  00373E  50C0               	movf	192,w,c	;volatile
  8299  003740  0BF8               	andlw	-8
  8300  003742  0904               	iorlw	4
  8301  003744  6EC0               	movwf	192,c	;volatile
  8302  003746                     
  8303                           ;./ADC.h: 24:     ADCON2bits.ADFM = 1;
  8304  003746  8EC0               	bsf	192,7,c	;volatile
  8305  003748                     
  8306                           ;./ADC.h: 26:     ADCON0bits.ADON = 1;
  8307  003748  80C2               	bsf	194,0,c	;volatile
  8308  00374A  0012               	return		;funcret
  8309  00374C                     __end_of_ADC_init:
  8310                           	callstack 0
  8311                           
  8312                           	psect	rparam
  8313  0000                     
  8314                           	psect	idloc
  8315                           
  8316                           ;Config register IDLOC0 @ 0x200000
  8317                           ;	unspecified, using default values
  8318  200000                     	org	2097152
  8319  200000  FF                 	db	255
  8320                           
  8321                           ;Config register IDLOC1 @ 0x200001
  8322                           ;	unspecified, using default values
  8323  200001                     	org	2097153
  8324  200001  FF                 	db	255
  8325                           
  8326                           ;Config register IDLOC2 @ 0x200002
  8327                           ;	unspecified, using default values
  8328  200002                     	org	2097154
  8329  200002  FF                 	db	255
  8330                           
  8331                           ;Config register IDLOC3 @ 0x200003
  8332                           ;	unspecified, using default values
  8333  200003                     	org	2097155
  8334  200003  FF                 	db	255
  8335                           
  8336                           ;Config register IDLOC4 @ 0x200004
  8337                           ;	unspecified, using default values
  8338  200004                     	org	2097156
  8339  200004  FF                 	db	255
  8340                           
  8341                           ;Config register IDLOC5 @ 0x200005
  8342                           ;	unspecified, using default values
  8343  200005                     	org	2097157
  8344  200005  FF                 	db	255
  8345                           
  8346                           ;Config register IDLOC6 @ 0x200006
  8347                           ;	unspecified, using default values
  8348  200006                     	org	2097158
  8349  200006  FF                 	db	255
  8350                           
  8351                           ;Config register IDLOC7 @ 0x200007
  8352                           ;	unspecified, using default values
  8353  200007                     	org	2097159
  8354  200007  FF                 	db	255
  8355                           
  8356                           	psect	config
  8357                           
  8358                           ;Config register CONFIG1L @ 0x300000
  8359                           ;	PLL Prescaler Selection bits
  8360                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  8361                           ;	System Clock Postscaler Selection bits
  8362                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  8363                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  8364                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  8365  300000                     	org	3145728
  8366  300000  00                 	db	0
  8367                           
  8368                           ;Config register CONFIG1H @ 0x300001
  8369                           ;	Oscillator Selection bits
  8370                           ;	FOSC = XT_XT, XT oscillator (XT)
  8371                           ;	Fail-Safe Clock Monitor Enable bit
  8372                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  8373                           ;	Internal/External Oscillator Switchover bit
  8374                           ;	IESO = OFF, Oscillator Switchover mode disabled
  8375  300001                     	org	3145729
  8376  300001  00                 	db	0
  8377                           
  8378                           ;Config register CONFIG2L @ 0x300002
  8379                           ;	Power-up Timer Enable bit
  8380                           ;	PWRT = ON, PWRT enabled
  8381                           ;	Brown-out Reset Enable bits
  8382                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  8383                           ;	Brown-out Reset Voltage bits
  8384                           ;	BORV = 3, Minimum setting 2.05V
  8385                           ;	USB Voltage Regulator Enable bit
  8386                           ;	VREGEN = OFF, USB voltage regulator disabled
  8387  300002                     	org	3145730
  8388  300002  18                 	db	24
  8389                           
  8390                           ;Config register CONFIG2H @ 0x300003
  8391                           ;	Watchdog Timer Enable bit
  8392                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  8393                           ;	Watchdog Timer Postscale Select bits
  8394                           ;	WDTPS = 32768, 1:32768
  8395  300003                     	org	3145731
  8396  300003  1E                 	db	30
  8397                           
  8398                           ; Padding undefined space
  8399  300004                     	org	3145732
  8400  300004  FF                 	db	255
  8401                           
  8402                           ;Config register CONFIG3H @ 0x300005
  8403                           ;	CCP2 MUX bit
  8404                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  8405                           ;	PORTB A/D Enable bit
  8406                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  8407                           ;	Low-Power Timer 1 Oscillator Enable bit
  8408                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  8409                           ;	MCLR Pin Enable bit
  8410                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  8411  300005                     	org	3145733
  8412  300005  83                 	db	131
  8413                           
  8414                           ;Config register CONFIG4L @ 0x300006
  8415                           ;	Stack Full/Underflow Reset Enable bit
  8416                           ;	STVREN = ON, Stack full/underflow will cause Reset
  8417                           ;	Single-Supply ICSP Enable bit
  8418                           ;	LVP = OFF, Single-Supply ICSP disabled
  8419                           ;	Extended Instruction Set Enable bit
  8420                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  8421                           ;	Background Debugger Enable bit
  8422                           ;	DEBUG = 0x1, unprogrammed default
  8423  300006                     	org	3145734
  8424  300006  81                 	db	129
  8425                           
  8426                           ; Padding undefined space
  8427  300007                     	org	3145735
  8428  300007  FF                 	db	255
  8429                           
  8430                           ;Config register CONFIG5L @ 0x300008
  8431                           ;	Code Protection bit
  8432                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  8433                           ;	Code Protection bit
  8434                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  8435                           ;	Code Protection bit
  8436                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  8437                           ;	Code Protection bit
  8438                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  8439  300008                     	org	3145736
  8440  300008  0F                 	db	15
  8441                           
  8442                           ;Config register CONFIG5H @ 0x300009
  8443                           ;	Boot Block Code Protection bit
  8444                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  8445                           ;	Data EEPROM Code Protection bit
  8446                           ;	CPD = OFF, Data EEPROM is not code-protected
  8447  300009                     	org	3145737
  8448  300009  C0                 	db	192
  8449                           
  8450                           ;Config register CONFIG6L @ 0x30000A
  8451                           ;	Write Protection bit
  8452                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  8453                           ;	Write Protection bit
  8454                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  8455                           ;	Write Protection bit
  8456                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  8457                           ;	Write Protection bit
  8458                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  8459  30000A                     	org	3145738
  8460  30000A  0F                 	db	15
  8461                           
  8462                           ;Config register CONFIG6H @ 0x30000B
  8463                           ;	Configuration Register Write Protection bit
  8464                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  8465                           ;	Boot Block Write Protection bit
  8466                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  8467                           ;	Data EEPROM Write Protection bit
  8468                           ;	WRTD = OFF, Data EEPROM is not write-protected
  8469  30000B                     	org	3145739
  8470  30000B  E0                 	db	224
  8471                           
  8472                           ;Config register CONFIG7L @ 0x30000C
  8473                           ;	Table Read Protection bit
  8474                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  8475                           ;	Table Read Protection bit
  8476                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  8477                           ;	Table Read Protection bit
  8478                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  8479                           ;	Table Read Protection bit
  8480                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  8481  30000C                     	org	3145740
  8482  30000C  0F                 	db	15
  8483                           
  8484                           ;Config register CONFIG7H @ 0x30000D
  8485                           ;	Boot Block Table Read Protection bit
  8486                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  8487  30000D                     	org	3145741
  8488  30000D  40                 	db	64
  8489                           tosu	equ	0xFFF
  8490                           tosh	equ	0xFFE
  8491                           tosl	equ	0xFFD
  8492                           stkptr	equ	0xFFC
  8493                           pclatu	equ	0xFFB
  8494                           pclath	equ	0xFFA
  8495                           pcl	equ	0xFF9
  8496                           tblptru	equ	0xFF8
  8497                           tblptrh	equ	0xFF7
  8498                           tblptrl	equ	0xFF6
  8499                           tablat	equ	0xFF5
  8500                           prodh	equ	0xFF4
  8501                           prodl	equ	0xFF3
  8502                           indf0	equ	0xFEF
  8503                           postinc0	equ	0xFEE
  8504                           postdec0	equ	0xFED
  8505                           preinc0	equ	0xFEC
  8506                           plusw0	equ	0xFEB
  8507                           fsr0h	equ	0xFEA
  8508                           fsr0l	equ	0xFE9
  8509                           wreg	equ	0xFE8
  8510                           indf1	equ	0xFE7
  8511                           postinc1	equ	0xFE6
  8512                           postdec1	equ	0xFE5
  8513                           preinc1	equ	0xFE4
  8514                           plusw1	equ	0xFE3
  8515                           fsr1h	equ	0xFE2
  8516                           fsr1l	equ	0xFE1
  8517                           bsr	equ	0xFE0
  8518                           indf2	equ	0xFDF
  8519                           postinc2	equ	0xFDE
  8520                           postdec2	equ	0xFDD
  8521                           preinc2	equ	0xFDC
  8522                           plusw2	equ	0xFDB
  8523                           fsr2h	equ	0xFDA
  8524                           fsr2l	equ	0xFD9
  8525                           status	equ	0xFD8

Data Sizes:
    Strings     32
    Constant    0
    Data        0
    BSS         96
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     89      95
    BANK0           160     87      97
    BANK1           256      0      80
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_12(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_12(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(COMRAM[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(COMRAM[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_3(CODE[4]), STR_2(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_3(CODE[4]), STR_2(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_1(CODE[13]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_1(CODE[13]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 13
		 -> STR_1(CODE[13]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_1(CODE[13]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 10
		 -> main@buffer(BANK0[10]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S929$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S929$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    LCD_write_text@dato	PTR unsigned char  size(2) Largest target is 10
		 -> main@buffer(BANK0[10]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___flge
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___flmul
    ___flmul->___xxtofl
    ___flge->___flmul
    _atoi->_isspace
    _LCD_write_text->_LCD_char
    _LCD_char->_LCD_write_nible
    _LCD_init->_LCD_cmd
    _LCD_cmd->_LCD_write_nible

Critical Paths under _main in BANK0

    _main->_sprintf
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                16    16      0   32045
                                             71 BANK0     16    16      0
                           _ADC_init
                           _ADC_read
                            _LCD_cmd
                           _LCD_init
                     _LCD_write_text
                            ___flmul
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             23    15      8   28028
                                             50 BANK0     21    13      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   27671
                                             81 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           44    38      6   27299
                                             63 COMRAM    18    12      6
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              62    55      7   22144
                                             51 COMRAM    12     5      7
                                              0 BANK0     50    50      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _tolower                                              6     4      2     920
                                              6 COMRAM     6     4      2
                            _isupper
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     465
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcpy                                              10     6      4     856
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3165
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             25 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     381
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    2889
                                             39 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    2414
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    2808
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     790
                                             39 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2007
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _atoi                                                10     8      2    1080
                                              7 COMRAM    10     8      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     237
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     398
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) _LCD_write_text                                       2     0      2     253
                                              2 COMRAM     2     0      2
                           _LCD_char
 ---------------------------------------------------------------------------------
 (2) _LCD_char                                             1     1      0     132
                                              1 COMRAM     1     1      0
                    _LCD_write_nible
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             1     1      0     264
                                              3 COMRAM     1     1      0
                            _LCD_cmd
                    _LCD_write_nible
 ---------------------------------------------------------------------------------
 (2) _LCD_cmd                                              2     2      0     176
                                              1 COMRAM     2     2      0
                    _LCD_write_nible
 ---------------------------------------------------------------------------------
 (3) _LCD_write_nible                                      1     1      0      88
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADC_read                                             5     3      2      22
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _ADC_read
   _LCD_cmd
     _LCD_write_nible
   _LCD_init
     _LCD_cmd
     _LCD_write_nible
   _LCD_write_text
     _LCD_char
       _LCD_write_nible
   ___flmul
     ___xxtofl (ARG)
   ___xxtofl
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _isupper
           _pad
             _fputc
               _putch
             _fputs
               _fputc
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
         _isdigit
         _isupper
         _strncmp
         _tolower

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      25        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      50       7       31.2%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     57      61       5       60.6%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     59      5F       1      100.0%
BITBIGSFRhhhhhh     3B      0       0      20        0.0%
BITBIGSFRhhhhl      2B      0       0      21        0.0%
BITBIGSFRl          29      0       0      23        0.0%
BITBIGSFRhhl         6      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     110      24        0.0%
DATA                 0      0     110       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Sat Mar 19 18:50:49 2022

           ___fldiv@aexp 0019             ___fldiv@bexp 0018             ___fldiv@sign 0011  
                     l40 32D4                       l42 32EA                       l35 32A6  
                     l44 3300                       l45 3302                       l53 34BE  
                     l46 330A                       l38 32BE                       l62 36D4  
                     l56 3768                       l81 374A                       l84 364E  
                     l87 366E                       l98 3728             ___awdiv@sign 0006  
    ___wmul@multiplicand 0003                      l342 30D8                      l329 2F66  
                    l363 2BBE                      l372 35FE                      l357 3182  
                    l368 2C04                      l712 1DE0                      l721 204E  
                    l722 203C                      l626 1620                      l643 173A  
                    l635 18F0                      l627 160E                      l395 2B00  
                    l716 2144                      l652 180A                      l628 15D4  
                    l820 2FEE                      l653 17F8                      l822 3028  
                    l719 1FD6                      l760 27E0                      l680 24DE  
                    l753 2748                      l729 2106                      l817 2FAC  
                    l682 233E                      l691 2384                      l756 28A4  
                    l668 354A                      l924 1D1A                      l693 23FC  
                    l685 2302                      l694 23EA                      l854 0BDE  
                    l838 1430                      l767 283C                      l935 3364  
                    l936 336C                      l776 341A                      l929 1C64  
                    l946 2D02                      l882 101E                      l972 29FA  
                    l981 2634                      l969 29F2                      l978 26F0  
                    l988 3636                      l996 346C                      _pad 2F68  
           ___awmod@sign 0006                      wreg 000FE8             ___flmul@aexp 0020  
           ___flmul@bexp 0021             ___flmul@sign 001B             ___flmul@temp 0026  
           ___flmul@prod 0022     LCD_write_nible@nible 0001          __end_of_LCD_cmd 34C0  
           ___fltol@exp1 000A                     l1002 35C6                     l1040 36A4  
                   l1017 2EA2                     l1025 358E                     l1034 33C8  
                   l1028 376A                     l1044 2DD8                     l1054 34FC  
                   l3000 205E                     l1057 3504                     l3010 20C0  
                   l3002 206A                     l3100 308E                     l3020 2128  
                   l3012 20D4                     l3004 2078                     l3110 30C8  
                   l3102 30A4                     l3022 212A                     l3014 20EE  
                   l3006 20A2                     l3030 3506                     l3040 2EB6  
                   l3112 30D0                     l3104 30AC                     l3120 3118  
                   l3016 210A                     l3024 2130                     l3008 20A6  
                   l3032 3516                     l3200 2AE0                     l3050 2EDC  
                   l3042 2EBE                     l3106 30B2                     l3122 3146  
                   l3026 2134                     l3018 211A                     l3202 2AF0  
                   l3210 2F8A                     l3300 3434                     l3060 2F14  
                   l3052 2EE4                     l3044 2EC2                     l3036 2EA4  
                   l3108 30B8                     l3124 3156                     l3116 30DA  
                   l3140 2B7E                     l3132 2B02                     l3220 2FD0  
                   l3212 2F98                     l3302 3462                     l3070 2F40  
                   l3062 2F1A                     l3054 2EF6                     l3046 2ED0  
                   l3038 2EA8                     l3126 317A                     l3118 3108  
                   l3150 2C02                     l3142 2B8C                     l3134 2B30  
                   l3230 2C26                     l3222 2FFC                     l3214 2FA4  
                   l3206 2F68                     l3310 082C                     l3304 3466  
                   l3064 2F30                     l3056 2EFE                     l3072 2F46  
                   l3048 2ED8                     l3080 302A                     l3128 3180  
                   l3144 2B9E                     l3136 2B40                     l2600 155E  
                   l3232 2C64                     l3240 2CA4                     l2520 2DEC  
                   l3224 3010                     l3216 2FB8                     l3208 2F76  
                   l3400 0BB0                     l3320 0880                     l3312 083C  
                   l3074 2F56                     l3066 2F38                     l3058 2F06  
                   l3090 3056                     l3082 302E                     l3146 2BAC  
                   l3138 2B6E                     l3154 35C8                     l2602 1562  
                   l2610 1572                     l3170 2A50                     l3162 29FC  
                   l3242 2CB6                     l3234 2C8C                     l2522 2DFE  
                   l3218 2FCC                     l3250 336E                     l3402 0BB8  
                   l3330 08C6                     l3322 0888                     l3314 084A  
                   l3076 2F5E                     l3068 2F3A                     l3092 305E  
                   l3084 303C                     l3148 2BFC                     l3156 35DE  
                   l2620 15E2                     l2612 1576                     l2604 1566  
                   l2540 145E                     l2532 1432                     l3172 2A52  
                   l3164 2A12                     l3236 2C98                     l3228 2C06  
                   l2524 2E08                     l3252 337E                     l3260 34EE  
                   l3500 10E0                     l3420 0C68                     l3412 0BFC  
                   l3404 0BD2                     l3332 08CE                     l3324 089A  
                   l3316 0852                     l3308 0822                     l3094 3070  
                   l3086 3044                     l3158 35EE                     l2702 181A  
                   l2710 1870                     l2630 160C                     l2622 15EE  
                   l2614 15A0                     l2606 156A                     l2550 1498  
                   l2542 146E                     l2534 143E                     l3174 2A62  
                   l3246 2CFA                     l3270 256A                     l2526 2E26  
                   l2518 2DDA                     l3254 34C0                     l3510 111E  
                   l3502 10E8                     l3430 0CA6                     l3414 0C0E  
                   l3422 0C6C                     l3406 0BEA                     l3350 0966  
                   l3334 08D2                     l3326 08A8                     l3318 0876  
                   l3096 3078                     l3088 3048                     l2800 2212  
                   l2720 18C2                     l2712 1880                     l2704 1826  
                   l2640 1662                     l2632 162E                     l2624 15F2  
                   l2616 15BC                     l2608 156E                     l2560 14C6  
                   l2552 149E                     l2544 147E                     l2536 144C  
                   l3184 2A8C                     l3176 2A66                     l3168 2A26  
                   l3272 2578                     l3280 2658                     l3264 24E0  
                   l2528 2E5C                     l3600 13E6                     l3520 114A  
                   l3512 1124                     l3504 10FC                     l3440 0CF4  
                   l3432 0CAA                     l3424 0C74                     l3416 0C2A  
                   l3352 0970                     l3344 0902                     l3336 08D6  
                   l3328 08BA                     l3098 3080                     l2802 2228  
                   l2730 18E0                     l2722 18C8                     l2714 1890  
                   l2706 1834                     l2650 169C                     l2642 1670  
                   l2634 163E                     l2626 1600                     l2618 15CC  
                   l2570 14FA                     l2562 14C8                     l2554 14B0  
                   l2546 1480                     l2538 144E                     l3194 2AB4  
                   l3186 2A96                     l3178 2A74                     l3282 2694  
                   l3266 2500                     l3258 34C0                     l3602 13F2  
                   l3514 1130                     l3506 110A                     l3522 1150  
                   l3530 117E                     l3450 0D8C                     l3434 0CBC  
                   l3442 0CFC                     l3426 0C86                     l3418 0C60  
                   l3362 09BE                     l3346 092E                     l3338 08DC  
                   l3292 3600                     l3620 28BE                     l2820 227C  
                   l2804 2238                     l2812 2258                     l2900 1D1C  
                   l2724 18CA                     l2716 18B0                     l2708 186E  
                   l2660 1708                     l2652 169E                     l2644 167E  
                   l2628 1602                     l2580 1536                     l2564 14D8  
                   l2572 1502                     l2556 14B2                     l2548 1488  
                   l3196 2AC0                     l3188 2AA0                     l3284 26A8  
                   l3276 25E8                     l3268 2556                     l2740 356E  
                   l3604 13FA                     l3540 1234                     l3532 11D6  
                   l3524 1162                     l3516 1140                     l3508 111A  
                   l3460 0E70                     l3452 0DE4                     l3444 0D04  
                   l3436 0CCA                     l3428 0C98                     l3380 0A76  
                   l3364 09EA                     l3348 094C                     l3356 0998  
                   l3700 19D0                     l3630 2958                     l3622 28DA  
                   l3614 28A6                     l2830 22CE                     l2822 2296  
                   l2814 2268                     l2806 2240                     l2910 1D58  
                   l2902 1D28                     l2726 18D0                     l2718 18B4  
                   l2670 1760                     l2662 170A                     l2654 16A8  
                   l2646 168A                     l2638 1652                     l2590 154A  
                   l2582 153A                     l2574 1512                     l2566 14E8  
                   l2558 14B8                     l3198 2AD0                     l3286 26D0  
                   l3278 2624                     l2734 354C                     l2742 3670  
                   l3606 140A                     l3550 1284                     l3542 1250  
                   l3534 120A                     l3526 1174                     l3518 1144  
                   l3470 0F0A                     l3462 0EA2                     l3454 0E18  
                   l3446 0D14                     l3438 0CE2                     l3390 0B46  
                   l3382 0AAA                     l3366 0A08                     l3374 0A26  
                   l3710 1A5C                     l3702 19F0                     l3800 3248  
                   l3296 341C                     l3640 29D6                     l3624 2914  
                   l3616 28BA                     l2840 232A                     l2832 22DE  
                   l2824 22A6                     l2816 2268                     l2808 2244  
                   l2920 1D8A                     l2912 1D68                     l2904 1D36  
                   l2728 18DE                     l2680 178E                     l2664 171A  
                   l2648 168E                     l2656 16AE                     l2592 154E  
                   l2584 153E                     l2576 1524                     l2568 14F8  
                   l3288 26E0                     l2736 3558                     l2744 367C  
                   l2752 3590                     l3608 1410                     l3560 12C6  
                   l3552 1294                     l3544 1262                     l3536 1212  
                   l3528 1178                     l3480 0FE2                     l3472 0F3E  
                   l3464 0EB8                     l3448 0D28                     l3456 0E1E  
                   l3384 0AB0                     l3392 0B78                     l3376 0A40  
                   l3720 1AEE                     l3712 1A6C                     l3810 3280  
                   l3802 324E                     l3298 3420                     l3626 291C  
                   l2850 236A                     l2842 232C                     l2834 22F2  
                   l2826 22B6                     l2770 2172                     l2762 2146  
                   l2930 1DCA                     l2922 1D98                     l2914 1D6E  
                   l2906 1D38                     l2682 179C                     l2674 1774  
                   l2690 17BA                     l2658 16D4                     l2666 172A  
                   l2594 1552                     l2586 1542                     l2578 1532  
                   l2738 356A                     l2746 3680                     l3570 12F6  
                   l3562 12D4                     l3554 12A6                     l3546 1270  
                   l3490 103A                     l3538 1216                     l3474 0F94  
                   l3482 0FE6                     l3466 0EEA                     l3458 0E3C  
                   l3394 0B88                     l3386 0B0A                     l3722 1B04  
                   l3730 1B6E                     l3714 1A9C                     l3706 19FE  
                   l3820 32A0                     l3812 3288                     l3804 3264  
                   l2756 3704                     l3636 298E                     l3628 2924  
                   l2860 23A6                     l2852 2374                     l2844 233C  
                   l2836 2300                     l2828 22C6                     l2780 21AC  
                   l2772 2182                     l2764 2152                     l2940 1E14  
                   l2932 1DD0                     l2924 1D9A                     l2916 1D7E  
                   l2908 1D48                     l2684 17A4                     l2676 177E  
                   l2668 1750                     l2692 17C8                     l2596 1556  
                   l2588 1546                     l2748 3698                     l3580 1358  
                   l3572 131C                     l3564 12DC                     l3556 12AE  
                   l3548 1280                     l3492 109E                     l3484 0FF6  
                   l3476 0F9A                     l3468 0EFA                     l3396 0B8C  
                   l3388 0B3E                     l3660 2D8E                     l3652 2D3A  
                   l3740 1C34                     l3732 1B9C                     l3724 1B12  
                   l3716 1AAC                     l3708 1A3C                     l3830 372A  
                   l3670 32C0                     l3814 328E                     l3806 326C  
                   l3822 36A6                     l2758 3720                     l3638 29C4  
                   l2870 2418                     l2862 23B4                     l2854 2382  
                   l2846 234E                     l2838 230C                     l2790 21D8  
                   l2782 21B2                     l2774 2192                     l2766 2160  
                   l2950 1E64                     l2942 1E20                     l2934 1DF0  
                   l2926 1DAA                     l2918 1D84                     l2694 17CC  
                   l2686 17A8                     l2678 178C                     l2598 155A  
                   l3590 139E                     l3582 1372                     l3574 1338  
                   l3566 12E4                     l3558 12BE                     l3494 10AC  
                   l3486 100A                     l3478 0FCE                     l3398 0B9E  
                   l3662 2DB6                     l3654 2D48                     l3646 2D04  
                   l3750 1CAA                     l3726 1B42                     l3718 1ADC  
                   ?_pad 0011                     l3832 3746                     l3840 365C  
                   l3680 32FA                     l3672 32CE                     l3816 3294  
                   l3808 327A                     l3824 36AA                     l2880 2484  
                   l2872 2426                     l2864 23E2                     l2848 2364  
                   l2856 2394                     l2792 21E8                     l2784 21B8  
                   l2776 2194                     l2768 2162                     l2960 1EA6  
                   l2952 1E70                     l2944 1E2A                     l2936 1E00  
                   l2928 1DBA                     l2696 17DA                     l2688 17B8  
                   l3592 13AE                     l3584 1378                     l3576 1340  
                   l3568 12F0                     l3496 10C0                     l3488 1016  
                   l3656 2D60                     l3648 2D2E                     l3752 1CBE  
                   l3736 1BC2                     l3834 3748                     l3674 32D6  
                   l3666 32AA                     l3770 3470                     l3818 329A  
                   l3826 36B8                     l2890 24D2                     l2882 249E  
                   l2874 2450                     l2858 23A2                     l2794 21F8  
                   l2786 21C6                     l2778 219C                     l2970 1F08  
                   l2962 1EB2                     l2954 1E7C                     l2946 1E40  
                   l2698 17F0                     l3594 13B4                     l3586 138A  
                   l3578 1346                     l3498 10D2                     l3658 2D7C  
                   l3738 1C00                     l3746 1C78                     l3690 1938  
                   l3762 1CE4                     l3682 18F2                     l3850 33EC  
                   l3836 363A                     l3676 32E4                     l3668 32B8  
                   l3780 34B6                     l3772 3472                     l3828 36BC  
                   l3860 2712                     l2892 24D4                     l2884 24BA  
                   l2868 240C                     l2876 2454                     l2796 21FA  
                   l2788 21C8                     l2980 1F9E                     l2972 1F14  
                   l2964 1EC2                     l2956 1E8A                     l2948 1E4C  
                   l3588 1396                     l3764 1D08                     l3748 1C9C  
                   l3756 1CCA                     l3692 195C                     l3684 1916  
                   l3852 3408                     l3844 33CA                     l3940 3184  
                   l3838 364C                     l3678 32EC                     l3774 3482  
                   l3782 374E                     l3870 278A                     l3862 2758  
                   l2886 24BE                     l2878 246E                     l2798 2202  
                   l2990 1FF4                     l2982 1FBC                     l2974 1F30  
                   l2966 1EDC                     l2958 1E96                     l3598 13BA  
                   l3758 1CD8                     l3694 1964                     l3686 1924  
                   l3790 3314                     l3846 33DC                     l3950 31E6  
                   l3942 3188                     l3776 3492                     l3784 3750  
                   l3880 2812                     l3872 2796                     l3864 276E  
                   l3856 26F4                     l2888 24CC                     l2992 1FF8  
                   l2984 1FC6                     l2976 1F5A                     l2968 1EEC  
                   l3696 1972                     l3688 1934                     l3792 3322  
                   l3848 33E4                     l3952 320C                     l3944 318C  
                   l3778 34A4                     l3786 3760                     l3890 2850  
                   l3882 281E                     l3874 27C8                     l3858 2704  
                   l2994 2006                     l2986 1FD4                     l2978 1F90  
                   l3698 1996                     l3794 3348                     l3946 3192  
                   l3796 3220                     l3892 2874                     l3884 282C  
                   l3876 27CA                     l3868 2782                     l2996 2034  
                   l2988 1FE6                     l3788 330C                     l3948 31A0  
                   l3798 3238                     l3894 2884                     l3886 284A  
                   l3878 27D6                     l3974 2942                     l3896 2892  
                   l3888 284C                     l3898 2894                     STR_1 0801  
                   STR_2 080E                     STR_3 0816                     STR_6 0812  
                   STR_7 081A                     u3000 2426                     u3001 2422  
                   u3010 246E                     u3011 246A                     u3020 249E  
                   u3100 1DF0                     u3021 249A                     u3101 1DEC  
                   u3030 24CC                     u3110 1E00                     u3031 24C8  
                   u3111 1DFC                     u3200 20C0                     u3120 1F7A  
                   u3040 1D36                     u2400 146E                     u4000 0CBC  
                   u3201 20BC                     u3041 1D32                     u2401 146A  
                   u4001 0CB8                     u3210 20EE                     u3130 1FD4  
                   u3050 1D48                     u2410 14B0                     u4010 0CCA  
                   u3211 20EA                     u3131 1FD0                     u3051 1D44  
                   u2411 14AC                     u4011 0CC6                     u3300 3056  
                   u3220 2128                     u3140 1FF4                     u3060 1D58  
                   u2500 15E2                     u2420 14C6                     u2340 2DEC  
                   u4100 10AC                     u4020 0CF4                     u3301 3052  
                   u3221 2124                     u3141 1FF0                     u3125 1F70  
                   u3061 1D54                     u2501 15DE                     u2421 14C2  
                   u2341 2DE8                     u4101 10A8                     u4021 0CF0  
                   u3230 2EB6                     u3310 3070                     u3150 2006  
                   u3070 1D98                     u2510 1600                     u2430 14D8  
                   u2350 2DFE                     u4110 10C0                     u4030 0E3C  
                   u3231 2EB2                     u3311 306C                     u3151 2002  
                   u3071 1D94                     u2511 15FC                     u2431 14D4  
                   u2351 2DFA                     u4111 10BC                     u4031 0E38  
                   u3240 2ED0                     u3320 308E                     u3400 2B8C  
                   u3160 2034                     u3080 1DAA                     u2600 1750  
                   u2520 1620                     u2440 14E8                     u2360 2E26  
                   u4200 1270                     u4120 10D2                     u4040 0EA2  
                   u3241 2ECC                     u3321 308A                     u3401 2B88  
                   u3161 2030                     u3081 1DA6                     u2601 174C  
                   u2521 161C                     u2441 14E4                     u2361 2E22  
                   u4201 126C                     u4121 10CE                     u4041 0E9E  
                   u3250 2EF6                     u3330 30A4                     u3410 2BAC  
                   u3170 204A                     u3090 1DBA                     u2610 1760  
                   u2530 162E                     u2450 1524                     u2370 2E5C  
                   u4210 12A6                     u4130 10E0                     u4050 0EEA  
                   u3251 2EF2                     u3331 30A0                     u3411 2BA8  
                   u3171 2046                     u3091 1DB6                     u2611 175C  
                   u2531 162A                     u2451 1520                     u2371 2E58  
                   u4211 12A2                     u4131 10DC                     u4051 0EE6  
                   u4300 29D6                     u3260 2F14                     u3340 30C8  
                   u3420 2BFC                     u3180 205E                     u2700 1834  
                   u2620 178C                     u2540 163E                     u2460 1532  
                   u2380 144C                     u3500 2AE0                     u4220 12D4  
                   u4140 10FC                     u4060 0EFA                     u4301 29D2  
                   u3261 2F10                     u3341 30C4                     u3421 2BF8  
                   u3181 205A                     u2701 1830                     u2621 1788  
                   u2541 163A                     u2461 152E                     u2381 1448  
                   u3501 2ADC                     u4221 12D0                     u4141 10F8  
                   u4061 0EF6                     u3270 2F30                     u3350 3108  
                   u3190 2078                     u3430 35DE                     u2710 186E  
                   u2630 179C                     u2550 1670                     u2470 15A0  
                   u2390 145E                     u3510 2F76                     u4230 1358  
                   u4150 110A                     u4070 0F94                     u4310 2D2E  
                   u3271 2F2C                     u3351 3104                     u3191 2074  
                   u3431 35DA                     u2711 186A                     u2631 1798  
                   u2551 166C                     u2471 159C                     u2391 145A  
                   u3511 2F72                     u4231 1354                     u4151 1106  
                   u4071 0F90                     u4311 2D2A                     u3280 2F56  
                   u3360 3146                     u2720 1880                     u2640 17B8  
                   u2560 167E                     u2480 15B8                     u3440 2A12  
                   u3600 2CF0                     u3520 2F98                     u2800 35C2  
                   u4240 1372                     u4160 1162                     u4080 0FE2  
                   u4320 2D60                     u4400 1916                     u3281 2F52  
                   u3361 3142                     u2721 187C                     u2641 17B4  
                   u2561 167A                     u2481 15B2                     u3441 2A0E  
                   u3601 2CEA                     u3521 2F94                     u4241 136E  
                   u4161 115E                     u4081 0FDE                     u4321 2D5C  
                   u4401 1912                     u3290 303C                     u2810 2160  
                   u3370 317A                     u2730 1890                     u2650 17C8  
                   u2570 169C                     u2490 15BA                     u3450 2A46  
                   u3610 2CF2                     u3530 2FEE                     u4250 138A  
                   u4170 1234                     u4090 100A                     u4330 2D7C  
                   u4410 195C                     u3291 3038                     u2811 215C  
                   u3371 3176                     u2731 188C                     u2651 17C4  
                   u2571 1698                     u3531 2FEA                     u4251 1386  
                   u4171 1230                     u4091 1006                     u4331 2D78  
                   u4411 1958                     u4500 3492                     u2900 2300  
                   u2820 2172                     u3380 2B30                     u2740 18B0  
                   u2660 17DA                     u2580 16D4                     u3460 2A74  
                   u3700 2608                     u3540 2FFC                     u3620 33B6  
                   u4260 13E6                     u4180 1250                     u4340 2D8E  
                   u4420 1996                     u4501 348E                     u2901 22FC  
                   u2821 216E                     u3381 2B2C                     u2741 18AC  
                   u2661 17D6                     u2581 16D0                     u3461 2A70  
                   u3541 2FF8                     u4261 13E2                     u4181 124C  
                   u4341 2D8A                     u4421 1992                     u4510 34A4  
                   u4270 28DA                     u2910 232A                     u2830 2182  
                   u3390 2B6E                     u2750 18C2                     u2670 17F0  
                   u2590 171A                     u3470 2A88                     u3550 2C46  
                   u3710 2624                     u3630 33C8                     u4190 1262  
                   u4350 2DB6                     u4430 1A3C                     u4511 34A0  
                   u4271 28D6                     u2911 2326                     u2831 217E  
                   u3391 2B6A                     u2751 18BE                     u2671 17EC  
                   u2591 1716                     u3471 2A84                     u3455 2A3C  
                   u3711 2620                     u3631 33C4                     u4191 125E  
                   u4351 2DB2                     u4431 1A38                     u4360 32B8  
                   u4600 282C                     u4280 2910                     u2920 234E  
                   u2840 21C6                     u2760 18DE                     u2680 1806  
                   u3480 2AB0                     u3560 2C64                     u3720 2678  
                   u3640 34EE                     u3800 089A                     u4440 1A6C  
                   u4520 3364                     u4361 32B4                     u4601 2828  
                   u4281 290C                     u2921 234A                     u2841 21C2  
                   u2761 18DA                     u2681 1802                     u3481 2AAC  
                   u3561 2C60                     u3705 25FE                     u3641 34EA  
                   u3801 0896                     u4441 1A68                     u4521 3360  
                   u4370 32CE                     u4530 36D4                     u4610 283C  
                   u4290 29C4                     u2930 2364                     u2850 21D8  
                   u2690 181A                     u3490 2AD0                     u3570 2C8C  
                   u3730 2694                     u3650 2528                     u2770 358E  
                   u3810 08A8                     u4450 1AAC                     u4371 32CA  
                   u4531 36D0                     u4611 2838                     u4291 29C0  
                   u2931 2360                     u2851 21D4                     u2691 1816  
                   u3491 2ACC                     u3571 2C88                     u3555 2C3C  
                   u3731 2690                     u2771 358A                     u3627 33AC  
                   u3811 08A4                     u4451 1AA8                     u4540 365C  
                   u4380 32E4                     u4620 284A                     u2940 2382  
                   u2860 21E8                     u3580 2CB6                     u3740 26D0  
                   u3660 2556                     u2780 3698                     u3900 0B9E  
                   u3820 08BA                     u4460 1AEE                     u4541 3658  
                   u4381 32E0                     u4621 2846                     u2941 237E  
                   u2861 21E4                     u3581 2CB2                     u3741 26CC  
                   u3725 266E                     u3661 2552                     u2781 3694  
                   u3901 0B9A                     u3821 08B6                     u4461 1AEA  
                   u4390 32FA                     u4630 2884                     u4550 2704  
                   u3750 3630                     u2950 23A2                     u2870 2228  
                   u3670 2578                     u2790 35C0                     u3910 0BB0  
                   u3830 0902                     u4470 1B9C                     u4391 32F6  
                   u4631 2880                     u4551 2700                     u3751 362A  
                   u2951 239E                     u2871 2224                     u3671 2574  
                   u3655 251E                     u2791 35BA                     u3911 0BAC  
                   u3831 08FE                     u4471 1B98                     u4640 2892  
                   u4560 2712                     u3760 3632                     u2960 23B4  
                   u2880 2268                     u3920 0BD2                     u3840 092E  
                   u4480 1C00                     u4641 288E                     u4561 270E  
                   u2961 23B0                     u2881 2264                     u3921 0BCE  
                   u3841 092A                     u4481 1BFC                     u4570 276E  
                   u3770 3434                     u2970 23E2                     u2890 22DE  
                   u3690 25E4                     u3930 0BF8                     u3850 09BE  
                   u4490 1C9C                     u4707 3266                     u4571 276A  
                   u3771 3430                     u2971 23DE                     u2891 22DA  
                   u3595 2CC8                     u3691 25E0                     u3931 0BF4  
                   u3851 09BA                     u4491 1C98                     u4580 27C4  
                   u3780 3462                     u2980 23F8                     u3940 0C0E  
                   u3860 09EA                     u4717 3274                     u4581 27C0  
                   u3781 345E                     u2981 23F4                     u3685 258C  
                   u3941 0C0A                     u3861 09E6                     u4590 280E  
                   u2990 240C                     u3686 2596                     u3950 0C2A  
                   u3870 0A72                     u3790 084A                     u4727 3282  
                   u4591 280A                     u2991 2408                     u3687 25A6  
                   u3951 0C26                     u3871 0A6E                     u3791 0846  
                   u3960 0C60                     u3880 0B06                     u4737 34AA  
                   u3961 0C5C                     u3881 0B02                     u3970 0C86  
                   u3890 0B78                     u4747 34B8                     u3971 0C82  
                   u3891 0B74                     u3980 0C98                     u4677 3762  
                   u3981 0C94                     u3990 0CA6                     u4687 323E  
                   u3991 0CA2                     u4697 3254                     _dbuf 0100  
                   _atoi 28A6                     _main 3184                     _prec 005C  
                   _nout 00BF                     pad@i 0018                     pad@p 0015  
                   fsr1h 000FE2                     fsr2h 000FDA                     indf1 000FE7  
                   indf2 000FDF                     fsr1l 000FE1                     pad@w 001A  
                   fsr2l 000FD9            ___fpclassifyf 2C06                     prodh 000FF4  
                   prodl 000FF3                     start 0000         __end_of_ADC_init 374C  
       __end_of_ADC_read 3670          ___fldiv@new_exp 0012             ___param_bank 000000  
       ?_LCD_write_nible 0001                    ??_pad 0017         __end_of_LCD_char 376A  
       __end_of_LCD_init 32A8            ___fltol@sign1 0009                    ?_atoi 0008  
        __end_of___fladd 18F2                    ?_main 0001          __end_of___fldiv 24E0  
        __end_of___awdiv 2F68          __end_of___flneg 3600                    STR_10 081E  
                  STR_12 081E          __end_of___awmod 30DA          __end_of___flmul 2146  
        __end_of___flsub 354C          __end_of___fltol 2B02          ___awdiv@divisor 0003  
        ___awdiv@counter 0005             vfpfcnvrt@fmt 0042                    _flags 005E  
                  _fputc 2DDA                    _fputs 354C          __end_of_isdigit 3638  
                  atoi@n 0010                    pad@fp 0011                    atoi@s 0008  
                  _width 005A                    _putch 376A          __end_of_isspace 346E  
        __end_of_isupper 35C8                    tablat 000FF5                    status 000FD8  
        __end_of_sprintf 341C           ?___fpclassifyf 0001          __end_of_tolower 3506  
        __end_of_strncmp 2DDA          __initialization 36D6             __end_of_atoi 29FC  
           __end_of_main 3220                   ??_atoi 000A                   ??_main 005A  
          __activetblptr 000002                ??_LCD_cmd 0002                   ?_fputc 0001  
                 ?_fputs 000A                   _ADRESH 000FC4                   _ADRESL 000FC3  
       ___awdiv@dividend 0001                   ?_putch 0001         __end_of___xxtofl 28A6  
           vfprintf@cfmt 0058                   ___flge 2B02                   ___fleq 30DA  
              ??___fladd 0009                   ___wmul 3704                ??___fldiv 0009  
              ??___awdiv 0005                ??___flneg 0005                ??___awmod 0005  
              ??___flmul 0017                ??___flsub 0030                ??___fltol 0005  
                 _efgtoa 0822                   _floorf 24E0                   clear_0 36DC  
                 clear_1 36E8         ___awdiv@quotient 0007          ___awmod@divisor 0003  
                 isa$std 000001          ___awmod@counter 0005                   pad@buf 0013  
                 _strcpy 336E                   _strlen 3670                   fputc@c 0001  
                 fputs@c 000E                   fputs@i 000F                   fputs@s 000A  
              ??_isdigit 0003          ___fpclassifyf@e 0009          ___fpclassifyf@u 000B  
        ___fpclassifyf@x 0001             __mediumconst 0000                ??_isspace 0003  
                 tblptrh 000FF7                ??_isupper 0003                   tblptrl 000FF6  
                 tblptru 000FF8                ?_ADC_init 0001                ?_ADC_read 0001  
                 putch@c 0001         __end_of_vfprintf 336E                ??_sprintf 005A  
              ??_tolower 0009                ??_strncmp 0007               ___flge@ff1 0028  
             ___flge@ff2 002C          ??___fpclassifyf 0005             ___xxtofl@arg 000B  
           ___xxtofl@exp 000A             ___xxtofl@val 0001               ___fleq@ff1 0001  
             ___fleq@ff2 0005               __accesstop 0060  __end_of__initialization 36FA  
             ___flneg@f1 0001                ?_LCD_char 0001                ?_LCD_init 0001  
          ___rparam_used 000001               ___fltol@f1 0001           __pcstackCOMRAM 0001  
          __end_of_fputc 2EA4            __end_of_fputs 3590            __end_of_putch 376C  
        ADC_read@channel 0005               ??_ADC_init 0001               ??_ADC_read 0003  
                ??_fputc 0005                  ??_fputs 000E                  ??_putch 0001  
             __pbssBANK0 00B7               __pbssBANK1 0100               ??_LCD_char 0002  
             ??_LCD_init 0004                  ?___flge 0028                  ?___fleq 0001  
                ?___wmul 0001                  ?_efgtoa 0034                  ?_floorf 001A  
                ?_strcpy 0001                  ?_strlen 0001                  _LCD_cmd 346E  
              ?___xxtofl 0001                  __Hparam 0000                  __Lparam 0000  
                ___fladd 1432                  ___fldiv 2146                  ___awdiv 2EA4  
                ___flneg 35C8                  ___awmod 302A                  ___flmul 1D1C  
                ___flsub 3506                  ___fltol 29FC                ?_vfprintf 0052  
           __psmallconst 0800           _LCD_write_text 36A6                  __pcinit 36D6  
                __ramtop 0800                  __ptext0 3184                  __ptext1 33CA  
                __ptext2 330C                  __ptext3 18F2                  __ptext4 2D04  
                __ptext5 0822                  __ptext6 34C0                  __ptext7 3590  
                __ptext8 336E                  __ptext9 2F68                  _isdigit 3600  
             ??___xxtofl 0005         ___awmod@dividend 0001                  _isspace 341C  
                _isupper 3590                  efgtoa@c 003A                  efgtoa@d 0072  
                efgtoa@e 008A                  efgtoa@f 0036                  efgtoa@g 0086  
                efgtoa@h 007C                  efgtoa@i 0084                  efgtoa@l 0080  
                efgtoa@m 006C                  efgtoa@n 008C                  efgtoa@p 0076  
                efgtoa@t 0066                  efgtoa@u 008E                  efgtoa@w 0078  
                atoi@neg 000E         LCD_char@caracter 0002                  _sprintf 33CA  
                _tolower 34C0                  _strncmp 2D04     end_of_initialization 36FA  
                floorf@e 0028                  floorf@m 0024                  floorf@u 002A  
                floorf@x 001A                  fputc@fp 0003            __Lmediumconst 0000  
                fputs@fp 000C        __end_of_vfpfcnvrt 1D1C               efgtoa@mode 007B  
             efgtoa@sign 0074   __end_of_LCD_write_text 36D6                  postdec2 000FDD  
                postinc0 000FEE                  postinc1 000FE6                  postinc2 000FDE  
             ??_vfprintf 0058                  strcpy@d 0009                  strlen@a 0003  
                strcpy@s 0007                  strlen@s 0001              ___fladd@grs 0010  
          ___xxtofl@sign 0009                _TRISAbits 000F92                _TRISBbits 000F93  
              _TRISCbits 000F94              ___fldiv@grs 0014              ___fldiv@rem 000D  
            ___flmul@grs 001C               main@buffer 00A7          ?_LCD_write_text 0003  
         __end_of___flge 2C06           __end_of___fleq 3184              vfpfcnvrt@ap 0044  
            vfpfcnvrt@ct 004E              vfpfcnvrt@fp 0040           __end_of___wmul 372A  
         __end_of_efgtoa 1432           __end_of_floorf 26F2               floorf@F526 00B7  
         __end_of_strcpy 33CA           __end_of_strlen 36A6      start_initialization 36D6  
            __end_of_pad 302A        ??_LCD_write_nible 0001    __end_of___fpclassifyf 2D04  
            vfprintf@fmt 0054                 ??___flge 0030                 ??___fleq 0009  
               ??___wmul 0005                 ??_efgtoa 003B                 ??_floorf 001E  
               ??_strcpy 0005                 ??_strlen 0003                ___fladd@a 0005  
              ___fladd@b 0001                ___fldiv@a 0005                ___fldiv@b 0001  
               ?_LCD_cmd 0001                ___flmul@a 0013                ___flmul@b 000F  
            __pbssCOMRAM 005A                ___flsub@a 002C                ___flsub@b 0028  
          __pcstackBANK0 0060              _efgtoa$1071 0062              _efgtoa$1063 0060  
            _efgtoa$1072 0064                 ?___fladd 0001                 ?___fldiv 0001  
               ?___awdiv 0001                 ?___flneg 0001                 ?___awmod 0001  
               ?___flmul 000F                 ?___flsub 0028                 ?___fltol 0001  
            __smallconst 0800                 ?_isdigit 0001                 ?_isspace 0001  
               ?_isupper 0001                 _ADC_init 372A                 _ADC_read 3638  
               ?_sprintf 0092                 ?_tolower 0007                 ?_strncmp 0001  
         ___wmul@product 0005                 _LATAbits 000F89                 _LATBbits 000F8A  
               _LATCbits 000F8B                 _LCD_char 374C                 _LCD_init 3220  
              _vfpfcnvrt 18F2               _ADCON0bits 000FC2               _ADCON1bits 000FC1  
             _ADCON2bits 000FC0        ___wmul@multiplier 0001             _isspace$1150 0007  
             vfpfcnvrt@c 0051               vfpfcnvrt@f 004A         ??_LCD_write_text 0005  
               __Hrparam 0000       LCD_write_text@dato 0003               vfprintf@ap 0056  
               __Lrparam 0000               vfprintf@fp 0052               ?_vfpfcnvrt 0040  
        _LCD_write_nible 32A8       ___fpclassifyf@F465 00BB               sprintf@fmt 0094  
               ___xxtofl 26F2                 __ptext10 3670                 __ptext11 354C  
               __ptext20 1D1C                 __ptext12 2DDA                 __ptext21 2B02  
               __ptext13 376A                 __ptext30 26F2                 __ptext22 30DA  
               __ptext14 24E0                 __ptext31 36A6                 __ptext23 2146  
               __ptext15 2C06                 __ptext32 374C                 __ptext24 302A  
               __ptext16 29FC                 __ptext33 3220                 __ptext25 2EA4  
               __ptext17 3506                 __ptext34 346E                 __ptext26 28A6  
               __ptext18 1432                 __ptext35 32A8                 __ptext27 341C  
               __ptext19 35C8                 __ptext36 3638                 __ptext28 3600  
               __ptext37 372A                 __ptext29 3704               strcpy@dest 0001  
         LCD_cmd@comando 0003                 efgtoa@fp 0034                 efgtoa@ne 006A  
               efgtoa@pp 0068                 efgtoa@ou 006E                 isa$xinst 000000  
               _vfprintf 330C                 main@dato 00B5                 main@volt 00B1  
               isdigit@c 0001                sprintf@ap 009A                 isspace@c 0001  
              strcpy@src 0003                 isupper@c 0001                strncmp@_l 0001  
              strncmp@_r 0003  __end_of_LCD_write_nible 330C              efgtoa@nmode 007A  
            ??_vfpfcnvrt 0046                 sprintf@f 009C                 tolower@c 0007  
               sprintf@s 0092                 strncmp@l 0008                 strncmp@n 0005  
               strncmp@r 000A            ___fladd@signs 000D             ___fladd@aexp 000E  
           ___fladd@bexp 000F  
