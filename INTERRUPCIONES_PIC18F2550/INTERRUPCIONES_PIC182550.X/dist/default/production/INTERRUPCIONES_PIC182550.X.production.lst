

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Sat Mar 19 20:23:41 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F2550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    23                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    31                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    32                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    33                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    34                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    35  0000                     
    36                           ; Version 2.40
    37                           ; Generated 17/11/2021 GMT
    38                           ; 
    39                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution. Publication is not required when
    53                           ;        this file is used in an embedded application.
    54                           ; 
    55                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    56                           ;        software without specific prior written permission.
    57                           ; 
    58                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    59                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    60                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    61                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    62                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    63                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    64                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    65                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    66                           ; 
    67                           ; 
    68                           ; Code-generator required, PIC18F2550 Definitions
    69                           ; 
    70                           ; SFR Addresses
    71  0000                     _INTCON2bits	set	4081
    72  0000                     _INTCONbits	set	4082
    73  0000                     _TXREG	set	4013
    74  0000                     _RCREG	set	4014
    75  0000                     _SPBRG	set	4015
    76  0000                     _TRISBbits	set	3987
    77  0000                     _TRISCbits	set	3988
    78  0000                     _PIR1bits	set	3998
    79  0000                     _RCSTAbits	set	4011
    80  0000                     _TXSTAbits	set	4012
    81  0000                     _ADCON1	set	4033
    82  0000                     _RCONbits	set	4048
    83  0000                     _INTCON3bits	set	4080
    84                           
    85                           	psect	smallconst
    86  000800                     __psmallconst:
    87                           	callstack 0
    88  000800  00                 	db	0
    89  000801                     STR_2:
    90  000801  49                 	db	73	;'I'
    91  000802  4E                 	db	78	;'N'
    92  000803  49                 	db	73	;'I'
    93  000804  43                 	db	67	;'C'
    94  000805  49                 	db	73	;'I'
    95  000806  4F                 	db	79	;'O'
    96  000807  20                 	db	32
    97  000808  49                 	db	73	;'I'
    98  000809  4E                 	db	78	;'N'
    99  00080A  54                 	db	84	;'T'
   100  00080B  45                 	db	69	;'E'
   101  00080C  52                 	db	82	;'R'
   102  00080D  52                 	db	82	;'R'
   103  00080E  55                 	db	85	;'U'
   104  00080F  50                 	db	80	;'P'
   105  000810  43                 	db	67	;'C'
   106  000811  49                 	db	73	;'I'
   107  000812  4F                 	db	79	;'O'
   108  000813  4E                 	db	78	;'N'
   109  000814  20                 	db	32
   110  000815  49                 	db	73	;'I'
   111  000816  4E                 	db	78	;'N'
   112  000817  54                 	db	84	;'T'
   113  000818  31                 	db	49	;'1'
   114  000819  0D                 	db	13
   115  00081A  0A                 	db	10
   116  00081B  00                 	db	0
   117  00081C                     STR_1:
   118  00081C  49                 	db	73	;'I'
   119  00081D  4E                 	db	78	;'N'
   120  00081E  49                 	db	73	;'I'
   121  00081F  43                 	db	67	;'C'
   122  000820  49                 	db	73	;'I'
   123  000821  4F                 	db	79	;'O'
   124  000822  20                 	db	32
   125  000823  49                 	db	73	;'I'
   126  000824  4E                 	db	78	;'N'
   127  000825  54                 	db	84	;'T'
   128  000826  45                 	db	69	;'E'
   129  000827  52                 	db	82	;'R'
   130  000828  52                 	db	82	;'R'
   131  000829  55                 	db	85	;'U'
   132  00082A  50                 	db	80	;'P'
   133  00082B  43                 	db	67	;'C'
   134  00082C  49                 	db	73	;'I'
   135  00082D  4F                 	db	79	;'O'
   136  00082E  4E                 	db	78	;'N'
   137  00082F  20                 	db	32
   138  000830  49                 	db	73	;'I'
   139  000831  4E                 	db	78	;'N'
   140  000832  54                 	db	84	;'T'
   141  000833  30                 	db	48	;'0'
   142  000834  0A                 	db	10
   143  000835  0D                 	db	13
   144  000836  00                 	db	0
   145  000837                     STR_3:
   146  000837  46                 	db	70	;'F'
   147  000838  49                 	db	73	;'I'
   148  000839  4E                 	db	78	;'N'
   149  00083A  20                 	db	32
   150  00083B  49                 	db	73	;'I'
   151  00083C  4E                 	db	78	;'N'
   152  00083D  54                 	db	84	;'T'
   153  00083E  45                 	db	69	;'E'
   154  00083F  52                 	db	82	;'R'
   155  000840  52                 	db	82	;'R'
   156  000841  55                 	db	85	;'U'
   157  000842  50                 	db	80	;'P'
   158  000843  43                 	db	67	;'C'
   159  000844  49                 	db	73	;'I'
   160  000845  4F                 	db	79	;'O'
   161  000846  4E                 	db	78	;'N'
   162  000847  20                 	db	32
   163  000848  49                 	db	73	;'I'
   164  000849  4E                 	db	78	;'N'
   165  00084A  54                 	db	84	;'T'
   166  00084B  31                 	db	49	;'1'
   167  00084C  0D                 	db	13
   168  00084D  0A                 	db	10
   169  00084E  00                 	db	0
   170  00084F  00                 	db	0	; dummy byte at the end
   171  0000                     
   172                           ; #config settings
   173                           
   174                           	psect	cinit
   175  000E74                     __pcinit:
   176                           	callstack 0
   177  000E74                     start_initialization:
   178                           	callstack 0
   179  000E74                     __initialization:
   180                           	callstack 0
   181                           
   182                           ; Clear objects allocated to BANK0 (2 bytes)
   183  000E74  0100               	movlb	0
   184  000E76  6BA2               	clrf	(__pbssBANK0+1)& (0+255),b
   185  000E78  6BA1               	clrf	__pbssBANK0& (0+255),b
   186                           
   187                           ; Clear objects allocated to COMRAM (38 bytes)
   188  000E7A  EE00  F001         	lfsr	0,__pbssCOMRAM
   189  000E7E  0E26               	movlw	38
   190  000E80                     clear_0:
   191  000E80  6AEE               	clrf	postinc0,c
   192  000E82  06E8               	decf	wreg,f,c
   193  000E84  E1FD               	bnz	clear_0
   194  000E86                     end_of_initialization:
   195                           	callstack 0
   196  000E86                     __end_of__initialization:
   197                           	callstack 0
   198  000E86  904C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   199  000E88  924C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   200  000E8A  0E00               	movlw	low (__Lsmallconst shr (0+16))
   201  000E8C  6EF8               	movwf	tblptru,c
   202  000E8E  0E08               	movlw	high __Lsmallconst
   203  000E90  6EF7               	movwf	tblptrh,c
   204  000E92  0100               	movlb	0
   205  000E94  EF14  F007         	goto	_main	;jump to C main() function
   206                           
   207                           	psect	bssCOMRAM
   208  000001                     __pbssCOMRAM:
   209                           	callstack 0
   210  000001                     	ds	32
   211  000021                     _width:
   212                           	callstack 0
   213  000021                     	ds	2
   214  000023                     _prec:
   215                           	callstack 0
   216  000023                     	ds	2
   217  000025                     _flags:
   218                           	callstack 0
   219  000025                     	ds	2
   220                           
   221                           	psect	bssBANK0
   222  0000A1                     __pbssBANK0:
   223                           	callstack 0
   224  0000A1                     _nout:
   225                           	callstack 0
   226  0000A1                     	ds	2
   227                           
   228                           	psect	cstackBANK0
   229  000060                     __pcstackBANK0:
   230                           	callstack 0
   231  000060                     UART_write@dato:
   232                           	callstack 0
   233                           
   234                           ; 1 bytes @ 0x0
   235  000060                     	ds	1
   236  000061                     putch@dato:
   237                           	callstack 0
   238                           
   239                           ; 1 bytes @ 0x1
   240  000061                     	ds	1
   241  000062                     fputc@c:
   242                           	callstack 0
   243                           
   244                           ; 2 bytes @ 0x2
   245  000062                     	ds	2
   246  000064                     fputc@fp:
   247                           	callstack 0
   248                           
   249                           ; 2 bytes @ 0x4
   250  000064                     	ds	2
   251  000066                     ??_fputc:
   252                           
   253                           ; 1 bytes @ 0x6
   254  000066                     	ds	5
   255  00006B                     ?_vfpfcnvrt:
   256                           	callstack 0
   257  00006B                     vfpfcnvrt@fp:
   258                           	callstack 0
   259                           
   260                           ; 2 bytes @ 0xB
   261  00006B                     	ds	2
   262  00006D                     vfpfcnvrt@fmt:
   263                           	callstack 0
   264                           
   265                           ; 2 bytes @ 0xD
   266  00006D                     	ds	2
   267  00006F                     vfpfcnvrt@ap:
   268                           	callstack 0
   269                           
   270                           ; 2 bytes @ 0xF
   271  00006F                     	ds	2
   272  000071                     ?_vfprintf:
   273                           	callstack 0
   274  000071                     vfprintf@fp:
   275                           	callstack 0
   276                           
   277                           ; 2 bytes @ 0x11
   278  000071                     	ds	2
   279  000073                     vfprintf@fmt:
   280                           	callstack 0
   281                           
   282                           ; 2 bytes @ 0x13
   283  000073                     	ds	2
   284  000075                     vfprintf@ap:
   285                           	callstack 0
   286                           
   287                           ; 2 bytes @ 0x15
   288  000075                     	ds	2
   289  000077                     vfprintf@cfmt:
   290                           	callstack 0
   291                           
   292                           ; 2 bytes @ 0x17
   293  000077                     	ds	2
   294  000079                     ?_printf:
   295                           	callstack 0
   296  000079                     printf@fmt:
   297                           	callstack 0
   298                           
   299                           ; 2 bytes @ 0x19
   300  000079                     	ds	2
   301  00007B                     printf@ap:
   302                           	callstack 0
   303                           
   304                           ; 2 bytes @ 0x1B
   305  00007B                     	ds	2
   306  00007D                     ??_INT_ISR_LOW:
   307                           
   308                           ; 1 bytes @ 0x1D
   309  00007D                     	ds	13
   310  00008A                     ?___aldiv:
   311                           	callstack 0
   312  00008A                     ___aldiv@dividend:
   313                           	callstack 0
   314                           
   315                           ; 4 bytes @ 0x2A
   316  00008A                     	ds	4
   317  00008E                     ___aldiv@divisor:
   318                           	callstack 0
   319                           
   320                           ; 4 bytes @ 0x2E
   321  00008E                     	ds	4
   322  000092                     ___aldiv@counter:
   323                           	callstack 0
   324                           
   325                           ; 1 bytes @ 0x32
   326  000092                     	ds	1
   327  000093                     ___aldiv@sign:
   328                           	callstack 0
   329                           
   330                           ; 1 bytes @ 0x33
   331  000093                     	ds	1
   332  000094                     ___aldiv@quotient:
   333                           	callstack 0
   334                           
   335                           ; 4 bytes @ 0x34
   336  000094                     	ds	4
   337  000098                     UART_init_baud@baudRate:
   338                           	callstack 0
   339                           
   340                           ; 4 bytes @ 0x38
   341  000098                     	ds	4
   342  00009C                     ??_UART_init_baud:
   343                           
   344                           ; 1 bytes @ 0x3C
   345  00009C                     	ds	4
   346  0000A0                     UART_init_baud@valor:
   347                           	callstack 0
   348                           
   349                           ; 1 bytes @ 0x40
   350  0000A0                     	ds	1
   351  0000A1                     
   352                           ; 1 bytes @ 0x41
   353                           
   354                           	psect	cstackCOMRAM
   355  000027                     __pcstackCOMRAM:
   356                           	callstack 0
   357  000027                     i2UART_write@dato:
   358                           	callstack 0
   359                           
   360                           ; 1 bytes @ 0x0
   361  000027                     	ds	1
   362  000028                     i2putch@dato:
   363                           	callstack 0
   364                           
   365                           ; 1 bytes @ 0x1
   366  000028                     	ds	1
   367  000029                     i2fputc@c:
   368                           	callstack 0
   369                           
   370                           ; 2 bytes @ 0x2
   371  000029                     	ds	2
   372  00002B                     i2fputc@fp:
   373                           	callstack 0
   374                           
   375                           ; 2 bytes @ 0x4
   376  00002B                     	ds	2
   377  00002D                     ??i2_fputc:
   378                           
   379                           ; 1 bytes @ 0x6
   380  00002D                     	ds	5
   381  000032                     ?i2_vfpfcnvrt:
   382                           	callstack 0
   383  000032                     i2vfpfcnvrt@fp:
   384                           	callstack 0
   385                           
   386                           ; 2 bytes @ 0xB
   387  000032                     	ds	2
   388  000034                     i2vfpfcnvrt@fmt:
   389                           	callstack 0
   390                           
   391                           ; 2 bytes @ 0xD
   392  000034                     	ds	2
   393  000036                     i2vfpfcnvrt@ap:
   394                           	callstack 0
   395                           
   396                           ; 2 bytes @ 0xF
   397  000036                     	ds	2
   398  000038                     ?i2_vfprintf:
   399                           	callstack 0
   400  000038                     i2vfprintf@fp:
   401                           	callstack 0
   402                           
   403                           ; 2 bytes @ 0x11
   404  000038                     	ds	2
   405  00003A                     i2vfprintf@fmt:
   406                           	callstack 0
   407                           
   408                           ; 2 bytes @ 0x13
   409  00003A                     	ds	2
   410  00003C                     i2vfprintf@ap:
   411                           	callstack 0
   412                           
   413                           ; 2 bytes @ 0x15
   414  00003C                     	ds	2
   415  00003E                     i2vfprintf@cfmt:
   416                           	callstack 0
   417                           
   418                           ; 2 bytes @ 0x17
   419  00003E                     	ds	2
   420  000040                     ?i2_printf:
   421                           	callstack 0
   422  000040                     i2printf@fmt:
   423                           	callstack 0
   424                           
   425                           ; 2 bytes @ 0x19
   426  000040                     	ds	2
   427  000042                     i2printf@ap:
   428                           	callstack 0
   429                           
   430                           ; 2 bytes @ 0x1B
   431  000042                     	ds	2
   432  000044                     ??_INT_isr:
   433                           
   434                           ; 1 bytes @ 0x1D
   435  000044                     	ds	8
   436                           
   437 ;;
   438 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   439 ;;
   440 ;; *************** function _main *****************
   441 ;; Defined at:
   442 ;;		line 119 in file "main.c"
   443 ;; Parameters:    Size  Location     Type
   444 ;;		None
   445 ;; Auto vars:     Size  Location     Type
   446 ;;		None
   447 ;; Return value:  Size  Location     Type
   448 ;;                  1    wreg      void 
   449 ;; Registers used:
   450 ;;		wreg, status,2, status,0, cstack
   451 ;; Tracked objects:
   452 ;;		On entry : 0/0
   453 ;;		On exit  : 0/0
   454 ;;		Unchanged: 0/0
   455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   456 ;;      Params:         0       0       0       0       0       0       0       0       0
   457 ;;      Locals:         0       0       0       0       0       0       0       0       0
   458 ;;      Temps:          0       0       0       0       0       0       0       0       0
   459 ;;      Totals:         0       0       0       0       0       0       0       0       0
   460 ;;Total ram usage:        0 bytes
   461 ;; Hardware stack levels required when called: 16
   462 ;; This function calls:
   463 ;;		_INT_init
   464 ;;		_UART_init_baud
   465 ;; This function is called by:
   466 ;;		Startup code after reset
   467 ;; This function uses a non-reentrant model
   468 ;;
   469                           
   470                           	psect	text0
   471  000E28                     __ptext0:
   472                           	callstack 0
   473  000E28                     _main:
   474                           	callstack 15
   475  000E28                     
   476                           ;main.c: 121:     ADCON1 = 0X0F;
   477  000E28  0E0F               	movlw	15
   478  000E2A  6EC1               	movwf	193,c	;volatile
   479  000E2C                     
   480                           ;main.c: 122:     INT_init();
   481  000E2C  EC4C  F007         	call	_INT_init	;wreg free
   482  000E30                     
   483                           ;main.c: 123:     UART_init_baud(9600);
   484  000E30  0E80               	movlw	128
   485  000E32  0100               	movlb	0	; () banked
   486  000E34  6F98               	movwf	UART_init_baud@baudRate& (0+255),b
   487  000E36  0E25               	movlw	37
   488  000E38  6F99               	movwf	(UART_init_baud@baudRate+1)& (0+255),b
   489  000E3A  0E00               	movlw	0
   490  000E3C  6F9A               	movwf	(UART_init_baud@baudRate+2)& (0+255),b
   491  000E3E  0E00               	movlw	0
   492  000E40  6F9B               	movwf	(UART_init_baud@baudRate+3)& (0+255),b
   493  000E42  EC6C  F006         	call	_UART_init_baud	;wreg free
   494  000E46                     l80:
   495  000E46  EF23  F007         	goto	l80
   496  000E4A  EF64  F000         	goto	start
   497  000E4E                     __end_of_main:
   498                           	callstack 0
   499                           
   500 ;; *************** function _UART_init_baud *****************
   501 ;; Defined at:
   502 ;;		line 22 in file "./UART.h"
   503 ;; Parameters:    Size  Location     Type
   504 ;;  baudRate        4   56[BANK0 ] const long 
   505 ;; Auto vars:     Size  Location     Type
   506 ;;  valor           1   64[BANK0 ] unsigned char 
   507 ;; Return value:  Size  Location     Type
   508 ;;                  1    wreg      void 
   509 ;; Registers used:
   510 ;;		wreg, status,2, status,0, cstack
   511 ;; Tracked objects:
   512 ;;		On entry : 0/0
   513 ;;		On exit  : 0/0
   514 ;;		Unchanged: 0/0
   515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   516 ;;      Params:         0       4       0       0       0       0       0       0       0
   517 ;;      Locals:         0       1       0       0       0       0       0       0       0
   518 ;;      Temps:          0       4       0       0       0       0       0       0       0
   519 ;;      Totals:         0       9       0       0       0       0       0       0       0
   520 ;;Total ram usage:        9 bytes
   521 ;; Hardware stack levels used: 1
   522 ;; Hardware stack levels required when called: 15
   523 ;; This function calls:
   524 ;;		___aldiv
   525 ;; This function is called by:
   526 ;;		_main
   527 ;; This function uses a non-reentrant model
   528 ;;
   529                           
   530                           	psect	text1
   531  000CD8                     __ptext1:
   532                           	callstack 0
   533  000CD8                     _UART_init_baud:
   534                           	callstack 15
   535  000CD8                     
   536                           ;./UART.h: 22: void UART_init_baud(const long int baudRate);./UART.h: 23: {;./UART.h: 25
      +                          :     unsigned char valor = (unsigned char)((20000000/(baudRate*16)) -1);
   537  000CD8  0E00               	movlw	0
   538  000CDA  0100               	movlb	0	; () banked
   539  000CDC  6F8A               	movwf	___aldiv@dividend& (0+255),b
   540  000CDE  0E2D               	movlw	45
   541  000CE0  6F8B               	movwf	(___aldiv@dividend+1)& (0+255),b
   542  000CE2  0E31               	movlw	49
   543  000CE4  6F8C               	movwf	(___aldiv@dividend+2)& (0+255),b
   544  000CE6  0E01               	movlw	1
   545  000CE8  6F8D               	movwf	(___aldiv@dividend+3)& (0+255),b
   546  000CEA  C098  F09C         	movff	UART_init_baud@baudRate,??_UART_init_baud
   547  000CEE  C099  F09D         	movff	UART_init_baud@baudRate+1,??_UART_init_baud+1
   548  000CF2  C09A  F09E         	movff	UART_init_baud@baudRate+2,??_UART_init_baud+2
   549  000CF6  C09B  F09F         	movff	UART_init_baud@baudRate+3,??_UART_init_baud+3
   550  000CFA  0E04               	movlw	4
   551  000CFC                     u535:
   552  000CFC  90D8               	bcf	status,0,c
   553  000CFE  379C               	rlcf	??_UART_init_baud& (0+255),f,b
   554  000D00  379D               	rlcf	(??_UART_init_baud+1)& (0+255),f,b
   555  000D02  379E               	rlcf	(??_UART_init_baud+2)& (0+255),f,b
   556  000D04  379F               	rlcf	(??_UART_init_baud+3)& (0+255),f,b
   557  000D06  2EE8               	decfsz	wreg,f,c
   558  000D08  EF7E  F006         	goto	u535
   559  000D0C  C09C  F08E         	movff	??_UART_init_baud,___aldiv@divisor
   560  000D10  C09D  F08F         	movff	??_UART_init_baud+1,___aldiv@divisor+1
   561  000D14  C09E  F090         	movff	??_UART_init_baud+2,___aldiv@divisor+2
   562  000D18  C09F  F091         	movff	??_UART_init_baud+3,___aldiv@divisor+3
   563  000D1C  EC28  F004         	call	___aldiv	;wreg free
   564  000D20  0100               	movlb	0	; () banked
   565  000D22  058A               	decf	?___aldiv& (0+255),w,b
   566  000D24  6FA0               	movwf	UART_init_baud@valor& (0+255),b
   567  000D26                     
   568                           ; BSR set to: 0
   569                           ;./UART.h: 26:     TXSTAbits.BRGH = 1;
   570  000D26  84AC               	bsf	172,2,c	;volatile
   571  000D28                     
   572                           ; BSR set to: 0
   573                           ;./UART.h: 34:     TRISCbits.TRISC7 = 1;
   574  000D28  8E94               	bsf	148,7,c	;volatile
   575  000D2A                     
   576                           ; BSR set to: 0
   577                           ;./UART.h: 35:     TRISCbits.TRISC6 = 0;
   578  000D2A  9C94               	bcf	148,6,c	;volatile
   579  000D2C                     
   580                           ; BSR set to: 0
   581                           ;./UART.h: 37:     TXSTAbits.SYNC = 0;
   582  000D2C  98AC               	bcf	172,4,c	;volatile
   583  000D2E                     
   584                           ; BSR set to: 0
   585                           ;./UART.h: 38:     TXSTAbits.TX9 = 0;
   586  000D2E  9CAC               	bcf	172,6,c	;volatile
   587  000D30                     
   588                           ; BSR set to: 0
   589                           ;./UART.h: 40:     SPBRG = valor;
   590  000D30  C0A0  FFAF         	movff	UART_init_baud@valor,4015	;volatile
   591  000D34                     
   592                           ; BSR set to: 0
   593                           ;./UART.h: 41:     RCSTAbits.SPEN = 1;
   594  000D34  8EAB               	bsf	171,7,c	;volatile
   595  000D36                     
   596                           ; BSR set to: 0
   597                           ;./UART.h: 42:     TXSTAbits.TXEN = 1;
   598  000D36  8AAC               	bsf	172,5,c	;volatile
   599  000D38                     
   600                           ; BSR set to: 0
   601                           ;./UART.h: 43:     RCSTAbits.CREN = 1;
   602  000D38  88AB               	bsf	171,4,c	;volatile
   603  000D3A                     
   604                           ; BSR set to: 0
   605  000D3A  0012               	return		;funcret
   606  000D3C                     __end_of_UART_init_baud:
   607                           	callstack 0
   608                           
   609 ;; *************** function ___aldiv *****************
   610 ;; Defined at:
   611 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\aldiv.c"
   612 ;; Parameters:    Size  Location     Type
   613 ;;  dividend        4   42[BANK0 ] long 
   614 ;;  divisor         4   46[BANK0 ] long 
   615 ;; Auto vars:     Size  Location     Type
   616 ;;  quotient        4   52[BANK0 ] long 
   617 ;;  sign            1   51[BANK0 ] unsigned char 
   618 ;;  counter         1   50[BANK0 ] unsigned char 
   619 ;; Return value:  Size  Location     Type
   620 ;;                  4   42[BANK0 ] long 
   621 ;; Registers used:
   622 ;;		wreg, status,2, status,0
   623 ;; Tracked objects:
   624 ;;		On entry : 0/0
   625 ;;		On exit  : 0/0
   626 ;;		Unchanged: 0/0
   627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   628 ;;      Params:         0       8       0       0       0       0       0       0       0
   629 ;;      Locals:         0       6       0       0       0       0       0       0       0
   630 ;;      Temps:          0       0       0       0       0       0       0       0       0
   631 ;;      Totals:         0      14       0       0       0       0       0       0       0
   632 ;;Total ram usage:       14 bytes
   633 ;; Hardware stack levels used: 1
   634 ;; Hardware stack levels required when called: 14
   635 ;; This function calls:
   636 ;;		Nothing
   637 ;; This function is called by:
   638 ;;		_UART_init_baud
   639 ;; This function uses a non-reentrant model
   640 ;;
   641                           
   642                           	psect	text2
   643  000850                     __ptext2:
   644                           	callstack 0
   645  000850                     ___aldiv:
   646                           	callstack 15
   647  000850  0E00               	movlw	0
   648  000852  0100               	movlb	0	; () banked
   649  000854  6F93               	movwf	___aldiv@sign& (0+255),b
   650  000856                     
   651                           ; BSR set to: 0
   652  000856  BF91               	btfsc	(___aldiv@divisor+3)& (0+255),7,b
   653  000858  EF32  F004         	goto	u450
   654  00085C  EF30  F004         	goto	u451
   655  000860                     u451:
   656  000860  EF3C  F004         	goto	l1193
   657  000864                     u450:
   658  000864                     
   659                           ; BSR set to: 0
   660  000864  1F91               	comf	(___aldiv@divisor+3)& (0+255),f,b
   661  000866  1F90               	comf	(___aldiv@divisor+2)& (0+255),f,b
   662  000868  1F8F               	comf	(___aldiv@divisor+1)& (0+255),f,b
   663  00086A  6D8E               	negf	___aldiv@divisor& (0+255),b
   664  00086C  0E00               	movlw	0
   665  00086E  238F               	addwfc	(___aldiv@divisor+1)& (0+255),f,b
   666  000870  2390               	addwfc	(___aldiv@divisor+2)& (0+255),f,b
   667  000872  2391               	addwfc	(___aldiv@divisor+3)& (0+255),f,b
   668  000874                     
   669                           ; BSR set to: 0
   670  000874  0E01               	movlw	1
   671  000876  6F93               	movwf	___aldiv@sign& (0+255),b
   672  000878                     l1193:
   673                           
   674                           ; BSR set to: 0
   675  000878  BF8D               	btfsc	(___aldiv@dividend+3)& (0+255),7,b
   676  00087A  EF43  F004         	goto	u460
   677  00087E  EF41  F004         	goto	u461
   678  000882                     u461:
   679  000882  EF4D  F004         	goto	l1199
   680  000886                     u460:
   681  000886                     
   682                           ; BSR set to: 0
   683  000886  1F8D               	comf	(___aldiv@dividend+3)& (0+255),f,b
   684  000888  1F8C               	comf	(___aldiv@dividend+2)& (0+255),f,b
   685  00088A  1F8B               	comf	(___aldiv@dividend+1)& (0+255),f,b
   686  00088C  6D8A               	negf	___aldiv@dividend& (0+255),b
   687  00088E  0E00               	movlw	0
   688  000890  238B               	addwfc	(___aldiv@dividend+1)& (0+255),f,b
   689  000892  238C               	addwfc	(___aldiv@dividend+2)& (0+255),f,b
   690  000894  238D               	addwfc	(___aldiv@dividend+3)& (0+255),f,b
   691  000896                     
   692                           ; BSR set to: 0
   693  000896  0E01               	movlw	1
   694  000898  1B93               	xorwf	___aldiv@sign& (0+255),f,b
   695  00089A                     l1199:
   696                           
   697                           ; BSR set to: 0
   698  00089A  0E00               	movlw	0
   699  00089C  6F94               	movwf	___aldiv@quotient& (0+255),b
   700  00089E  0E00               	movlw	0
   701  0008A0  6F95               	movwf	(___aldiv@quotient+1)& (0+255),b
   702  0008A2  0E00               	movlw	0
   703  0008A4  6F96               	movwf	(___aldiv@quotient+2)& (0+255),b
   704  0008A6  0E00               	movlw	0
   705  0008A8  6F97               	movwf	(___aldiv@quotient+3)& (0+255),b
   706  0008AA                     
   707                           ; BSR set to: 0
   708  0008AA  518E               	movf	___aldiv@divisor& (0+255),w,b
   709  0008AC  118F               	iorwf	(___aldiv@divisor+1)& (0+255),w,b
   710  0008AE  1190               	iorwf	(___aldiv@divisor+2)& (0+255),w,b
   711  0008B0  1191               	iorwf	(___aldiv@divisor+3)& (0+255),w,b
   712  0008B2  B4D8               	btfsc	status,2,c
   713  0008B4  EF5E  F004         	goto	u471
   714  0008B8  EF60  F004         	goto	u470
   715  0008BC                     u471:
   716  0008BC  EF96  F004         	goto	l1221
   717  0008C0                     u470:
   718  0008C0                     
   719                           ; BSR set to: 0
   720  0008C0  0E01               	movlw	1
   721  0008C2  6F92               	movwf	___aldiv@counter& (0+255),b
   722  0008C4  EF6A  F004         	goto	l1207
   723  0008C8                     l1205:
   724                           
   725                           ; BSR set to: 0
   726  0008C8  90D8               	bcf	status,0,c
   727  0008CA  378E               	rlcf	___aldiv@divisor& (0+255),f,b
   728  0008CC  378F               	rlcf	(___aldiv@divisor+1)& (0+255),f,b
   729  0008CE  3790               	rlcf	(___aldiv@divisor+2)& (0+255),f,b
   730  0008D0  3791               	rlcf	(___aldiv@divisor+3)& (0+255),f,b
   731  0008D2  2B92               	incf	___aldiv@counter& (0+255),f,b
   732  0008D4                     l1207:
   733                           
   734                           ; BSR set to: 0
   735  0008D4  AF91               	btfss	(___aldiv@divisor+3)& (0+255),7,b
   736  0008D6  EF6F  F004         	goto	u481
   737  0008DA  EF71  F004         	goto	u480
   738  0008DE                     u481:
   739  0008DE  EF64  F004         	goto	l1205
   740  0008E2                     u480:
   741  0008E2                     l1209:
   742                           
   743                           ; BSR set to: 0
   744  0008E2  90D8               	bcf	status,0,c
   745  0008E4  3794               	rlcf	___aldiv@quotient& (0+255),f,b
   746  0008E6  3795               	rlcf	(___aldiv@quotient+1)& (0+255),f,b
   747  0008E8  3796               	rlcf	(___aldiv@quotient+2)& (0+255),f,b
   748  0008EA  3797               	rlcf	(___aldiv@quotient+3)& (0+255),f,b
   749  0008EC                     
   750                           ; BSR set to: 0
   751  0008EC  518E               	movf	___aldiv@divisor& (0+255),w,b
   752  0008EE  5D8A               	subwf	___aldiv@dividend& (0+255),w,b
   753  0008F0  518F               	movf	(___aldiv@divisor+1)& (0+255),w,b
   754  0008F2  598B               	subwfb	(___aldiv@dividend+1)& (0+255),w,b
   755  0008F4  5190               	movf	(___aldiv@divisor+2)& (0+255),w,b
   756  0008F6  598C               	subwfb	(___aldiv@dividend+2)& (0+255),w,b
   757  0008F8  5191               	movf	(___aldiv@divisor+3)& (0+255),w,b
   758  0008FA  598D               	subwfb	(___aldiv@dividend+3)& (0+255),w,b
   759  0008FC  A0D8               	btfss	status,0,c
   760  0008FE  EF83  F004         	goto	u491
   761  000902  EF85  F004         	goto	u490
   762  000906                     u491:
   763  000906  EF8E  F004         	goto	l1217
   764  00090A                     u490:
   765  00090A                     
   766                           ; BSR set to: 0
   767  00090A  518E               	movf	___aldiv@divisor& (0+255),w,b
   768  00090C  5F8A               	subwf	___aldiv@dividend& (0+255),f,b
   769  00090E  518F               	movf	(___aldiv@divisor+1)& (0+255),w,b
   770  000910  5B8B               	subwfb	(___aldiv@dividend+1)& (0+255),f,b
   771  000912  5190               	movf	(___aldiv@divisor+2)& (0+255),w,b
   772  000914  5B8C               	subwfb	(___aldiv@dividend+2)& (0+255),f,b
   773  000916  5191               	movf	(___aldiv@divisor+3)& (0+255),w,b
   774  000918  5B8D               	subwfb	(___aldiv@dividend+3)& (0+255),f,b
   775  00091A                     
   776                           ; BSR set to: 0
   777  00091A  8194               	bsf	___aldiv@quotient& (0+255),0,b
   778  00091C                     l1217:
   779                           
   780                           ; BSR set to: 0
   781  00091C  90D8               	bcf	status,0,c
   782  00091E  3391               	rrcf	(___aldiv@divisor+3)& (0+255),f,b
   783  000920  3390               	rrcf	(___aldiv@divisor+2)& (0+255),f,b
   784  000922  338F               	rrcf	(___aldiv@divisor+1)& (0+255),f,b
   785  000924  338E               	rrcf	___aldiv@divisor& (0+255),f,b
   786  000926                     
   787                           ; BSR set to: 0
   788  000926  2F92               	decfsz	___aldiv@counter& (0+255),f,b
   789  000928  EF71  F004         	goto	l1209
   790  00092C                     l1221:
   791                           
   792                           ; BSR set to: 0
   793  00092C  5193               	movf	___aldiv@sign& (0+255),w,b
   794  00092E  B4D8               	btfsc	status,2,c
   795  000930  EF9C  F004         	goto	u501
   796  000934  EF9E  F004         	goto	u500
   797  000938                     u501:
   798  000938  EFA6  F004         	goto	l1225
   799  00093C                     u500:
   800  00093C                     
   801                           ; BSR set to: 0
   802  00093C  1F97               	comf	(___aldiv@quotient+3)& (0+255),f,b
   803  00093E  1F96               	comf	(___aldiv@quotient+2)& (0+255),f,b
   804  000940  1F95               	comf	(___aldiv@quotient+1)& (0+255),f,b
   805  000942  6D94               	negf	___aldiv@quotient& (0+255),b
   806  000944  0E00               	movlw	0
   807  000946  2395               	addwfc	(___aldiv@quotient+1)& (0+255),f,b
   808  000948  2396               	addwfc	(___aldiv@quotient+2)& (0+255),f,b
   809  00094A  2397               	addwfc	(___aldiv@quotient+3)& (0+255),f,b
   810  00094C                     l1225:
   811                           
   812                           ; BSR set to: 0
   813  00094C  C094  F08A         	movff	___aldiv@quotient,?___aldiv
   814  000950  C095  F08B         	movff	___aldiv@quotient+1,?___aldiv+1
   815  000954  C096  F08C         	movff	___aldiv@quotient+2,?___aldiv+2
   816  000958  C097  F08D         	movff	___aldiv@quotient+3,?___aldiv+3
   817  00095C                     
   818                           ; BSR set to: 0
   819  00095C  0012               	return		;funcret
   820  00095E                     __end_of___aldiv:
   821                           	callstack 0
   822                           
   823 ;; *************** function _INT_init *****************
   824 ;; Defined at:
   825 ;;		line 75 in file "main.c"
   826 ;; Parameters:    Size  Location     Type
   827 ;;		None
   828 ;; Auto vars:     Size  Location     Type
   829 ;;		None
   830 ;; Return value:  Size  Location     Type
   831 ;;                  1    wreg      void 
   832 ;; Registers used:
   833 ;;		None
   834 ;; Tracked objects:
   835 ;;		On entry : 0/0
   836 ;;		On exit  : 0/0
   837 ;;		Unchanged: 0/0
   838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   839 ;;      Params:         0       0       0       0       0       0       0       0       0
   840 ;;      Locals:         0       0       0       0       0       0       0       0       0
   841 ;;      Temps:          0       0       0       0       0       0       0       0       0
   842 ;;      Totals:         0       0       0       0       0       0       0       0       0
   843 ;;Total ram usage:        0 bytes
   844 ;; Hardware stack levels used: 1
   845 ;; Hardware stack levels required when called: 14
   846 ;; This function calls:
   847 ;;		Nothing
   848 ;; This function is called by:
   849 ;;		_main
   850 ;; This function uses a non-reentrant model
   851 ;;
   852                           
   853                           	psect	text3
   854  000E98                     __ptext3:
   855                           	callstack 0
   856  000E98                     _INT_init:
   857                           	callstack 16
   858  000E98                     
   859                           ;main.c: 77:     TRISBbits.TRISB0=1;
   860  000E98  8093               	bsf	147,0,c	;volatile
   861                           
   862                           ;main.c: 78:     TRISBbits.TRISB1=1;
   863  000E9A  8293               	bsf	147,1,c	;volatile
   864                           
   865                           ;main.c: 79:     TRISBbits.TRISB2=1;
   866  000E9C  8493               	bsf	147,2,c	;volatile
   867                           
   868                           ;main.c: 81:      INTCON3bits.INT1IP = 0;
   869  000E9E  9CF0               	bcf	240,6,c	;volatile
   870                           
   871                           ;main.c: 83:     INTCONbits.INT0IE = 1;
   872  000EA0  88F2               	bsf	242,4,c	;volatile
   873                           
   874                           ;main.c: 84:     INTCON3bits.INT1IE =1;
   875  000EA2  86F0               	bsf	240,3,c	;volatile
   876                           
   877                           ;main.c: 85:     INTCON3bits.INT2IE =1;
   878  000EA4  88F0               	bsf	240,4,c	;volatile
   879                           
   880                           ;main.c: 87:     INTCON2bits.INTEDG0 = 0;
   881  000EA6  9CF1               	bcf	241,6,c	;volatile
   882                           
   883                           ;main.c: 88:     INTCON2bits.INTEDG1 = 0;
   884  000EA8  9AF1               	bcf	241,5,c	;volatile
   885                           
   886                           ;main.c: 89:     INTCON2bits.INTEDG2 = 0;
   887  000EAA  98F1               	bcf	241,4,c	;volatile
   888                           
   889                           ;main.c: 91:     RCONbits.IPEN = 1;
   890  000EAC  8ED0               	bsf	208,7,c	;volatile
   891                           
   892                           ;main.c: 92:     INTCONbits.GIEH = 1;
   893  000EAE  8EF2               	bsf	242,7,c	;volatile
   894                           
   895                           ;main.c: 93:     INTCONbits.GIEL = 1;
   896  000EB0  8CF2               	bsf	242,6,c	;volatile
   897  000EB2  0012               	return		;funcret
   898  000EB4                     __end_of_INT_init:
   899                           	callstack 0
   900                           
   901 ;; *************** function _INT_ISR_LOW *****************
   902 ;; Defined at:
   903 ;;		line 106 in file "main.c"
   904 ;; Parameters:    Size  Location     Type
   905 ;;		None
   906 ;; Auto vars:     Size  Location     Type
   907 ;;		None
   908 ;; Return value:  Size  Location     Type
   909 ;;                  1    wreg      void 
   910 ;; Registers used:
   911 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   912 ;; Tracked objects:
   913 ;;		On entry : 0/0
   914 ;;		On exit  : 0/0
   915 ;;		Unchanged: 0/0
   916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   917 ;;      Params:         0       0       0       0       0       0       0       0       0
   918 ;;      Locals:         0       0       0       0       0       0       0       0       0
   919 ;;      Temps:          0      13       0       0       0       0       0       0       0
   920 ;;      Totals:         0      13       0       0       0       0       0       0       0
   921 ;;Total ram usage:       13 bytes
   922 ;; Hardware stack levels used: 1
   923 ;; Hardware stack levels required when called: 13
   924 ;; This function calls:
   925 ;;		_printf
   926 ;; This function is called by:
   927 ;;		Interrupt level 1
   928 ;; This function uses a non-reentrant model
   929 ;;
   930                           
   931                           	psect	intcodelo
   932  000018                     __pintcodelo:
   933                           	callstack 0
   934  000018                     _INT_ISR_LOW:
   935                           	callstack 15
   936                           
   937                           ;incstack = 0
   938  000018  804C               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
   939  00001A  CFD8 F07F          	movff	status,??_INT_ISR_LOW+2
   940  00001E  CFE8 F080          	movff	wreg,??_INT_ISR_LOW+3
   941  000022  CFE0 F081          	movff	bsr,??_INT_ISR_LOW+4
   942  000026  CFE1 F082          	movff	fsr1l,??_INT_ISR_LOW+5
   943  00002A  CFE2 F083          	movff	fsr1h,??_INT_ISR_LOW+6
   944  00002E  CFD9 F084          	movff	fsr2l,??_INT_ISR_LOW+7
   945  000032  CFDA F085          	movff	fsr2h,??_INT_ISR_LOW+8
   946  000036  CFF6 F086          	movff	tblptrl,??_INT_ISR_LOW+9
   947  00003A  CFF7 F087          	movff	tblptrh,??_INT_ISR_LOW+10
   948  00003E  CFF8 F088          	movff	tblptru,??_INT_ISR_LOW+11
   949  000042  CFF5 F089          	movff	tablat,??_INT_ISR_LOW+12
   950  000046                     
   951                           ;main.c: 108:     if(INTCON3bits.INT1IE == 1 && INTCON3bits.INT1IF == 1)
   952  000046  A6F0               	btfss	240,3,c	;volatile
   953  000048  EF28  F000         	goto	i1u78_21
   954  00004C  EF2A  F000         	goto	i1u78_20
   955  000050                     i1u78_21:
   956  000050  EF4C  F000         	goto	i1l75
   957  000054                     i1u78_20:
   958  000054  A0F0               	btfss	240,0,c	;volatile
   959  000056  EF2F  F000         	goto	i1u79_21
   960  00005A  EF31  F000         	goto	i1u79_20
   961  00005E                     i1u79_21:
   962  00005E  EF4C  F000         	goto	i1l75
   963  000062                     i1u79_20:
   964  000062                     
   965                           ;main.c: 109:     {;main.c: 110:          printf("INICIO INTERRUPCION INT1\r\n");
   966  000062  0E01               	movlw	low STR_2
   967  000064  0100               	movlb	0	; () banked
   968  000066  6F79               	movwf	printf@fmt& (0+255),b
   969  000068  0E08               	movlw	high STR_2
   970  00006A  6F7A               	movwf	(printf@fmt+1)& (0+255),b
   971  00006C  EC00  F007         	call	_printf	;wreg free
   972  000070                     
   973                           ;main.c: 111:          _delay((unsigned long)((4000)*(20000000/4000.0)));
   974  000070  0E66               	movlw	102
   975  000072  0100               	movlb	0	; () banked
   976  000074  6F7E               	movwf	(??_INT_ISR_LOW+1)& (0+255),b
   977  000076  0E76               	movlw	118
   978  000078  6F7D               	movwf	??_INT_ISR_LOW& (0+255),b
   979  00007A  0EC1               	movlw	193
   980  00007C                     i1u80_27:
   981  00007C  2EE8               	decfsz	wreg,f,c
   982  00007E  D7FE               	bra	i1u80_27
   983  000080  2F7D               	decfsz	??_INT_ISR_LOW& (0+255),f,b
   984  000082  D7FC               	bra	i1u80_27
   985  000084  2F7E               	decfsz	(??_INT_ISR_LOW+1)& (0+255),f,b
   986  000086  D7FA               	bra	i1u80_27
   987  000088                     
   988                           ;main.c: 112:          printf("FIN INTERRUPCION INT1\r\n");
   989  000088  0E37               	movlw	low STR_3
   990  00008A  0100               	movlb	0	; () banked
   991  00008C  6F79               	movwf	printf@fmt& (0+255),b
   992  00008E  0E08               	movlw	high STR_3
   993  000090  6F7A               	movwf	(printf@fmt+1)& (0+255),b
   994  000092  EC00  F007         	call	_printf	;wreg free
   995  000096                     
   996                           ;main.c: 113:          INTCON3bits.INT1IF = 0;
   997  000096  90F0               	bcf	240,0,c	;volatile
   998  000098                     i1l75:
   999  000098  C089  FFF5         	movff	??_INT_ISR_LOW+12,tablat
  1000  00009C  C088  FFF8         	movff	??_INT_ISR_LOW+11,tblptru
  1001  0000A0  C087  FFF7         	movff	??_INT_ISR_LOW+10,tblptrh
  1002  0000A4  C086  FFF6         	movff	??_INT_ISR_LOW+9,tblptrl
  1003  0000A8  C085  FFDA         	movff	??_INT_ISR_LOW+8,fsr2h
  1004  0000AC  C084  FFD9         	movff	??_INT_ISR_LOW+7,fsr2l
  1005  0000B0  C083  FFE2         	movff	??_INT_ISR_LOW+6,fsr1h
  1006  0000B4  C082  FFE1         	movff	??_INT_ISR_LOW+5,fsr1l
  1007  0000B8  C081  FFE0         	movff	??_INT_ISR_LOW+4,bsr
  1008  0000BC  C080  FFE8         	movff	??_INT_ISR_LOW+3,wreg
  1009  0000C0  C07F  FFD8         	movff	??_INT_ISR_LOW+2,status
  1010  0000C4  904C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1011  0000C6  0010               	retfie	
  1012  0000C8                     __end_of_INT_ISR_LOW:
  1013                           	callstack 0
  1014                           
  1015 ;; *************** function _printf *****************
  1016 ;; Defined at:
  1017 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\printf.c"
  1018 ;; Parameters:    Size  Location     Type
  1019 ;;  fmt             2   25[BANK0 ] PTR const unsigned char 
  1020 ;;		 -> STR_3(24), STR_2(27), STR_1(27), 
  1021 ;; Auto vars:     Size  Location     Type
  1022 ;;  ap              2   27[BANK0 ] PTR void [1]
  1023 ;;		 -> ?_printf(2), 
  1024 ;;  ret             2    0        int 
  1025 ;; Return value:  Size  Location     Type
  1026 ;;                  2   25[BANK0 ] int 
  1027 ;; Registers used:
  1028 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1029 ;; Tracked objects:
  1030 ;;		On entry : 0/0
  1031 ;;		On exit  : 0/0
  1032 ;;		Unchanged: 0/0
  1033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1034 ;;      Params:         0       2       0       0       0       0       0       0       0
  1035 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1036 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1037 ;;      Totals:         0       4       0       0       0       0       0       0       0
  1038 ;;Total ram usage:        4 bytes
  1039 ;; Hardware stack levels used: 1
  1040 ;; Hardware stack levels required when called: 12
  1041 ;; This function calls:
  1042 ;;		_vfprintf
  1043 ;; This function is called by:
  1044 ;;		_INT_ISR_LOW
  1045 ;; This function uses a non-reentrant model
  1046 ;;
  1047                           
  1048                           	psect	text5
  1049  000E00                     __ptext5:
  1050                           	callstack 0
  1051  000E00                     _printf:
  1052                           	callstack 15
  1053  000E00  0E7B               	movlw	low (?_printf+2)
  1054  000E02  0100               	movlb	0	; () banked
  1055  000E04  6F7B               	movwf	printf@ap& (0+255),b
  1056  000E06  0E00               	movlw	high (?_printf+2)
  1057  000E08  6F7C               	movwf	(printf@ap+1)& (0+255),b
  1058  000E0A                     
  1059                           ; BSR set to: 0
  1060  000E0A  0E00               	movlw	0
  1061  000E0C  6F71               	movwf	vfprintf@fp& (0+255),b
  1062  000E0E  0E00               	movlw	0
  1063  000E10  6F72               	movwf	(vfprintf@fp+1)& (0+255),b
  1064  000E12  C079  F073         	movff	printf@fmt,vfprintf@fmt
  1065  000E16  C07A  F074         	movff	printf@fmt+1,vfprintf@fmt+1
  1066  000E1A  0E7B               	movlw	low printf@ap
  1067  000E1C  6F75               	movwf	vfprintf@ap& (0+255),b
  1068  000E1E  0E00               	movlw	high printf@ap
  1069  000E20  6F76               	movwf	(vfprintf@ap+1)& (0+255),b
  1070  000E22  EC9E  F006         	call	_vfprintf	;wreg free
  1071  000E26  0012               	return		;funcret
  1072  000E28                     __end_of_printf:
  1073                           	callstack 0
  1074                           
  1075 ;; *************** function _vfprintf *****************
  1076 ;; Defined at:
  1077 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  1078 ;; Parameters:    Size  Location     Type
  1079 ;;  fp              2   17[BANK0 ] PTR struct _IO_FILE
  1080 ;;		 -> NULL(0), 
  1081 ;;  fmt             2   19[BANK0 ] PTR const unsigned char 
  1082 ;;		 -> STR_3(24), STR_2(27), STR_1(27), 
  1083 ;;  ap              2   21[BANK0 ] PTR PTR void 
  1084 ;;		 -> printf@ap(2), 
  1085 ;; Auto vars:     Size  Location     Type
  1086 ;;  cfmt            2   23[BANK0 ] PTR unsigned char 
  1087 ;;		 -> STR_3(24), STR_2(27), STR_1(27), 
  1088 ;; Return value:  Size  Location     Type
  1089 ;;                  2   17[BANK0 ] int 
  1090 ;; Registers used:
  1091 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1092 ;; Tracked objects:
  1093 ;;		On entry : 0/0
  1094 ;;		On exit  : 0/0
  1095 ;;		Unchanged: 0/0
  1096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1097 ;;      Params:         0       6       0       0       0       0       0       0       0
  1098 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1099 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1100 ;;      Totals:         0       8       0       0       0       0       0       0       0
  1101 ;;Total ram usage:        8 bytes
  1102 ;; Hardware stack levels used: 1
  1103 ;; Hardware stack levels required when called: 11
  1104 ;; This function calls:
  1105 ;;		_vfpfcnvrt
  1106 ;; This function is called by:
  1107 ;;		_printf
  1108 ;; This function uses a non-reentrant model
  1109 ;;
  1110                           
  1111                           	psect	text6
  1112  000D3C                     __ptext6:
  1113                           	callstack 0
  1114  000D3C                     _vfprintf:
  1115                           	callstack 15
  1116  000D3C                     
  1117                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  1118  000D3C  C073  F077         	movff	vfprintf@fmt,vfprintf@cfmt
  1119  000D40  C074  F078         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1120  000D44                     
  1121                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  1122  000D44  0E00               	movlw	0
  1123  000D46  0100               	movlb	0	; () banked
  1124  000D48  6FA2               	movwf	(_nout+1)& (0+255),b
  1125  000D4A  0E00               	movlw	0
  1126  000D4C  6FA1               	movwf	_nout& (0+255),b
  1127                           
  1128                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1129  000D4E  EFBC  F006         	goto	i1l1423
  1130  000D52                     i1l1421:
  1131                           
  1132                           ; BSR set to: 0
  1133                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1134  000D52  C071  F06B         	movff	vfprintf@fp,vfpfcnvrt@fp
  1135  000D56  C072  F06C         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1136  000D5A  0E77               	movlw	low vfprintf@cfmt
  1137  000D5C  6F6D               	movwf	vfpfcnvrt@fmt& (0+255),b
  1138  000D5E  0E00               	movlw	high vfprintf@cfmt
  1139  000D60  6F6E               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  1140  000D62  C075  F06F         	movff	vfprintf@ap,vfpfcnvrt@ap
  1141  000D66  C076  F070         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1142  000D6A  ECAF  F004         	call	_vfpfcnvrt	;wreg free
  1143  000D6E  0100               	movlb	0	; () banked
  1144  000D70  516B               	movf	?_vfpfcnvrt& (0+255),w,b
  1145  000D72  27A1               	addwf	_nout& (0+255),f,b
  1146  000D74  516C               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  1147  000D76  23A2               	addwfc	(_nout+1)& (0+255),f,b
  1148  000D78                     i1l1423:
  1149                           
  1150                           ; BSR set to: 0
  1151                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1152  000D78  C077  FFF6         	movff	vfprintf@cfmt,tblptrl
  1153  000D7C  C078  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1154  000D80                     	if	0	;tblptru may be non-zero
  1155  000D80                     	endif
  1156  000D80                     	if	0	;tblptru may be non-zero
  1157  000D80                     	endif
  1158  000D80  0008               	tblrd		*
  1159  000D82  50F5               	movf	tablat,w,c
  1160  000D84  0900               	iorlw	0
  1161  000D86  A4D8               	btfss	status,2,c
  1162  000D88  EFC8  F006         	goto	i1u73_21
  1163  000D8C  EFCA  F006         	goto	i1u73_20
  1164  000D90                     i1u73_21:
  1165  000D90  EFA9  F006         	goto	i1l1421
  1166  000D94                     i1u73_20:
  1167  000D94                     
  1168                           ; BSR set to: 0
  1169                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  1170  000D94  C0A1  F071         	movff	_nout,?_vfprintf
  1171  000D98  C0A2  F072         	movff	_nout+1,?_vfprintf+1
  1172  000D9C                     
  1173                           ; BSR set to: 0
  1174  000D9C  0012               	return		;funcret
  1175  000D9E                     __end_of_vfprintf:
  1176                           	callstack 0
  1177                           
  1178 ;; *************** function _vfpfcnvrt *****************
  1179 ;; Defined at:
  1180 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  1181 ;; Parameters:    Size  Location     Type
  1182 ;;  fp              2   11[BANK0 ] PTR struct _IO_FILE
  1183 ;;		 -> NULL(0), 
  1184 ;;  fmt             2   13[BANK0 ] PTR PTR unsigned char 
  1185 ;;		 -> vfprintf@cfmt(2), 
  1186 ;;  ap              2   15[BANK0 ] PTR PTR void 
  1187 ;;		 -> printf@ap(2), 
  1188 ;; Auto vars:     Size  Location     Type
  1189 ;;  llu             8    0        unsigned long long 
  1190 ;;  ll              8    0        long long 
  1191 ;;  f               4    0        long long 
  1192 ;;  vp              3    0        PTR void 
  1193 ;;  ct              3    0        unsigned char [3]
  1194 ;;  cp              3    0        PTR unsigned char 
  1195 ;;  i               2    0        int 
  1196 ;;  done            2    0        int 
  1197 ;;  c               1    0        unsigned char 
  1198 ;; Return value:  Size  Location     Type
  1199 ;;                  2   11[BANK0 ] int 
  1200 ;; Registers used:
  1201 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1202 ;; Tracked objects:
  1203 ;;		On entry : 0/0
  1204 ;;		On exit  : 0/0
  1205 ;;		Unchanged: 0/0
  1206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1207 ;;      Params:         0       6       0       0       0       0       0       0       0
  1208 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1209 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1210 ;;      Totals:         0       6       0       0       0       0       0       0       0
  1211 ;;Total ram usage:        6 bytes
  1212 ;; Hardware stack levels used: 1
  1213 ;; Hardware stack levels required when called: 10
  1214 ;; This function calls:
  1215 ;;		_fputc
  1216 ;; This function is called by:
  1217 ;;		_vfprintf
  1218 ;; This function uses a non-reentrant model
  1219 ;;
  1220                           
  1221                           	psect	text7
  1222  00095E                     __ptext7:
  1223                           	callstack 0
  1224  00095E                     _vfpfcnvrt:
  1225                           	callstack 15
  1226  00095E                     
  1227                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.36\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          6\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  1228  00095E  C06D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1229  000962  C06E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1230  000966  CFDE FFF6          	movff	postinc2,tblptrl
  1231  00096A  CFDD FFF7          	movff	postdec2,tblptrh
  1232  00096E                     	if	0	;tblptru may be non-zero
  1233  00096E                     	endif
  1234  00096E                     	if	0	;tblptru may be non-zero
  1235  00096E                     	endif
  1236  00096E  0008               	tblrd		*
  1237  000970  50F5               	movf	tablat,w,c
  1238  000972  0A25               	xorlw	37
  1239  000974  A4D8               	btfss	status,2,c
  1240  000976  EFBF  F004         	goto	i1u69_21
  1241  00097A  EFC1  F004         	goto	i1u69_20
  1242  00097E                     i1u69_21:
  1243  00097E  EF0B  F005         	goto	i1l1377
  1244  000982                     i1u69_20:
  1245  000982                     
  1246                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  1247  000982  C06D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1248  000986  C06E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1249  00098A  2ADE               	incf	postinc2,f,c
  1250  00098C  0E00               	movlw	0
  1251  00098E  22DD               	addwfc	postdec2,f,c
  1252  000990                     
  1253                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  1254  000990  0E00               	movlw	0
  1255  000992  6E22               	movwf	(_width+1)^0,c
  1256  000994  0E00               	movlw	0
  1257  000996  6E21               	movwf	_width^0,c
  1258  000998  C021  F025         	movff	_width,_flags
  1259  00099C  C022  F026         	movff	_width+1,_flags+1
  1260  0009A0                     
  1261                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  1262  0009A0  6823               	setf	_prec^0,c
  1263  0009A2  6824               	setf	(_prec+1)^0,c
  1264  0009A4                     
  1265                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  1266  0009A4  C06D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1267  0009A8  C06E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1268  0009AC  CFDE FFF6          	movff	postinc2,tblptrl
  1269  0009B0  CFDD FFF7          	movff	postdec2,tblptrh
  1270  0009B4                     	if	0	;tblptru may be non-zero
  1271  0009B4                     	endif
  1272  0009B4                     	if	0	;tblptru may be non-zero
  1273  0009B4                     	endif
  1274  0009B4  0008               	tblrd		*
  1275  0009B6  50F5               	movf	tablat,w,c
  1276  0009B8  0A25               	xorlw	37
  1277  0009BA  A4D8               	btfss	status,2,c
  1278  0009BC  EFE2  F004         	goto	i1u70_21
  1279  0009C0  EFE4  F004         	goto	i1u70_20
  1280  0009C4                     i1u70_21:
  1281  0009C4  EFFD  F004         	goto	i1l1371
  1282  0009C8                     i1u70_20:
  1283  0009C8                     
  1284                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  1285  0009C8  C06D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1286  0009CC  C06E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1287  0009D0  2ADE               	incf	postinc2,f,c
  1288  0009D2  0E00               	movlw	0
  1289  0009D4  22DD               	addwfc	postdec2,f,c
  1290  0009D6                     
  1291                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  1292  0009D6  0E00               	movlw	0
  1293  0009D8  0100               	movlb	0	; () banked
  1294  0009DA  6F63               	movwf	(fputc@c+1)& (0+255),b
  1295  0009DC  0E25               	movlw	37
  1296  0009DE  6F62               	movwf	fputc@c& (0+255),b
  1297  0009E0  C06B  F064         	movff	vfpfcnvrt@fp,fputc@fp
  1298  0009E4  C06C  F065         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1299  0009E8  EC9D  F005         	call	_fputc	;wreg free
  1300  0009EC                     i1l1367:
  1301                           
  1302                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  1303  0009EC  0E00               	movlw	0
  1304  0009EE  0100               	movlb	0	; () banked
  1305  0009F0  6F6C               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  1306  0009F2  0E01               	movlw	1
  1307  0009F4  6F6B               	movwf	?_vfpfcnvrt& (0+255),b
  1308  0009F6  EF27  F005         	goto	i1l797
  1309  0009FA                     i1l1371:
  1310                           
  1311                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  1312  0009FA  C06D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1313  0009FE  C06E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1314  000A02  2ADE               	incf	postinc2,f,c
  1315  000A04  0E00               	movlw	0
  1316  000A06  22DD               	addwfc	postdec2,f,c
  1317  000A08                     
  1318                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  1319  000A08  0E00               	movlw	0
  1320  000A0A  0100               	movlb	0	; () banked
  1321  000A0C  6F6C               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  1322  000A0E  0E00               	movlw	0
  1323  000A10  6F6B               	movwf	?_vfpfcnvrt& (0+255),b
  1324  000A12  EF27  F005         	goto	i1l797
  1325  000A16                     i1l1377:
  1326                           
  1327                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  1328  000A16  C06D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1329  000A1A  C06E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1330  000A1E  CFDE FFF6          	movff	postinc2,tblptrl
  1331  000A22  CFDD FFF7          	movff	postdec2,tblptrh
  1332  000A26                     	if	0	;tblptru may be non-zero
  1333  000A26                     	endif
  1334  000A26                     	if	0	;tblptru may be non-zero
  1335  000A26                     	endif
  1336  000A26  0008               	tblrd		*
  1337  000A28  50F5               	movf	tablat,w,c
  1338  000A2A  0100               	movlb	0	; () banked
  1339  000A2C  6F62               	movwf	fputc@c& (0+255),b
  1340  000A2E  6B63               	clrf	(fputc@c+1)& (0+255),b
  1341  000A30  C06B  F064         	movff	vfpfcnvrt@fp,fputc@fp
  1342  000A34  C06C  F065         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1343  000A38  EC9D  F005         	call	_fputc	;wreg free
  1344  000A3C                     
  1345                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  1346  000A3C  C06D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1347  000A40  C06E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1348  000A44  2ADE               	incf	postinc2,f,c
  1349  000A46  0E00               	movlw	0
  1350  000A48  22DD               	addwfc	postdec2,f,c
  1351  000A4A  EFF6  F004         	goto	i1l1367
  1352  000A4E                     i1l797:
  1353                           
  1354                           ; BSR set to: 0
  1355  000A4E  0012               	return		;funcret
  1356  000A50                     __end_of_vfpfcnvrt:
  1357                           	callstack 0
  1358                           
  1359 ;; *************** function _fputc *****************
  1360 ;; Defined at:
  1361 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputc.c"
  1362 ;; Parameters:    Size  Location     Type
  1363 ;;  c               2    2[BANK0 ] int 
  1364 ;;  fp              2    4[BANK0 ] PTR struct _IO_FILE
  1365 ;;		 -> NULL(0), 
  1366 ;; Auto vars:     Size  Location     Type
  1367 ;;		None
  1368 ;; Return value:  Size  Location     Type
  1369 ;;                  2    2[BANK0 ] int 
  1370 ;; Registers used:
  1371 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1372 ;; Tracked objects:
  1373 ;;		On entry : 0/0
  1374 ;;		On exit  : 0/0
  1375 ;;		Unchanged: 0/0
  1376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1377 ;;      Params:         0       4       0       0       0       0       0       0       0
  1378 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1379 ;;      Temps:          0       5       0       0       0       0       0       0       0
  1380 ;;      Totals:         0       9       0       0       0       0       0       0       0
  1381 ;;Total ram usage:        9 bytes
  1382 ;; Hardware stack levels used: 1
  1383 ;; Hardware stack levels required when called: 9
  1384 ;; This function calls:
  1385 ;;		_putch
  1386 ;; This function is called by:
  1387 ;;		_vfpfcnvrt
  1388 ;; This function uses a non-reentrant model
  1389 ;;
  1390                           
  1391                           	psect	text8
  1392  000B3A                     __ptext8:
  1393                           	callstack 0
  1394  000B3A                     _fputc:
  1395                           	callstack 15
  1396  000B3A  0100               	movlb	0	; () banked
  1397  000B3C  5164               	movf	fputc@fp& (0+255),w,b
  1398  000B3E  1165               	iorwf	(fputc@fp+1)& (0+255),w,b
  1399  000B40  B4D8               	btfsc	status,2,c
  1400  000B42  EFA5  F005         	goto	i1u61_21
  1401  000B46  EFA7  F005         	goto	i1u61_20
  1402  000B4A                     i1u61_21:
  1403  000B4A  EFB0  F005         	goto	i1l1329
  1404  000B4E                     i1u61_20:
  1405  000B4E                     
  1406                           ; BSR set to: 0
  1407  000B4E  5164               	movf	fputc@fp& (0+255),w,b
  1408  000B50  1165               	iorwf	(fputc@fp+1)& (0+255),w,b
  1409  000B52  A4D8               	btfss	status,2,c
  1410  000B54  EFAE  F005         	goto	i1u62_21
  1411  000B58  EFB0  F005         	goto	i1u62_20
  1412  000B5C                     i1u62_21:
  1413  000B5C  EFB5  F005         	goto	i1l1331
  1414  000B60                     i1u62_20:
  1415  000B60                     i1l1329:
  1416                           
  1417                           ; BSR set to: 0
  1418  000B60  5162               	movf	fputc@c& (0+255),w,b
  1419  000B62  EC71  F007         	call	_putch
  1420  000B66  EFE8  F005         	goto	i1l815
  1421  000B6A                     i1l1331:
  1422                           
  1423                           ; BSR set to: 0
  1424  000B6A  EE20 F009          	lfsr	2,9
  1425  000B6E  5164               	movf	fputc@fp& (0+255),w,b
  1426  000B70  26D9               	addwf	fsr2l,f,c
  1427  000B72  5165               	movf	(fputc@fp+1)& (0+255),w,b
  1428  000B74  22DA               	addwfc	fsr2h,f,c
  1429  000B76  50DE               	movf	postinc2,w,c
  1430  000B78  10DE               	iorwf	postinc2,w,c
  1431  000B7A  B4D8               	btfsc	status,2,c
  1432  000B7C  EFC2  F005         	goto	i1u63_21
  1433  000B80  EFC4  F005         	goto	i1u63_20
  1434  000B84                     i1u63_21:
  1435  000B84  EFDF  F005         	goto	i1l1335
  1436  000B88                     i1u63_20:
  1437  000B88                     
  1438                           ; BSR set to: 0
  1439  000B88  EE20 F009          	lfsr	2,9
  1440  000B8C  5164               	movf	fputc@fp& (0+255),w,b
  1441  000B8E  26D9               	addwf	fsr2l,f,c
  1442  000B90  5165               	movf	(fputc@fp+1)& (0+255),w,b
  1443  000B92  22DA               	addwfc	fsr2h,f,c
  1444  000B94  EE10 F003          	lfsr	1,3
  1445  000B98  5164               	movf	fputc@fp& (0+255),w,b
  1446  000B9A  26E1               	addwf	fsr1l,f,c
  1447  000B9C  5165               	movf	(fputc@fp+1)& (0+255),w,b
  1448  000B9E  22E2               	addwfc	fsr1h,f,c
  1449  000BA0  50DE               	movf	postinc2,w,c
  1450  000BA2  5CE6               	subwf	postinc1,w,c
  1451  000BA4  50E6               	movf	postinc1,w,c
  1452  000BA6  0A80               	xorlw	128
  1453  000BA8  6F6A               	movwf	(??_fputc+4)& (0+255),b
  1454  000BAA  50DE               	movf	postinc2,w,c
  1455  000BAC  0A80               	xorlw	128
  1456  000BAE  596A               	subwfb	(??_fputc+4)& (0+255),w,b
  1457  000BB0  B0D8               	btfsc	status,0,c
  1458  000BB2  EFDD  F005         	goto	i1u64_21
  1459  000BB6  EFDF  F005         	goto	i1u64_20
  1460  000BBA                     i1u64_21:
  1461  000BBA  EFE8  F005         	goto	i1l815
  1462  000BBE                     i1u64_20:
  1463  000BBE                     i1l1335:
  1464                           
  1465                           ; BSR set to: 0
  1466  000BBE  EE20 F003          	lfsr	2,3
  1467  000BC2  5164               	movf	fputc@fp& (0+255),w,b
  1468  000BC4  26D9               	addwf	fsr2l,f,c
  1469  000BC6  5165               	movf	(fputc@fp+1)& (0+255),w,b
  1470  000BC8  22DA               	addwfc	fsr2h,f,c
  1471  000BCA  2ADE               	incf	postinc2,f,c
  1472  000BCC  0E00               	movlw	0
  1473  000BCE  22DD               	addwfc	postdec2,f,c
  1474  000BD0                     i1l815:
  1475  000BD0  0012               	return		;funcret
  1476  000BD2                     __end_of_fputc:
  1477                           	callstack 0
  1478                           
  1479 ;; *************** function _putch *****************
  1480 ;; Defined at:
  1481 ;;		line 77 in file "./UART.h"
  1482 ;; Parameters:    Size  Location     Type
  1483 ;;  dato            1    wreg     unsigned char 
  1484 ;; Auto vars:     Size  Location     Type
  1485 ;;  dato            1    1[BANK0 ] unsigned char 
  1486 ;; Return value:  Size  Location     Type
  1487 ;;                  1    wreg      void 
  1488 ;; Registers used:
  1489 ;;		wreg, status,2, cstack
  1490 ;; Tracked objects:
  1491 ;;		On entry : 0/0
  1492 ;;		On exit  : 0/0
  1493 ;;		Unchanged: 0/0
  1494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1495 ;;      Params:         0       0       0       0       0       0       0       0       0
  1496 ;;      Locals:         0       1       0       0       0       0       0       0       0
  1497 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1498 ;;      Totals:         0       1       0       0       0       0       0       0       0
  1499 ;;Total ram usage:        1 bytes
  1500 ;; Hardware stack levels used: 1
  1501 ;; Hardware stack levels required when called: 8
  1502 ;; This function calls:
  1503 ;;		_UART_write
  1504 ;; This function is called by:
  1505 ;;		_fputc
  1506 ;; This function uses a non-reentrant model
  1507 ;;
  1508                           
  1509                           	psect	text9
  1510  000EE2                     __ptext9:
  1511                           	callstack 0
  1512  000EE2                     _putch:
  1513                           	callstack 15
  1514                           
  1515                           ;incstack = 0
  1516                           ;putch@dato stored from wreg
  1517  000EE2  0100               	movlb	0	; () banked
  1518  000EE4  6F61               	movwf	putch@dato& (0+255),b
  1519  000EE6                     
  1520                           ;./UART.h: 77: void putch(char dato);./UART.h: 78: {;./UART.h: 79:     UART_write(dato);
  1521  000EE6  0100               	movlb	0	; () banked
  1522  000EE8  5161               	movf	putch@dato& (0+255),w,b
  1523  000EEA  EC5A  F007         	call	_UART_write
  1524  000EEE  0012               	return		;funcret
  1525  000EF0                     __end_of_putch:
  1526                           	callstack 0
  1527                           
  1528 ;; *************** function _UART_write *****************
  1529 ;; Defined at:
  1530 ;;		line 63 in file "./UART.h"
  1531 ;; Parameters:    Size  Location     Type
  1532 ;;  dato            1    wreg     unsigned char 
  1533 ;; Auto vars:     Size  Location     Type
  1534 ;;  dato            1    0[BANK0 ] unsigned char 
  1535 ;; Return value:  Size  Location     Type
  1536 ;;                  1    wreg      void 
  1537 ;; Registers used:
  1538 ;;		wreg
  1539 ;; Tracked objects:
  1540 ;;		On entry : 0/0
  1541 ;;		On exit  : 0/0
  1542 ;;		Unchanged: 0/0
  1543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1544 ;;      Params:         0       0       0       0       0       0       0       0       0
  1545 ;;      Locals:         0       1       0       0       0       0       0       0       0
  1546 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1547 ;;      Totals:         0       1       0       0       0       0       0       0       0
  1548 ;;Total ram usage:        1 bytes
  1549 ;; Hardware stack levels used: 1
  1550 ;; Hardware stack levels required when called: 7
  1551 ;; This function calls:
  1552 ;;		Nothing
  1553 ;; This function is called by:
  1554 ;;		_putch
  1555 ;;		_UART_printf
  1556 ;; This function uses a non-reentrant model
  1557 ;;
  1558                           
  1559                           	psect	text10
  1560  000EB4                     __ptext10:
  1561                           	callstack 0
  1562  000EB4                     _UART_write:
  1563                           	callstack 15
  1564                           
  1565                           ;incstack = 0
  1566                           ;UART_write@dato stored from wreg
  1567  000EB4  0100               	movlb	0	; () banked
  1568  000EB6  6F60               	movwf	UART_write@dato& (0+255),b
  1569  000EB8                     
  1570                           ;./UART.h: 63: void UART_write(char dato);./UART.h: 64: {;./UART.h: 65:     TXREG = dato
      +                          ;
  1571  000EB8  C060  FFAD         	movff	UART_write@dato,4013	;volatile
  1572  000EBC                     i1l48:
  1573  000EBC  A2AC               	btfss	172,1,c	;volatile
  1574  000EBE  EF63  F007         	goto	i1u59_21
  1575  000EC2  EF65  F007         	goto	i1u59_20
  1576  000EC6                     i1u59_21:
  1577  000EC6  EF5E  F007         	goto	i1l48
  1578  000ECA                     i1u59_20:
  1579  000ECA  0012               	return		;funcret
  1580  000ECC                     __end_of_UART_write:
  1581                           	callstack 0
  1582                           
  1583 ;; *************** function _INT_isr *****************
  1584 ;; Defined at:
  1585 ;;		line 97 in file "main.c"
  1586 ;; Parameters:    Size  Location     Type
  1587 ;;		None
  1588 ;; Auto vars:     Size  Location     Type
  1589 ;;		None
  1590 ;; Return value:  Size  Location     Type
  1591 ;;                  1    wreg      void 
  1592 ;; Registers used:
  1593 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1594 ;; Tracked objects:
  1595 ;;		On entry : 0/0
  1596 ;;		On exit  : 0/0
  1597 ;;		Unchanged: 0/0
  1598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1599 ;;      Params:         0       0       0       0       0       0       0       0       0
  1600 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1601 ;;      Temps:          8       0       0       0       0       0       0       0       0
  1602 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1603 ;;Total ram usage:        8 bytes
  1604 ;; Hardware stack levels used: 1
  1605 ;; Hardware stack levels required when called: 6
  1606 ;; This function calls:
  1607 ;;		i2_printf
  1608 ;; This function is called by:
  1609 ;;		Interrupt level 2
  1610 ;; This function uses a non-reentrant model
  1611 ;;
  1612                           
  1613                           	psect	intcode
  1614  000008                     __pintcode:
  1615                           	callstack 0
  1616  000008                     _INT_isr:
  1617                           	callstack 15
  1618                           
  1619                           ;incstack = 0
  1620  000008  824C               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1621  00000A  ED34  F006         	call	int_func,f	;refresh shadow registers
  1622                           
  1623                           	psect	intcode_body
  1624  000C68                     __pintcode_body:
  1625                           	callstack 15
  1626  000C68                     int_func:
  1627                           	callstack 15
  1628  000C68  0006               	pop		; remove dummy address from shadow register refresh
  1629  000C6A  CFE1 F044          	movff	fsr1l,??_INT_isr
  1630  000C6E  CFE2 F045          	movff	fsr1h,??_INT_isr+1
  1631  000C72  CFD9 F046          	movff	fsr2l,??_INT_isr+2
  1632  000C76  CFDA F047          	movff	fsr2h,??_INT_isr+3
  1633  000C7A  CFF6 F048          	movff	tblptrl,??_INT_isr+4
  1634  000C7E  CFF7 F049          	movff	tblptrh,??_INT_isr+5
  1635  000C82  CFF8 F04A          	movff	tblptru,??_INT_isr+6
  1636  000C86  CFF5 F04B          	movff	tablat,??_INT_isr+7
  1637  000C8A                     
  1638                           ;main.c: 99:     if(INTCONbits.INT0IE == 1 && INTCONbits.INT0IF == 1)
  1639  000C8A  A8F2               	btfss	242,4,c	;volatile
  1640  000C8C  EF4A  F006         	goto	i2u76_41
  1641  000C90  EF4C  F006         	goto	i2u76_40
  1642  000C94                     i2u76_41:
  1643  000C94  EF5A  F006         	goto	i2l69
  1644  000C98                     i2u76_40:
  1645  000C98  A2F2               	btfss	242,1,c	;volatile
  1646  000C9A  EF51  F006         	goto	i2u77_41
  1647  000C9E  EF53  F006         	goto	i2u77_40
  1648  000CA2                     i2u77_41:
  1649  000CA2  EF5A  F006         	goto	i2l69
  1650  000CA6                     i2u77_40:
  1651  000CA6                     
  1652                           ;main.c: 100:     {;main.c: 101:         printf("INICIO INTERRUPCION INT0\n\r");
  1653  000CA6  0E1C               	movlw	low STR_1
  1654  000CA8  6E40               	movwf	i2printf@fmt^0,c
  1655  000CAA  0E08               	movlw	high STR_1
  1656  000CAC  6E41               	movwf	(i2printf@fmt+1)^0,c
  1657  000CAE  EC27  F007         	call	i2_printf	;wreg free
  1658  000CB2                     
  1659                           ;main.c: 102:         INTCONbits.INT0IF = 0;
  1660  000CB2  92F2               	bcf	242,1,c	;volatile
  1661  000CB4                     i2l69:
  1662  000CB4  C04B  FFF5         	movff	??_INT_isr+7,tablat
  1663  000CB8  C04A  FFF8         	movff	??_INT_isr+6,tblptru
  1664  000CBC  C049  FFF7         	movff	??_INT_isr+5,tblptrh
  1665  000CC0  C048  FFF6         	movff	??_INT_isr+4,tblptrl
  1666  000CC4  C047  FFDA         	movff	??_INT_isr+3,fsr2h
  1667  000CC8  C046  FFD9         	movff	??_INT_isr+2,fsr2l
  1668  000CCC  C045  FFE2         	movff	??_INT_isr+1,fsr1h
  1669  000CD0  C044  FFE1         	movff	??_INT_isr,fsr1l
  1670  000CD4  924C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1671  000CD6  0011               	retfie		f
  1672  000CD8                     __end_of_INT_isr:
  1673                           	callstack 0
  1674                           
  1675 ;; *************** function i2_printf *****************
  1676 ;; Defined at:
  1677 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\printf.c"
  1678 ;; Parameters:    Size  Location     Type
  1679 ;;  fmt             2   25[COMRAM] PTR const unsigned char 
  1680 ;;		 -> STR_3(24), STR_2(27), STR_1(27), 
  1681 ;; Auto vars:     Size  Location     Type
  1682 ;;  ap              2   27[COMRAM] PTR void [1]
  1683 ;;		 -> ?i2_printf(2), ?_printf(2), 
  1684 ;;  ret             2    0        int 
  1685 ;; Return value:  Size  Location     Type
  1686 ;;                  2   25[COMRAM] int 
  1687 ;; Registers used:
  1688 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1689 ;; Tracked objects:
  1690 ;;		On entry : 0/0
  1691 ;;		On exit  : 0/0
  1692 ;;		Unchanged: 0/0
  1693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1694 ;;      Params:         2       0       0       0       0       0       0       0       0
  1695 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1696 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1697 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1698 ;;Total ram usage:        4 bytes
  1699 ;; Hardware stack levels used: 1
  1700 ;; Hardware stack levels required when called: 5
  1701 ;; This function calls:
  1702 ;;		i2_vfprintf
  1703 ;; This function is called by:
  1704 ;;		_INT_isr
  1705 ;; This function uses a non-reentrant model
  1706 ;;
  1707                           
  1708                           	psect	text12
  1709  000E4E                     __ptext12:
  1710                           	callstack 0
  1711  000E4E                     i2_printf:
  1712                           	callstack 15
  1713  000E4E  0E42               	movlw	low (?i2_printf+2)
  1714  000E50  6E42               	movwf	i2printf@ap^0,c
  1715  000E52  0E00               	movlw	high (?i2_printf+2)
  1716  000E54  6E43               	movwf	(i2printf@ap+1)^0,c
  1717  000E56  0E00               	movlw	0
  1718  000E58  6E38               	movwf	i2vfprintf@fp^0,c
  1719  000E5A  0E00               	movlw	0
  1720  000E5C  6E39               	movwf	(i2vfprintf@fp+1)^0,c
  1721  000E5E  C040  F03A         	movff	i2printf@fmt,i2vfprintf@fmt
  1722  000E62  C041  F03B         	movff	i2printf@fmt+1,i2vfprintf@fmt+1
  1723  000E66  0E42               	movlw	low i2printf@ap
  1724  000E68  6E3C               	movwf	i2vfprintf@ap^0,c
  1725  000E6A  0E00               	movlw	high i2printf@ap
  1726  000E6C  6E3D               	movwf	(i2vfprintf@ap+1)^0,c
  1727  000E6E  ECCF  F006         	call	i2_vfprintf	;wreg free
  1728  000E72  0012               	return		;funcret
  1729  000E74                     __end_ofi2_printf:
  1730                           	callstack 0
  1731                           
  1732 ;; *************** function i2_vfprintf *****************
  1733 ;; Defined at:
  1734 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  1735 ;; Parameters:    Size  Location     Type
  1736 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
  1737 ;;		 -> NULL(0), 
  1738 ;;  fmt             2   19[COMRAM] PTR const unsigned char 
  1739 ;;		 -> STR_3(24), STR_2(27), STR_1(27), 
  1740 ;;  ap              2   21[COMRAM] PTR PTR void 
  1741 ;;		 -> i2printf@ap(2), printf@ap(2), 
  1742 ;; Auto vars:     Size  Location     Type
  1743 ;;  cfmt            2   23[COMRAM] PTR unsigned char 
  1744 ;;		 -> STR_3(24), STR_2(27), STR_1(27), 
  1745 ;; Return value:  Size  Location     Type
  1746 ;;                  2   17[COMRAM] int 
  1747 ;; Registers used:
  1748 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1749 ;; Tracked objects:
  1750 ;;		On entry : 0/0
  1751 ;;		On exit  : 0/0
  1752 ;;		Unchanged: 0/0
  1753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1754 ;;      Params:         6       0       0       0       0       0       0       0       0
  1755 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1756 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1757 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1758 ;;Total ram usage:        8 bytes
  1759 ;; Hardware stack levels used: 1
  1760 ;; Hardware stack levels required when called: 4
  1761 ;; This function calls:
  1762 ;;		i2_vfpfcnvrt
  1763 ;; This function is called by:
  1764 ;;		i2_printf
  1765 ;; This function uses a non-reentrant model
  1766 ;;
  1767                           
  1768                           	psect	text13
  1769  000D9E                     __ptext13:
  1770                           	callstack 0
  1771  000D9E                     i2_vfprintf:
  1772                           	callstack 15
  1773  000D9E                     
  1774                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  1775  000D9E  C03A  F03E         	movff	i2vfprintf@fmt,i2vfprintf@cfmt
  1776  000DA2  C03B  F03F         	movff	i2vfprintf@fmt+1,i2vfprintf@cfmt+1
  1777  000DA6                     
  1778                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  1779  000DA6  0E00               	movlw	0
  1780  000DA8  0100               	movlb	0	; () banked
  1781  000DAA  6FA2               	movwf	(_nout+1)& (0+255),b
  1782  000DAC  0E00               	movlw	0
  1783  000DAE  6FA1               	movwf	_nout& (0+255),b
  1784                           
  1785                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1786  000DB0  EFED  F006         	goto	i2l1431
  1787  000DB4                     i2l1429:
  1788                           
  1789                           ; BSR set to: 0
  1790                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1791  000DB4  C038  F032         	movff	i2vfprintf@fp,i2vfpfcnvrt@fp
  1792  000DB8  C039  F033         	movff	i2vfprintf@fp+1,i2vfpfcnvrt@fp+1
  1793  000DBC  0E3E               	movlw	low i2vfprintf@cfmt
  1794  000DBE  6E34               	movwf	i2vfpfcnvrt@fmt^0,c
  1795  000DC0  0E00               	movlw	high i2vfprintf@cfmt
  1796  000DC2  6E35               	movwf	(i2vfpfcnvrt@fmt+1)^0,c
  1797  000DC4  C03C  F036         	movff	i2vfprintf@ap,i2vfpfcnvrt@ap
  1798  000DC8  C03D  F037         	movff	i2vfprintf@ap+1,i2vfpfcnvrt@ap+1
  1799  000DCC  EC28  F005         	call	i2_vfpfcnvrt	;wreg free
  1800  000DD0  5032               	movf	?i2_vfpfcnvrt^0,w,c
  1801  000DD2  0100               	movlb	0	; () banked
  1802  000DD4  27A1               	addwf	_nout& (0+255),f,b
  1803  000DD6  5033               	movf	(?i2_vfpfcnvrt+1)^0,w,c
  1804  000DD8  23A2               	addwfc	(_nout+1)& (0+255),f,b
  1805  000DDA                     i2l1431:
  1806                           
  1807                           ; BSR set to: 0
  1808                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1809  000DDA  C03E  FFF6         	movff	i2vfprintf@cfmt,tblptrl
  1810  000DDE  C03F  FFF7         	movff	i2vfprintf@cfmt+1,tblptrh
  1811  000DE2                     	if	0	;tblptru may be non-zero
  1812  000DE2                     	endif
  1813  000DE2                     	if	0	;tblptru may be non-zero
  1814  000DE2                     	endif
  1815  000DE2  0008               	tblrd		*
  1816  000DE4  50F5               	movf	tablat,w,c
  1817  000DE6  0900               	iorlw	0
  1818  000DE8  A4D8               	btfss	status,2,c
  1819  000DEA  EFF9  F006         	goto	i2u74_41
  1820  000DEE  EFFB  F006         	goto	i2u74_40
  1821  000DF2                     i2u74_41:
  1822  000DF2  EFDA  F006         	goto	i2l1429
  1823  000DF6                     i2u74_40:
  1824  000DF6                     
  1825                           ; BSR set to: 0
  1826                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  1827  000DF6  C0A1  F038         	movff	_nout,?i2_vfprintf
  1828  000DFA  C0A2  F039         	movff	_nout+1,?i2_vfprintf+1
  1829  000DFE                     
  1830                           ; BSR set to: 0
  1831  000DFE  0012               	return		;funcret
  1832  000E00                     __end_ofi2_vfprintf:
  1833                           	callstack 0
  1834                           
  1835 ;; *************** function i2_vfpfcnvrt *****************
  1836 ;; Defined at:
  1837 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  1838 ;; Parameters:    Size  Location     Type
  1839 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  1840 ;;		 -> NULL(0), 
  1841 ;;  fmt             2   13[COMRAM] PTR PTR unsigned char 
  1842 ;;		 -> i2vfprintf@cfmt(2), vfprintf@cfmt(2), 
  1843 ;;  ap              2   15[COMRAM] PTR PTR void 
  1844 ;;		 -> i2printf@ap(2), printf@ap(2), 
  1845 ;; Auto vars:     Size  Location     Type
  1846 ;;  llu             8    0        unsigned long long 
  1847 ;;  ll              8    0        long long 
  1848 ;;  f               4    0        long long 
  1849 ;;  vp              3    0        PTR void 
  1850 ;;  ct              3    0        unsigned char [3]
  1851 ;;  cp              3    0        PTR unsigned char 
  1852 ;;  i               2    0        int 
  1853 ;;  done            2    0        int 
  1854 ;;  c               1    0        unsigned char 
  1855 ;; Return value:  Size  Location     Type
  1856 ;;                  2   11[COMRAM] int 
  1857 ;; Registers used:
  1858 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1859 ;; Tracked objects:
  1860 ;;		On entry : 0/0
  1861 ;;		On exit  : 0/0
  1862 ;;		Unchanged: 0/0
  1863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1864 ;;      Params:         6       0       0       0       0       0       0       0       0
  1865 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1866 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1867 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1868 ;;Total ram usage:        6 bytes
  1869 ;; Hardware stack levels used: 1
  1870 ;; Hardware stack levels required when called: 3
  1871 ;; This function calls:
  1872 ;;		i2_fputc
  1873 ;; This function is called by:
  1874 ;;		i2_vfprintf
  1875 ;; This function uses a non-reentrant model
  1876 ;;
  1877                           
  1878                           	psect	text14
  1879  000A50                     __ptext14:
  1880                           	callstack 0
  1881  000A50                     i2_vfpfcnvrt:
  1882                           	callstack 15
  1883  000A50                     
  1884                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.36\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          6\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  1885  000A50  C034  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  1886  000A54  C035  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  1887  000A58  CFDE FFF6          	movff	postinc2,tblptrl
  1888  000A5C  CFDD FFF7          	movff	postdec2,tblptrh
  1889  000A60                     	if	0	;tblptru may be non-zero
  1890  000A60                     	endif
  1891  000A60                     	if	0	;tblptru may be non-zero
  1892  000A60                     	endif
  1893  000A60  0008               	tblrd		*
  1894  000A62  50F5               	movf	tablat,w,c
  1895  000A64  0A25               	xorlw	37
  1896  000A66  A4D8               	btfss	status,2,c
  1897  000A68  EF38  F005         	goto	i2u71_41
  1898  000A6C  EF3A  F005         	goto	i2u71_40
  1899  000A70                     i2u71_41:
  1900  000A70  EF81  F005         	goto	i2l1409
  1901  000A74                     i2u71_40:
  1902  000A74                     
  1903                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  1904  000A74  C034  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  1905  000A78  C035  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  1906  000A7C  2ADE               	incf	postinc2,f,c
  1907  000A7E  0E00               	movlw	0
  1908  000A80  22DD               	addwfc	postdec2,f,c
  1909  000A82                     
  1910                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  1911  000A82  0E00               	movlw	0
  1912  000A84  6E22               	movwf	(_width+1)^0,c
  1913  000A86  0E00               	movlw	0
  1914  000A88  6E21               	movwf	_width^0,c
  1915  000A8A  C021  F025         	movff	_width,_flags
  1916  000A8E  C022  F026         	movff	_width+1,_flags+1
  1917  000A92                     
  1918                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  1919  000A92  6823               	setf	_prec^0,c
  1920  000A94  6824               	setf	(_prec+1)^0,c
  1921  000A96                     
  1922                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  1923  000A96  C034  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  1924  000A9A  C035  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  1925  000A9E  CFDE FFF6          	movff	postinc2,tblptrl
  1926  000AA2  CFDD FFF7          	movff	postdec2,tblptrh
  1927  000AA6                     	if	0	;tblptru may be non-zero
  1928  000AA6                     	endif
  1929  000AA6                     	if	0	;tblptru may be non-zero
  1930  000AA6                     	endif
  1931  000AA6  0008               	tblrd		*
  1932  000AA8  50F5               	movf	tablat,w,c
  1933  000AAA  0A25               	xorlw	37
  1934  000AAC  A4D8               	btfss	status,2,c
  1935  000AAE  EF5B  F005         	goto	i2u72_41
  1936  000AB2  EF5D  F005         	goto	i2u72_40
  1937  000AB6                     i2u72_41:
  1938  000AB6  EF74  F005         	goto	i2l1403
  1939  000ABA                     i2u72_40:
  1940  000ABA                     
  1941                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  1942  000ABA  C034  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  1943  000ABE  C035  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  1944  000AC2  2ADE               	incf	postinc2,f,c
  1945  000AC4  0E00               	movlw	0
  1946  000AC6  22DD               	addwfc	postdec2,f,c
  1947  000AC8                     
  1948                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  1949  000AC8  0E00               	movlw	0
  1950  000ACA  6E2A               	movwf	(i2fputc@c+1)^0,c
  1951  000ACC  0E25               	movlw	37
  1952  000ACE  6E29               	movwf	i2fputc@c^0,c
  1953  000AD0  C032  F02B         	movff	i2vfpfcnvrt@fp,i2fputc@fp
  1954  000AD4  C033  F02C         	movff	i2vfpfcnvrt@fp+1,i2fputc@fp+1
  1955  000AD8  ECE9  F005         	call	i2_fputc	;wreg free
  1956  000ADC                     i2l1399:
  1957                           
  1958                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  1959  000ADC  0E00               	movlw	0
  1960  000ADE  6E33               	movwf	(?i2_vfpfcnvrt+1)^0,c
  1961  000AE0  0E01               	movlw	1
  1962  000AE2  6E32               	movwf	?i2_vfpfcnvrt^0,c
  1963  000AE4  EF9C  F005         	goto	i2l797
  1964  000AE8                     i2l1403:
  1965                           
  1966                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  1967  000AE8  C034  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  1968  000AEC  C035  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  1969  000AF0  2ADE               	incf	postinc2,f,c
  1970  000AF2  0E00               	movlw	0
  1971  000AF4  22DD               	addwfc	postdec2,f,c
  1972  000AF6                     
  1973                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  1974  000AF6  0E00               	movlw	0
  1975  000AF8  6E33               	movwf	(?i2_vfpfcnvrt+1)^0,c
  1976  000AFA  0E00               	movlw	0
  1977  000AFC  6E32               	movwf	?i2_vfpfcnvrt^0,c
  1978  000AFE  EF9C  F005         	goto	i2l797
  1979  000B02                     i2l1409:
  1980                           
  1981                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  1982  000B02  C034  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  1983  000B06  C035  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  1984  000B0A  CFDE FFF6          	movff	postinc2,tblptrl
  1985  000B0E  CFDD FFF7          	movff	postdec2,tblptrh
  1986  000B12                     	if	0	;tblptru may be non-zero
  1987  000B12                     	endif
  1988  000B12                     	if	0	;tblptru may be non-zero
  1989  000B12                     	endif
  1990  000B12  0008               	tblrd		*
  1991  000B14  50F5               	movf	tablat,w,c
  1992  000B16  6E29               	movwf	i2fputc@c^0,c
  1993  000B18  6A2A               	clrf	(i2fputc@c+1)^0,c
  1994  000B1A  C032  F02B         	movff	i2vfpfcnvrt@fp,i2fputc@fp
  1995  000B1E  C033  F02C         	movff	i2vfpfcnvrt@fp+1,i2fputc@fp+1
  1996  000B22  ECE9  F005         	call	i2_fputc	;wreg free
  1997  000B26                     
  1998                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  1999  000B26  C034  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  2000  000B2A  C035  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  2001  000B2E  2ADE               	incf	postinc2,f,c
  2002  000B30  0E00               	movlw	0
  2003  000B32  22DD               	addwfc	postdec2,f,c
  2004  000B34  EF6E  F005         	goto	i2l1399
  2005  000B38                     i2l797:
  2006  000B38  0012               	return		;funcret
  2007  000B3A                     __end_ofi2_vfpfcnvrt:
  2008                           	callstack 0
  2009                           
  2010 ;; *************** function i2_fputc *****************
  2011 ;; Defined at:
  2012 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputc.c"
  2013 ;; Parameters:    Size  Location     Type
  2014 ;;  c               2    2[COMRAM] int 
  2015 ;;  fp              2    4[COMRAM] PTR struct _IO_FILE
  2016 ;;		 -> NULL(0), 
  2017 ;; Auto vars:     Size  Location     Type
  2018 ;;		None
  2019 ;; Return value:  Size  Location     Type
  2020 ;;                  2    2[COMRAM] int 
  2021 ;; Registers used:
  2022 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2023 ;; Tracked objects:
  2024 ;;		On entry : 0/0
  2025 ;;		On exit  : 0/0
  2026 ;;		Unchanged: 0/0
  2027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2028 ;;      Params:         4       0       0       0       0       0       0       0       0
  2029 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2030 ;;      Temps:          5       0       0       0       0       0       0       0       0
  2031 ;;      Totals:         9       0       0       0       0       0       0       0       0
  2032 ;;Total ram usage:        9 bytes
  2033 ;; Hardware stack levels used: 1
  2034 ;; Hardware stack levels required when called: 2
  2035 ;; This function calls:
  2036 ;;		i2_putch
  2037 ;; This function is called by:
  2038 ;;		i2_vfpfcnvrt
  2039 ;; This function uses a non-reentrant model
  2040 ;;
  2041                           
  2042                           	psect	text15
  2043  000BD2                     __ptext15:
  2044                           	callstack 0
  2045  000BD2                     i2_fputc:
  2046                           	callstack 15
  2047  000BD2  502B               	movf	i2fputc@fp^0,w,c
  2048  000BD4  102C               	iorwf	(i2fputc@fp+1)^0,w,c
  2049  000BD6  B4D8               	btfsc	status,2,c
  2050  000BD8  EFF0  F005         	goto	i2u65_41
  2051  000BDC  EFF2  F005         	goto	i2u65_40
  2052  000BE0                     i2u65_41:
  2053  000BE0  EFFB  F005         	goto	i2l1343
  2054  000BE4                     i2u65_40:
  2055  000BE4  502B               	movf	i2fputc@fp^0,w,c
  2056  000BE6  102C               	iorwf	(i2fputc@fp+1)^0,w,c
  2057  000BE8  A4D8               	btfss	status,2,c
  2058  000BEA  EFF9  F005         	goto	i2u66_41
  2059  000BEE  EFFB  F005         	goto	i2u66_40
  2060  000BF2                     i2u66_41:
  2061  000BF2  EF00  F006         	goto	i2l1345
  2062  000BF6                     i2u66_40:
  2063  000BF6                     i2l1343:
  2064  000BF6  5029               	movf	i2fputc@c^0,w,c
  2065  000BF8  EC78  F007         	call	i2_putch
  2066  000BFC  EF33  F006         	goto	i2l815
  2067  000C00                     i2l1345:
  2068  000C00  EE20 F009          	lfsr	2,9
  2069  000C04  502B               	movf	i2fputc@fp^0,w,c
  2070  000C06  26D9               	addwf	fsr2l,f,c
  2071  000C08  502C               	movf	(i2fputc@fp+1)^0,w,c
  2072  000C0A  22DA               	addwfc	fsr2h,f,c
  2073  000C0C  50DE               	movf	postinc2,w,c
  2074  000C0E  10DE               	iorwf	postinc2,w,c
  2075  000C10  B4D8               	btfsc	status,2,c
  2076  000C12  EF0D  F006         	goto	i2u67_41
  2077  000C16  EF0F  F006         	goto	i2u67_40
  2078  000C1A                     i2u67_41:
  2079  000C1A  EF2A  F006         	goto	i2l1349
  2080  000C1E                     i2u67_40:
  2081  000C1E  EE20 F009          	lfsr	2,9
  2082  000C22  502B               	movf	i2fputc@fp^0,w,c
  2083  000C24  26D9               	addwf	fsr2l,f,c
  2084  000C26  502C               	movf	(i2fputc@fp+1)^0,w,c
  2085  000C28  22DA               	addwfc	fsr2h,f,c
  2086  000C2A  EE10 F003          	lfsr	1,3
  2087  000C2E  502B               	movf	i2fputc@fp^0,w,c
  2088  000C30  26E1               	addwf	fsr1l,f,c
  2089  000C32  502C               	movf	(i2fputc@fp+1)^0,w,c
  2090  000C34  22E2               	addwfc	fsr1h,f,c
  2091  000C36  50DE               	movf	postinc2,w,c
  2092  000C38  5CE6               	subwf	postinc1,w,c
  2093  000C3A  50E6               	movf	postinc1,w,c
  2094  000C3C  0A80               	xorlw	128
  2095  000C3E  6E31               	movwf	(??i2_fputc+4)^0,c
  2096  000C40  50DE               	movf	postinc2,w,c
  2097  000C42  0A80               	xorlw	128
  2098  000C44  5831               	subwfb	(??i2_fputc+4)^0,w,c
  2099  000C46  B0D8               	btfsc	status,0,c
  2100  000C48  EF28  F006         	goto	i2u68_41
  2101  000C4C  EF2A  F006         	goto	i2u68_40
  2102  000C50                     i2u68_41:
  2103  000C50  EF33  F006         	goto	i2l815
  2104  000C54                     i2u68_40:
  2105  000C54                     i2l1349:
  2106  000C54  EE20 F003          	lfsr	2,3
  2107  000C58  502B               	movf	i2fputc@fp^0,w,c
  2108  000C5A  26D9               	addwf	fsr2l,f,c
  2109  000C5C  502C               	movf	(i2fputc@fp+1)^0,w,c
  2110  000C5E  22DA               	addwfc	fsr2h,f,c
  2111  000C60  2ADE               	incf	postinc2,f,c
  2112  000C62  0E00               	movlw	0
  2113  000C64  22DD               	addwfc	postdec2,f,c
  2114  000C66                     i2l815:
  2115  000C66  0012               	return		;funcret
  2116  000C68                     __end_ofi2_fputc:
  2117                           	callstack 0
  2118                           
  2119 ;; *************** function i2_putch *****************
  2120 ;; Defined at:
  2121 ;;		line 77 in file "./UART.h"
  2122 ;; Parameters:    Size  Location     Type
  2123 ;;  dato            1    wreg     unsigned char 
  2124 ;; Auto vars:     Size  Location     Type
  2125 ;;  dato            1    1[COMRAM] unsigned char 
  2126 ;; Return value:  Size  Location     Type
  2127 ;;                  1    wreg      void 
  2128 ;; Registers used:
  2129 ;;		wreg, status,2, cstack
  2130 ;; Tracked objects:
  2131 ;;		On entry : 0/0
  2132 ;;		On exit  : 0/0
  2133 ;;		Unchanged: 0/0
  2134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2135 ;;      Params:         0       0       0       0       0       0       0       0       0
  2136 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2137 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2138 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2139 ;;Total ram usage:        1 bytes
  2140 ;; Hardware stack levels used: 1
  2141 ;; Hardware stack levels required when called: 1
  2142 ;; This function calls:
  2143 ;;		i2_UART_write
  2144 ;; This function is called by:
  2145 ;;		i2_fputc
  2146 ;; This function uses a non-reentrant model
  2147 ;;
  2148                           
  2149                           	psect	text16
  2150  000EF0                     __ptext16:
  2151                           	callstack 0
  2152  000EF0                     i2_putch:
  2153                           	callstack 15
  2154                           
  2155                           ;incstack = 0
  2156                           ;i2putch@dato stored from wreg
  2157  000EF0  6E28               	movwf	i2putch@dato^0,c
  2158  000EF2                     
  2159                           ;./UART.h: 77: void putch(char dato);./UART.h: 78: {;./UART.h: 79:     UART_write(dato);
  2160  000EF2  5028               	movf	i2putch@dato^0,w,c
  2161  000EF4  EC66  F007         	call	i2_UART_write
  2162  000EF8  0012               	return		;funcret
  2163  000EFA                     __end_ofi2_putch:
  2164                           	callstack 0
  2165                           
  2166 ;; *************** function i2_UART_write *****************
  2167 ;; Defined at:
  2168 ;;		line 63 in file "./UART.h"
  2169 ;; Parameters:    Size  Location     Type
  2170 ;;  dato            1    wreg     unsigned char 
  2171 ;; Auto vars:     Size  Location     Type
  2172 ;;  dato            1    0[COMRAM] unsigned char 
  2173 ;; Return value:  Size  Location     Type
  2174 ;;                  1    wreg      void 
  2175 ;; Registers used:
  2176 ;;		wreg
  2177 ;; Tracked objects:
  2178 ;;		On entry : 0/0
  2179 ;;		On exit  : 0/0
  2180 ;;		Unchanged: 0/0
  2181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2182 ;;      Params:         0       0       0       0       0       0       0       0       0
  2183 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2184 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2185 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2186 ;;Total ram usage:        1 bytes
  2187 ;; Hardware stack levels used: 1
  2188 ;; This function calls:
  2189 ;;		Nothing
  2190 ;; This function is called by:
  2191 ;;		i2_putch
  2192 ;; This function uses a non-reentrant model
  2193 ;;
  2194                           
  2195                           	psect	text17
  2196  000ECC                     __ptext17:
  2197                           	callstack 0
  2198  000ECC                     i2_UART_write:
  2199                           	callstack 15
  2200                           
  2201                           ;incstack = 0
  2202                           ;i2UART_write@dato stored from wreg
  2203  000ECC  6E27               	movwf	i2UART_write@dato^0,c
  2204  000ECE                     
  2205                           ;./UART.h: 63: void UART_write(char dato);./UART.h: 64: {;./UART.h: 65:     TXREG = dato
      +                          ;
  2206  000ECE  C027  FFAD         	movff	i2UART_write@dato,4013	;volatile
  2207  000ED2                     i2l48:
  2208  000ED2  A2AC               	btfss	172,1,c	;volatile
  2209  000ED4  EF6E  F007         	goto	i2u60_41
  2210  000ED8  EF70  F007         	goto	i2u60_40
  2211  000EDC                     i2u60_41:
  2212  000EDC  EF69  F007         	goto	i2l48
  2213  000EE0                     i2u60_40:
  2214  000EE0  0012               	return		;funcret
  2215  000EE2                     __end_ofi2_UART_write:
  2216                           	callstack 0
  2217                           
  2218                           	psect	rparam
  2219  0000                     
  2220                           	psect	temp
  2221  00004C                     btemp:
  2222                           	callstack 0
  2223  00004C                     	ds	1
  2224  0000                     int$flags	set	btemp
  2225  0000                     wtemp8	set	btemp+1
  2226  0000                     ttemp5	set	btemp+1
  2227  0000                     ttemp6	set	btemp+4
  2228  0000                     ttemp7	set	btemp+8
  2229                           
  2230                           	psect	idloc
  2231                           
  2232                           ;Config register IDLOC0 @ 0x200000
  2233                           ;	unspecified, using default values
  2234  200000                     	org	2097152
  2235  200000  FF                 	db	255
  2236                           
  2237                           ;Config register IDLOC1 @ 0x200001
  2238                           ;	unspecified, using default values
  2239  200001                     	org	2097153
  2240  200001  FF                 	db	255
  2241                           
  2242                           ;Config register IDLOC2 @ 0x200002
  2243                           ;	unspecified, using default values
  2244  200002                     	org	2097154
  2245  200002  FF                 	db	255
  2246                           
  2247                           ;Config register IDLOC3 @ 0x200003
  2248                           ;	unspecified, using default values
  2249  200003                     	org	2097155
  2250  200003  FF                 	db	255
  2251                           
  2252                           ;Config register IDLOC4 @ 0x200004
  2253                           ;	unspecified, using default values
  2254  200004                     	org	2097156
  2255  200004  FF                 	db	255
  2256                           
  2257                           ;Config register IDLOC5 @ 0x200005
  2258                           ;	unspecified, using default values
  2259  200005                     	org	2097157
  2260  200005  FF                 	db	255
  2261                           
  2262                           ;Config register IDLOC6 @ 0x200006
  2263                           ;	unspecified, using default values
  2264  200006                     	org	2097158
  2265  200006  FF                 	db	255
  2266                           
  2267                           ;Config register IDLOC7 @ 0x200007
  2268                           ;	unspecified, using default values
  2269  200007                     	org	2097159
  2270  200007  FF                 	db	255
  2271                           
  2272                           	psect	config
  2273                           
  2274                           ;Config register CONFIG1L @ 0x300000
  2275                           ;	PLL Prescaler Selection bits
  2276                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  2277                           ;	System Clock Postscaler Selection bits
  2278                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  2279                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  2280                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  2281  300000                     	org	3145728
  2282  300000  00                 	db	0
  2283                           
  2284                           ;Config register CONFIG1H @ 0x300001
  2285                           ;	Oscillator Selection bits
  2286                           ;	FOSC = HS, HS oscillator (HS)
  2287                           ;	Fail-Safe Clock Monitor Enable bit
  2288                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2289                           ;	Internal/External Oscillator Switchover bit
  2290                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2291  300001                     	org	3145729
  2292  300001  0C                 	db	12
  2293                           
  2294                           ;Config register CONFIG2L @ 0x300002
  2295                           ;	Power-up Timer Enable bit
  2296                           ;	PWRT = ON, PWRT enabled
  2297                           ;	Brown-out Reset Enable bits
  2298                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  2299                           ;	Brown-out Reset Voltage bits
  2300                           ;	BORV = 3, Minimum setting 2.05V
  2301                           ;	USB Voltage Regulator Enable bit
  2302                           ;	VREGEN = OFF, USB voltage regulator disabled
  2303  300002                     	org	3145730
  2304  300002  18                 	db	24
  2305                           
  2306                           ;Config register CONFIG2H @ 0x300003
  2307                           ;	Watchdog Timer Enable bit
  2308                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2309                           ;	Watchdog Timer Postscale Select bits
  2310                           ;	WDTPS = 32768, 1:32768
  2311  300003                     	org	3145731
  2312  300003  1E                 	db	30
  2313                           
  2314                           ; Padding undefined space
  2315  300004                     	org	3145732
  2316  300004  FF                 	db	255
  2317                           
  2318                           ;Config register CONFIG3H @ 0x300005
  2319                           ;	CCP2 MUX bit
  2320                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  2321                           ;	PORTB A/D Enable bit
  2322                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  2323                           ;	Low-Power Timer 1 Oscillator Enable bit
  2324                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  2325                           ;	MCLR Pin Enable bit
  2326                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  2327  300005                     	org	3145733
  2328  300005  83                 	db	131
  2329                           
  2330                           ;Config register CONFIG4L @ 0x300006
  2331                           ;	Stack Full/Underflow Reset Enable bit
  2332                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2333                           ;	Single-Supply ICSP Enable bit
  2334                           ;	LVP = OFF, Single-Supply ICSP disabled
  2335                           ;	Extended Instruction Set Enable bit
  2336                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2337                           ;	Background Debugger Enable bit
  2338                           ;	DEBUG = 0x1, unprogrammed default
  2339  300006                     	org	3145734
  2340  300006  81                 	db	129
  2341                           
  2342                           ; Padding undefined space
  2343  300007                     	org	3145735
  2344  300007  FF                 	db	255
  2345                           
  2346                           ;Config register CONFIG5L @ 0x300008
  2347                           ;	Code Protection bit
  2348                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  2349                           ;	Code Protection bit
  2350                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  2351                           ;	Code Protection bit
  2352                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  2353                           ;	Code Protection bit
  2354                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  2355  300008                     	org	3145736
  2356  300008  0F                 	db	15
  2357                           
  2358                           ;Config register CONFIG5H @ 0x300009
  2359                           ;	Boot Block Code Protection bit
  2360                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  2361                           ;	Data EEPROM Code Protection bit
  2362                           ;	CPD = OFF, Data EEPROM is not code-protected
  2363  300009                     	org	3145737
  2364  300009  C0                 	db	192
  2365                           
  2366                           ;Config register CONFIG6L @ 0x30000A
  2367                           ;	Write Protection bit
  2368                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  2369                           ;	Write Protection bit
  2370                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  2371                           ;	Write Protection bit
  2372                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  2373                           ;	Write Protection bit
  2374                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  2375  30000A                     	org	3145738
  2376  30000A  0F                 	db	15
  2377                           
  2378                           ;Config register CONFIG6H @ 0x30000B
  2379                           ;	Configuration Register Write Protection bit
  2380                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  2381                           ;	Boot Block Write Protection bit
  2382                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  2383                           ;	Data EEPROM Write Protection bit
  2384                           ;	WRTD = OFF, Data EEPROM is not write-protected
  2385  30000B                     	org	3145739
  2386  30000B  E0                 	db	224
  2387                           
  2388                           ;Config register CONFIG7L @ 0x30000C
  2389                           ;	Table Read Protection bit
  2390                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2391                           ;	Table Read Protection bit
  2392                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2393                           ;	Table Read Protection bit
  2394                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2395                           ;	Table Read Protection bit
  2396                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2397  30000C                     	org	3145740
  2398  30000C  0F                 	db	15
  2399                           
  2400                           ;Config register CONFIG7H @ 0x30000D
  2401                           ;	Boot Block Table Read Protection bit
  2402                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  2403  30000D                     	org	3145741
  2404  30000D  40                 	db	64
  2405                           tosu	equ	0xFFF
  2406                           tosh	equ	0xFFE
  2407                           tosl	equ	0xFFD
  2408                           stkptr	equ	0xFFC
  2409                           pclatu	equ	0xFFB
  2410                           pclath	equ	0xFFA
  2411                           pcl	equ	0xFF9
  2412                           tblptru	equ	0xFF8
  2413                           tblptrh	equ	0xFF7
  2414                           tblptrl	equ	0xFF6
  2415                           tablat	equ	0xFF5
  2416                           prodh	equ	0xFF4
  2417                           prodl	equ	0xFF3
  2418                           indf0	equ	0xFEF
  2419                           postinc0	equ	0xFEE
  2420                           postdec0	equ	0xFED
  2421                           preinc0	equ	0xFEC
  2422                           plusw0	equ	0xFEB
  2423                           fsr0h	equ	0xFEA
  2424                           fsr0l	equ	0xFE9
  2425                           wreg	equ	0xFE8
  2426                           indf1	equ	0xFE7
  2427                           postinc1	equ	0xFE6
  2428                           postdec1	equ	0xFE5
  2429                           preinc1	equ	0xFE4
  2430                           plusw1	equ	0xFE3
  2431                           fsr1h	equ	0xFE2
  2432                           fsr1l	equ	0xFE1
  2433                           bsr	equ	0xFE0
  2434                           indf2	equ	0xFDF
  2435                           postinc2	equ	0xFDE
  2436                           postdec2	equ	0xFDD
  2437                           preinc2	equ	0xFDC
  2438                           plusw2	equ	0xFDB
  2439                           fsr2h	equ	0xFDA
  2440                           fsr2l	equ	0xFD9
  2441                           status	equ	0xFD8

Data Sizes:
    Strings     78
    Constant    0
    Data        0
    BSS         40
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     37      75
    BANK0           160     65      67
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    S1001$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    S1001$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 27
		 -> STR_3(CODE[24]), STR_2(CODE[27]), STR_1(CODE[27]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 27
		 -> STR_3(CODE[24]), STR_2(CODE[27]), STR_1(CODE[27]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 27
		 -> STR_3(CODE[24]), STR_2(CODE[27]), STR_1(CODE[27]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT_ISR_LOW in COMRAM

    None.

Critical Paths under _INT_isr in COMRAM

    _INT_isr->i2_printf
    i2_printf->i2_vfprintf
    i2_vfprintf->i2_vfpfcnvrt
    i2_vfpfcnvrt->i2_fputc
    i2_fputc->i2_putch
    i2_putch->i2_UART_write

Critical Paths under _main in BANK0

    _main->_UART_init_baud
    _UART_init_baud->___aldiv

Critical Paths under _INT_ISR_LOW in BANK0

    _INT_ISR_LOW->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_fputc
    _fputc->_putch
    _putch->_UART_write

Critical Paths under _INT_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT_ISR_LOW in BANK1

    None.

Critical Paths under _INT_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT_ISR_LOW in BANK2

    None.

Critical Paths under _INT_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT_ISR_LOW in BANK3

    None.

Critical Paths under _INT_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT_ISR_LOW in BANK4

    None.

Critical Paths under _INT_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT_ISR_LOW in BANK5

    None.

Critical Paths under _INT_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT_ISR_LOW in BANK6

    None.

Critical Paths under _INT_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT_ISR_LOW in BANK7

    None.

Critical Paths under _INT_isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     748
                           _INT_init
                     _UART_init_baud
 ---------------------------------------------------------------------------------
 (1) _UART_init_baud                                       9     5      4     748
                                             56 BANK0      9     5      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     604
                                             42 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (1) _INT_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _INT_ISR_LOW                                         13    13      0    2279
                                             29 BANK0     13    13      0
                             _printf
 ---------------------------------------------------------------------------------
 (4) _printf                                               6     4      2    2279
                                             25 BANK0      4     2      2
                           _vfprintf
 ---------------------------------------------------------------------------------
 (5) _vfprintf                                             8     2      6    1969
                                             17 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (6) _vfpfcnvrt                                           40    34      6    1475
                                             11 BANK0      6     0      6
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4     926
                                              2 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0      62
                                              1 BANK0      1     1      0
                         _UART_write
 ---------------------------------------------------------------------------------
 (9) _UART_write                                           1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INT_isr                                             8     8      0    1216
                                             29 COMRAM     8     8      0
                           i2_printf
 ---------------------------------------------------------------------------------
 (11) i2_printf                                            6     4      2    1216
                                             25 COMRAM     4     2      2
                         i2_vfprintf
 ---------------------------------------------------------------------------------
 (12) i2_vfprintf                                          8     2      6    1106
                                             17 COMRAM     8     2      6
                        i2_vfpfcnvrt
 ---------------------------------------------------------------------------------
 (13) i2_vfpfcnvrt                                        40    34      6     810
                                             11 COMRAM     6     0      6
                            i2_fputc
 ---------------------------------------------------------------------------------
 (14) i2_fputc                                             9     5      4     426
                                              2 COMRAM     9     5      4
                            i2_putch
 ---------------------------------------------------------------------------------
 (15) i2_putch                                             1     1      0      62
                                              1 COMRAM     1     1      0
                       i2_UART_write
 ---------------------------------------------------------------------------------
 (16) i2_UART_write                                        1     1      0      31
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _INT_init
   _UART_init_baud
     ___aldiv

 _INT_ISR_LOW (ROOT)
   _printf
     _vfprintf
       _vfpfcnvrt
         _fputc
           _putch
             _UART_write

 _INT_isr (ROOT)
   i2_printf
     i2_vfprintf
       i2_vfpfcnvrt
         i2_fputc
           i2_putch
             i2_UART_write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      28        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     41      43       5       41.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     25      4B       1       79.8%
BITBIGSFRl          33      0       0      26        0.0%
BITBIGSFRhhhlh      1F      0       0      21        0.0%
BITBIGSFRhhhlll     11      0       0      23        0.0%
BITBIGSFRhhhllh      E      0       0      22        0.0%
BITBIGSFRhhhhh       D      0       0      20        0.0%
BITBIGSFRhlh         C      0       0      24        0.0%
BITBIGSFRhll         9      0       0      25        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      8E      27        0.0%
DATA                 0      0      8E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Sat Mar 19 20:23:41 2022

                     l63 0EB2                       l39 0D3A                       l80 0E46  
                     l81 0E46                       bsr 000FE0                      l165 095C  
                    u500 093C                      u501 0938                      u450 0864  
                    u451 0860                      u460 0886                      u461 0882  
                    u470 08C0                      u471 08BC                      u535 0CFC  
                    u480 08E2                      u481 08DE                      u490 090A  
                    u491 0906                      wreg 000FE8      __end_ofi2_vfpfcnvrt 0B3A  
                   l1201 08AA                     l1211 08EC                     l1203 08C0  
                   l1213 090A                     l1205 08C8                     l1221 092C  
                   l1223 093C                     l1215 091A                     l1207 08D4  
                   l1311 0E28                     l1225 094C                     l1217 091C  
                   l1209 08E2                     l1313 0E2C                     l1219 0926  
                   l1315 0E30                     l1261 0D30                     l1253 0D28  
                   l1245 0CD8                     l1191 0874                     l1263 0D34  
                   l1255 0D2A                     l1247 0D26                     l1193 0878  
                   l1185 0850                     l1265 0D36                     l1257 0D2C  
                   l1195 0886                     l1187 0856                     l1267 0D38  
                   l1259 0D2E                     l1269 0E98                     l1197 0896  
                   l1189 0864                     l1199 089A                     STR_1 081C  
                   STR_2 0801                     STR_3 0837                     i1l51 0ECA  
                   i1l60 0EEE                     i1l48 0EBC                     i2l51 0EE0  
                   i1l75 0098                     i2l60 0EF8                     i2l48 0ED2  
                   i2l69 0CB4          __end_of_INT_isr 0CD8                     _dbuf 0001  
                   _main 0E28                     _prec 0023                     _nout 00A1  
                   fsr1h 000FE2                     fsr2h 000FDA                     fsr1l 000FE1  
                   fsr2l 000FD9                     btemp 004C                     start 00C8  
        __end_ofi2_fputc 0C68          __end_ofi2_putch 0EFA             ___param_bank 000000  
             i2_vfprintf 0D9E          __end_of___aldiv 095E                    ?_main 0027  
                  i1l802 0D94                    i1l803 0D9C                    i1l815 0BD0  
                  i1l764 0E26                    i2l802 0DF6                    i2l803 0DFE  
                  i1l797 0A4E                    i2l815 0C66                    i2l764 0E72  
                  i2l797 0B38                    _RCREG 000FAE             vfpfcnvrt@fmt 006D  
                  _SPBRG 000FAF                    _TXREG 000FAD         __end_of_INT_init 0EB4  
           ?_INT_ISR_LOW 0027                    _flags 0025                    _fputc 0B3A  
            ?_UART_write 0027                    _width 0021                    _putch 0EE2  
                  tablat 000FF5                    ttemp5 004D                    ttemp6 0050  
                  ttemp7 0054                    status 000FD8                    wtemp8 004D  
       __end_ofi2_printf 0E74          __initialization 0E74             __end_of_main 0E4E  
             i2printf@ap 0042              i2_vfpfcnvrt 0A50            i2vfpfcnvrt@ap 0036  
          i2vfpfcnvrt@fp 0032                   ??_main 00A1            __activetblptr 000001  
    UART_init_baud@valor 00A0                ??_INT_isr 0044                   _ADCON1 000FC1  
                 ?_fputc 0062                   ?_putch 0027                   i1l1321 0EE6  
                 i1l1331 0B6A                   i1l1317 0EB8                   i1l1333 0B88  
                 i1l1325 0B3A                   i1l1421 0D52                   i1l1335 0BBE  
                 i1l1327 0B4E                   i1l1423 0D78                   i1l1329 0B60  
                 i1l1361 09A4                   i1l1353 095E                   i1l1417 0D3C  
                 i1l1433 0E00                   i1l1363 09C8                   i1l1371 09FA  
                 i1l1355 0982                   i1l1419 0D44                   i1l1435 0E0A  
                 i1l1373 0A08                   i1l1365 09D6                   i1l1357 0990  
                 i1l1461 0046                   i1l1367 09EC                   i1l1359 09A0  
                 i1l1471 0096                   i1l1463 0054                   i1l1377 0A16  
                 i1l1465 0062                   i1l1379 0A3C                   i1l1467 0070  
                 i1l1469 0088                   i2l1323 0EF2                   i2l1411 0B26  
                 i2l1403 0AE8                   i2l1341 0BE4                   i2l1405 0AF6  
                 i2l1319 0ECE                   i2l1343 0BF6                   i2l1431 0DDA  
                 i2l1345 0C00                   i2l1409 0B02                   i2l1425 0D9E  
                 i2l1441 0E56                   i2l1347 0C1E                   i2l1339 0BD2  
                 i2l1427 0DA6                   i2l1349 0C54                   i2l1429 0DB4  
                 i2l1453 0C8A                   i2l1391 0A92                   i2l1439 0E4E  
                 i2l1455 0C98                   i2l1393 0A96                   i2l1385 0A50  
                 i2l1457 0CA6                   i2l1395 0ABA                   i2l1387 0A74  
                 i2l1459 0CB2                   i2l1397 0AC8                   i2l1389 0A82  
                 i2l1399 0ADC                ??i2_fputc 002D                ??i2_putch 0028  
           vfprintf@cfmt 0077                ??___aldiv 0092            i2vfprintf@fmt 003A  
            ?i2_vfprintf 0038                   clear_0 0E80                   isa$std 000001  
                 _printf 0E00                   fputc@c 0062             __mediumconst 0000  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
       __end_of_vfprintf 0D9E               __accesstop 0060  __end_of__initialization 0E86  
 UART_init_baud@baudRate 0098            ___rparam_used 000001           __pcstackCOMRAM 0027  
              ?_INT_init 0027            __end_of_fputc 0BD2            __end_of_putch 0EF0  
            i2printf@fmt 0040              i2putch@dato 0028           i2vfpfcnvrt@fmt 0034  
              ?i2_printf 0040                  ??_fputc 0066                  ??_putch 0061  
          ?i2_UART_write 0027               __pbssBANK0 00A1               ??_INT_init 008A  
                ?_printf 0079                  i1u61_20 0B4E                  i1u61_21 0B4A  
                i1u62_20 0B60                  i1u70_20 09C8                  i1u62_21 0B5C  
                i1u70_21 09C4                  i1u63_20 0B88                  i1u63_21 0B84  
                i1u64_20 0BBE                  i1u64_21 0BBA                  i1u80_27 007C  
                i1u73_20 0D94                  i1u73_21 0D90                  i1u59_20 0ECA  
                i1u59_21 0EC6                  i2u60_40 0EE0               ??i2_printf 0042  
                i2u60_41 0EDC                  i1u69_20 0982                  i1u69_21 097E  
                i1u78_20 0054                  i1u78_21 0050                  i1u79_20 0062  
                i1u79_21 005E                  i2u71_40 0A74                  i2u71_41 0A70  
                i2u72_40 0ABA                  _INT_isr 0008                  i2u72_41 0AB6  
                i2u65_40 0BE4                  i2u65_41 0BE0                  i2u66_40 0BF6  
                i2u74_40 0DF6                  i2u66_41 0BF2                  i2u74_41 0DF2  
                i2u67_40 0C1E                  i2u67_41 0C1A                  i2u68_40 0C54  
                i2u76_40 0C98                  i2u68_41 0C50                  i2u76_41 0C94  
                i2u77_40 0CA6                  i2u77_41 0CA2           ??i2_UART_write 0027  
           ??_UART_write 0060                  i2_fputc 0BD2                  i2_putch 0EF0  
                __Hparam 0000                  __Lparam 0000                  ___aldiv 0850  
              ?_vfprintf 0071           i2vfprintf@cfmt 003E             __psmallconst 0800  
           ?i2_vfpfcnvrt 0032                  __pcinit 0E74                  __ramtop 0800  
     __end_of_UART_write 0ECC                  __ptext0 0E28                  __ptext1 0CD8  
                __ptext2 0850                  __ptext3 0E98                  __ptext5 0E00  
                __ptext6 0D3C                  __ptext7 095E                  __ptext8 0B3A  
                __ptext9 0EE2         ___aldiv@dividend 008A           __pintcode_body 0C68  
   end_of_initialization 0E86                  fputc@fp 0064                  int_func 0C68  
      __end_of_vfpfcnvrt 0A50                _RCSTAbits 000FAB         ___aldiv@quotient 0094  
                postdec2 000FDD                  postinc0 000FEE                  postinc1 000FE6  
                postinc2 000FDE             ??i2_vfprintf 003E               ??_vfprintf 0077  
              _TRISBbits 000F93                _TRISCbits 000F94       __end_ofi2_vfprintf 0E00  
              _TXSTAbits 000FAC     __end_ofi2_UART_write 0EE2           _UART_init_baud 0CD8  
            vfpfcnvrt@ap 006F              vfpfcnvrt@fp 006B                i2fputc@fp 002B  
         __end_of_printf 0E28      start_initialization 0E74         i2UART_write@dato 0027  
            vfprintf@fmt 0073             i2vfprintf@ap 003C             i2vfprintf@fp 0038  
 __end_of_UART_init_baud 0D3C                 ??_printf 007B              __pbssCOMRAM 0001  
          ??_INT_ISR_LOW 007D            __pcstackBANK0 0060                 ?_INT_isr 0027  
               ?i2_fputc 0029                 ?i2_putch 0027                __pintcode 0008  
        ?_UART_init_baud 0098                 ?___aldiv 008A              __pintcodelo 0018  
            __smallconst 0800          ___aldiv@divisor 008E      __end_of_INT_ISR_LOW 00C8  
        ___aldiv@counter 0092                 _PIR1bits 000F9E                 _RCONbits 000FD0  
               _INT_init 0E98                _vfpfcnvrt 095E           UART_write@dato 0060  
               i2_printf 0E4E              _INTCON2bits 000FF1              _INTCON3bits 000FF0  
               i2fputc@c 0029             i2_UART_write 0ECC                 __Hrparam 0000  
             vfprintf@ap 0075                 __Lrparam 0000               vfprintf@fp 0071  
           __Lsmallconst 0800               ?_vfpfcnvrt 006B              _INT_ISR_LOW 0018  
               __ptext10 0EB4                 __ptext12 0E4E                 __ptext13 0D9E  
               __ptext14 0A50                 __ptext15 0BD2                 __ptext16 0EF0  
               __ptext17 0ECC                 isa$xinst 000000                 int$flags 004C  
               _vfprintf 0D3C                printf@fmt 0079                putch@dato 0061  
             _INTCONbits 000FF2                 intlevel1 0000                 intlevel2 0000  
       ??_UART_init_baud 009C                 printf@ap 007B            ??i2_vfpfcnvrt 0038  
            ??_vfpfcnvrt 0071             ___aldiv@sign 0093               _UART_write 0EB4  
